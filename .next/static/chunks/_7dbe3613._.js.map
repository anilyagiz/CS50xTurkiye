{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/connection/lib/fetcher.ts"],"sourcesContent":["import type { FetchResult } from \"@repo/connection/lib/types\";\nimport ky, { HTTPError, TimeoutError } from \"ky\";\n\nconst url =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://localhost:3002\"\n    : \"https://api.nakafa.com\";\n\nconst URL_DETAILS_REGEX = /:.*$/;\n\nexport async function fetcher<T>(\n  endpoint: string,\n  options: RequestInit\n): Promise<FetchResult<T | null>> {\n  try {\n    const response = await ky<T>(`${url}${endpoint}`, {\n      ...options,\n    }).json();\n\n    return { data: response, error: null };\n  } catch (error) {\n    if (error instanceof TimeoutError) {\n      return {\n        data: null,\n        error: {\n          status: 408,\n          message: \"Request timed out. Please try again later.\",\n        },\n      };\n    }\n\n    if (error instanceof SyntaxError) {\n      return { data: null, error: null };\n    }\n\n    if (error instanceof HTTPError) {\n      return {\n        data: null,\n        error: {\n          status: error.response.status,\n          message: error.message.replace(URL_DETAILS_REGEX, \"\"),\n        },\n      };\n    }\n\n    return {\n      data: null,\n      error: {\n        status: 500,\n        message: \"Internal server error.\",\n      },\n    };\n  }\n}\n"],"names":[],"mappings":";;;;AAIE;AAHF;AAAA;AAAA;;AAEA,MAAM,MACJ,uCACI,0BACA;AAEN,MAAM,oBAAoB;AAEnB,eAAe,QACpB,QAAgB,EAChB,OAAoB;IAEpB,IAAI;QACF,MAAM,WAAW,MAAM,IAAA,yKAAE,EAAI,AAAC,GAAQ,OAAN,KAAe,OAAT,WAAY;YAChD,GAAG,OAAO;QACZ,GAAG,IAAI;QAEP,OAAO;YAAE,MAAM;YAAU,OAAO;QAAK;IACvC,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,+KAAY,EAAE;YACjC,OAAO;gBACL,MAAM;gBACN,OAAO;oBACL,QAAQ;oBACR,SAAS;gBACX;YACF;QACF;QAEA,IAAI,iBAAiB,aAAa;YAChC,OAAO;gBAAE,MAAM;gBAAM,OAAO;YAAK;QACnC;QAEA,IAAI,iBAAiB,yKAAS,EAAE;YAC9B,OAAO;gBACL,MAAM;gBACN,OAAO;oBACL,QAAQ,MAAM,QAAQ,CAAC,MAAM;oBAC7B,SAAS,MAAM,OAAO,CAAC,OAAO,CAAC,mBAAmB;gBACpD;YACF;QACF;QAEA,OAAO;YACL,MAAM;YACN,OAAO;gBACL,QAAQ;gBACR,SAAS;YACX;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/connection/lib/utils.ts"],"sourcesContent":["/**\n * Clean a slug, remove slash at the beginning and the end\n * @param slug - The slug to clean, example: \"/hello/world\" -> \"hello/world\"\n * @returns The cleaned slug\n */\nexport function cleanSlug(slug: string): string {\n  return slug.replace(/^\\/+|\\/+$/g, \"\");\n}\n"],"names":[],"mappings":"AAAA;;;;CAIC;;;;AACM,SAAS,UAAU,IAAY;IACpC,OAAO,KAAK,OAAO,CAAC,cAAc;AACpC","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/connection/routes/contents.ts"],"sourcesContent":["import { fetcher } from \"@repo/connection/lib/fetcher\";\nimport type { FetchResult } from \"@repo/connection/lib/types\";\nimport { cleanSlug } from \"@repo/connection/lib/utils\";\nimport type { Content } from \"@repo/contents/_types/content\";\nimport type { Surah } from \"@repo/contents/_types/quran\";\n\nconst PREFIX = \"/contents\";\n\nexport const contents = {\n  getContents,\n  getContent,\n  getSurah,\n};\n\nasync function getContents({\n  slug,\n  withRaw = true,\n  ...base\n}: { slug: string; withRaw?: boolean } & RequestInit): Promise<\n  FetchResult<Content[]>\n> {\n  const url = `${PREFIX}/${cleanSlug(slug)}`;\n  const { data, error } = await fetcher<Content[]>(url, {\n    method: \"GET\",\n    ...base,\n  });\n\n  if (error) {\n    return {\n      data: [],\n      error,\n    };\n  }\n\n  if (!data) {\n    return {\n      data: [],\n      error: {\n        status: 404,\n        message: \"Contents not found\",\n      },\n    };\n  }\n\n  if (!withRaw) {\n    return {\n      data: data.map((item) => ({ ...item, raw: \"\" })),\n      error,\n    };\n  }\n\n  return {\n    data,\n    error,\n  };\n}\n\nasync function getContent({\n  slug,\n  ...base\n}: {\n  slug: string;\n} & RequestInit): Promise<FetchResult<Content | null>> {\n  const cleanedSlug = cleanSlug(slug);\n  const url = `${PREFIX}/${cleanedSlug}`;\n  const { data, error } = await fetcher<Content[]>(url, {\n    method: \"GET\",\n    ...base,\n  });\n\n  if (error) {\n    return {\n      data: null,\n      error,\n    };\n  }\n\n  const content = data?.find(\n    (c) => cleanSlug(`/${c.locale}/${c.slug}`) === cleanedSlug\n  );\n\n  if (!content) {\n    return {\n      data: null,\n      error: {\n        status: 404,\n        message: \"Content not found. Please find another content.\",\n      },\n    };\n  }\n\n  return {\n    data: content,\n    error,\n  };\n}\n\nasync function getSurah({\n  surah,\n  ...base\n}: {\n  surah: number;\n} & RequestInit): Promise<FetchResult<Surah | null>> {\n  const url = `${PREFIX}/quran/${surah}`;\n  const { data, error } = await fetcher<Surah>(url, {\n    method: \"GET\",\n    ...base,\n  });\n\n  if (error) {\n    return {\n      data: null,\n      error,\n    };\n  }\n\n  return {\n    data,\n    error,\n  };\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;AAIA,MAAM,SAAS;AAER,MAAM,WAAW;IACtB;IACA;IACA;AACF;AAEA,eAAe,YAAY,KAIyB;QAJzB,EACzB,IAAI,EACJ,UAAU,IAAI,EACd,GAAG,MAC+C,GAJzB;IAOzB,MAAM,MAAM,AAAC,GAAY,OAAV,QAAO,KAAmB,OAAhB,IAAA,sJAAS,EAAC;IACnC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,IAAA,sJAAO,EAAY,KAAK;QACpD,QAAQ;QACR,GAAG,IAAI;IACT;IAEA,IAAI,OAAO;QACT,OAAO;YACL,MAAM,EAAE;YACR;QACF;IACF;IAEA,IAAI,CAAC,MAAM;QACT,OAAO;YACL,MAAM,EAAE;YACR,OAAO;gBACL,QAAQ;gBACR,SAAS;YACX;QACF;IACF;IAEA,IAAI,CAAC,SAAS;QACZ,OAAO;YACL,MAAM,KAAK,GAAG,CAAC,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,KAAK;gBAAG,CAAC;YAC9C;QACF;IACF;IAEA,OAAO;QACL;QACA;IACF;AACF;AAEA,eAAe,WAAW,KAKX;QALW,EACxB,IAAI,EACJ,GAAG,MAGU,GALW;IAMxB,MAAM,cAAc,IAAA,sJAAS,EAAC;IAC9B,MAAM,MAAM,AAAC,GAAY,OAAV,QAAO,KAAe,OAAZ;IACzB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,IAAA,sJAAO,EAAY,KAAK;QACpD,QAAQ;QACR,GAAG,IAAI;IACT;IAEA,IAAI,OAAO;QACT,OAAO;YACL,MAAM;YACN;QACF;IACF;IAEA,MAAM,UAAU,iBAAA,2BAAA,KAAM,IAAI,CACxB,CAAC,IAAM,IAAA,sJAAS,EAAC,AAAC,IAAe,OAAZ,EAAE,MAAM,EAAC,KAAU,OAAP,EAAE,IAAI,OAAQ;IAGjD,IAAI,CAAC,SAAS;QACZ,OAAO;YACL,MAAM;YACN,OAAO;gBACL,QAAQ;gBACR,SAAS;YACX;QACF;IACF;IAEA,OAAO;QACL,MAAM;QACN;IACF;AACF;AAEA,eAAe,SAAS,KAKT;QALS,EACtB,KAAK,EACL,GAAG,MAGU,GALS;IAMtB,MAAM,MAAM,AAAC,GAAkB,OAAhB,QAAO,WAAe,OAAN;IAC/B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,IAAA,sJAAO,EAAQ,KAAK;QAChD,QAAQ;QACR,GAAG,IAAI;IACT;IAEA,IAAI,OAAO;QACT,OAAO;YACL,MAAM;YACN;QACF;IACF;IAEA,OAAO;QACL;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/connection/routes/index.ts"],"sourcesContent":["import { contents } from \"@repo/connection/routes/contents\";\n\nexport const api = {\n  contents: {\n    ...contents,\n  },\n};\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,MAAM;IACjB,UAAU;QACR,GAAG,2JAAQ;IACb;AACF","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/apps/www/lib/utils/github.ts"],"sourcesContent":["const GITHUB_URL = \"/nakafaai/nakafa.com\";\n\nexport function getGithubUrl({\n  path,\n  ref = \"/tree/main\",\n}: {\n  path: string;\n  ref?: string;\n}) {\n  return `https://github.com${GITHUB_URL}${ref}${path}` as const;\n}\n\nexport function getRawGithubUrl(path: string) {\n  const cleanPath = path.startsWith(\"/\") ? path : `/${path}`;\n  return `https://raw.githubusercontent.com${GITHUB_URL}/refs/heads/main${cleanPath}` as const;\n}\n"],"names":[],"mappings":";;;;;;AAAA,MAAM,aAAa;AAEZ,SAAS,aAAa,KAM5B;QAN4B,EAC3B,IAAI,EACJ,MAAM,YAAY,EAInB,GAN4B;IAO3B,OAAO,AAAC,qBAAiC,OAAb,YAAmB,OAAN,KAAW,OAAL;AACjD;AAEO,SAAS,gBAAgB,IAAY;IAC1C,MAAM,YAAY,KAAK,UAAU,CAAC,OAAO,OAAO,AAAC,IAAQ,OAAL;IACpD,OAAO,AAAC,oCAAgE,OAA7B,YAAW,oBAA4B,OAAV;AAC1E","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/apps/www/components/shared/D%3A/github/nakafa.com-main/apps/www/components/shared/open-content.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  SiClaude,\n  SiGithub,\n  SiGooglegemini,\n  SiOpenai,\n} from \"@icons-pack/react-simple-icons\";\nimport { api } from \"@repo/connection/routes\";\nimport { Button } from \"@repo/design-system/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@repo/design-system/components/ui/dropdown-menu\";\nimport { SpinnerIcon } from \"@repo/design-system/components/ui/icons\";\nimport { cn } from \"@repo/design-system/lib/utils\";\nimport { Link } from \"@repo/internationalization/src/navigation\";\nimport {\n  ChevronDownIcon,\n  CopyIcon,\n  ExternalLinkIcon,\n  MessageCircleIcon,\n  SparklesIcon,\n} from \"lucide-react\";\nimport { useTranslations } from \"next-intl\";\nimport { useState, useTransition } from \"react\";\nimport { toast } from \"sonner\";\nimport { useAi } from \"@/lib/context/use-ai\";\nimport { getGithubUrl } from \"@/lib/utils/github\";\n\nexport function OpenContent({ slug }: { slug: string }) {\n  return (\n    <div className=\"inline-flex divide-x divide-secondary-foreground/10 rounded-md shadow-xs rtl:space-x-reverse\">\n      <LLmCopyButton slug={slug} />\n      <ViewOptions slug={slug} />\n    </div>\n  );\n}\n\nexport function AskAiButton() {\n  const setOpen = useAi((state) => state.setOpen);\n  const t = useTranslations(\"Ai\");\n\n  return (\n    <Button onClick={() => setOpen(true)}>\n      <SparklesIcon />\n      {t(\"ask-nina\")}\n    </Button>\n  );\n}\n\nfunction LLmCopyButton({ slug }: { slug: string }) {\n  const t = useTranslations(\"Common\");\n  const [isPending, startTransition] = useTransition();\n\n  const handleCopy = () => {\n    startTransition(async () => {\n      const { data, error } = await api.contents.getContent({\n        slug,\n      });\n\n      if (error) {\n        toast.error(error.message, {\n          position: \"bottom-center\",\n        });\n        return;\n      }\n\n      if (!data) {\n        toast.error(t(\"copy-error\"), {\n          position: \"bottom-center\",\n        });\n        return;\n      }\n\n      navigator.clipboard\n        .writeText(data.raw)\n        .then(() => {\n          toast.success(t(\"copy-success\"), {\n            position: \"bottom-center\",\n          });\n        })\n        .catch((e) => {\n          toast.error(e.message, {\n            position: \"bottom-center\",\n          });\n        });\n    });\n  };\n\n  return (\n    <Button\n      className=\"rounded-none shadow-none first:rounded-s-md last:rounded-e-md focus-visible:z-10\"\n      disabled={isPending}\n      onClick={handleCopy}\n      variant=\"secondary\"\n    >\n      {isPending ? (\n        <SpinnerIcon className=\"size-4\" />\n      ) : (\n        <CopyIcon className=\"size-4\" />\n      )}\n      {t(\"copy-content\")}\n    </Button>\n  );\n}\n\nfunction ViewOptions({ slug }: { slug: string }) {\n  const t = useTranslations(\"Common\");\n\n  const locale = slug.split(\"/\")[1];\n  const path = `/${slug.split(\"/\").slice(2).join(\"/\")}`;\n\n  const markdownUrl = new URL(`${slug}.mdx`, \"https://nakafa.com\");\n  const q = `I’m looking at this ${markdownUrl}, help me understand. Explain to me what is this about.`;\n\n  const claude = `https://claude.ai/new?${new URLSearchParams({\n    q,\n  })}`;\n  const gpt = `https://chatgpt.com/?${new URLSearchParams({\n    hints: \"search\",\n    q,\n  })}`;\n  const gemini = `https://gemini.google.com/app?${new URLSearchParams({\n    q,\n  })}`;\n  const t3 = `https://t3.chat/new?${new URLSearchParams({\n    q,\n  })}`;\n\n  const githubUrl = getGithubUrl({\n    path: `/packages/contents${path}/${locale}.mdx`,\n  });\n\n  const [open, setOpen] = useState(false);\n\n  return (\n    <DropdownMenu onOpenChange={setOpen} open={open}>\n      <DropdownMenuTrigger asChild>\n        <Button\n          className=\"rounded-none shadow-none first:rounded-s-md last:rounded-e-md focus-visible:z-10\"\n          size=\"icon\"\n          variant=\"secondary\"\n        >\n          <span className=\"sr-only\">{t(\"open\")}</span>\n          <ChevronDownIcon\n            className={cn(\"size-4 transition-transform\", open && \"rotate-180\")}\n          />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"w-56\">\n        {[\n          {\n            title: t(\"open-in-github\"),\n            href: githubUrl,\n            icon: <SiGithub />,\n          },\n          {\n            title: t(\"open-in-chatgpt\"),\n            href: gpt,\n            icon: <SiOpenai />,\n          },\n          {\n            title: t(\"open-in-gemini\"),\n            href: gemini,\n            icon: <SiGooglegemini />,\n          },\n          {\n            title: t(\"open-in-claude\"),\n            href: claude,\n            icon: <SiClaude />,\n          },\n          {\n            title: t(\"open-in-t3-chat\"),\n            href: t3,\n            icon: <MessageCircleIcon />,\n          },\n        ].map((item) => (\n          <DropdownMenuItem asChild className=\"cursor-pointer\" key={item.title}>\n            <Link href={item.href} target=\"_blank\">\n              {item.icon}\n              {item.title}\n\n              <ExternalLinkIcon className=\"ms-auto size-3.5\" />\n            </Link>\n          </DropdownMenuItem>\n        ))}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n"],"names":["c","_c","SiClaude","SiGithub","SiGooglegemini","SiOpenai","api","Button","DropdownMenu","DropdownMenuContent","DropdownMenuItem","DropdownMenuTrigger","SpinnerIcon","cn","Link","ChevronDownIcon","CopyIcon","ExternalLinkIcon","MessageCircleIcon","SparklesIcon","useTranslations","useState","useTransition","toast","useAi","getGithubUrl","OpenContent","t0","$","$i","Symbol","for","slug","t1","AskAiButton","setOpen","_temp","t","t2","t3","state","LLmCopyButton","isPending","startTransition","data","error","contents","getContent","message","position","navigator","clipboard","writeText","raw","then","success","catch","_temp2","handleCopy","t4","e","ViewOptions","locale","split","path","slice","join","markdownUrl","URL","q","claude","URLSearchParams","gpt","hints","gemini","githubUrl","open","t5","t6","t7","t8","t9","t10","t11","t12","title","href","icon","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","map","_temp3","t26","item"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 864, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/ui/D%3A/github/nakafa.com-main/packages/design-system/components/ui/card.tsx"],"sourcesContent":["import { cn } from \"@repo/design-system/lib/utils\";\nimport type * as React from \"react\";\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      className={cn(\n        \"flex flex-col gap-6 rounded-xl border bg-card py-6 text-card-foreground shadow-sm\",\n        className\n      )}\n      data-slot=\"card\"\n      {...props}\n    />\n  );\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      data-slot=\"card-header\"\n      {...props}\n    />\n  );\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      className={cn(\"font-semibold leading-tight\", className)}\n      data-slot=\"card-title\"\n      {...props}\n    />\n  );\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      data-slot=\"card-description\"\n      {...props}\n    />\n  );\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      data-slot=\"card-action\"\n      {...props}\n    />\n  );\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      className={cn(\"px-6\", className)}\n      data-slot=\"card-content\"\n      {...props}\n    />\n  );\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      data-slot=\"card-footer\"\n      {...props}\n    />\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n};\n"],"names":["cn","Card","t0","$","_c","$i","Symbol","for","className","props","t1","t2","CardHeader","CardTitle","CardDescription","CardAction","CardContent","CardFooter"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 1231, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/apps/www/components/shared/D%3A/github/nakafa.com-main/apps/www/components/shared/ref-content.tsx"],"sourcesContent":["\"use client\";\n\nimport { SiDiscord, SiGithub, SiYoutube } from \"@icons-pack/react-simple-icons\";\nimport type { Reference } from \"@repo/contents/_types/content\";\nimport { Button } from \"@repo/design-system/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport { ScrollArea } from \"@repo/design-system/components/ui/scroll-area\";\nimport { Separator } from \"@repo/design-system/components/ui/separator\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@repo/design-system/components/ui/sheet\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from \"@repo/design-system/components/ui/tooltip\";\nimport { cleanupUrl, cn, formatUrl } from \"@repo/design-system/lib/utils\";\nimport {\n  BookIcon,\n  BookOpenIcon,\n  CalendarIcon,\n  GlobeIcon,\n  LayersIcon,\n  PencilIcon,\n} from \"lucide-react\";\nimport { useTranslations } from \"next-intl\";\nimport { useState } from \"react\";\n\ntype Props = {\n  /** The URL of the GitHub repository. */\n  githubUrl?: string;\n  /** The title of the references (sheet title) */\n  title?: string;\n  /** The references to display (sheet content) */\n  references?: Reference[];\n  /** The className of the references. */\n  className?: string;\n};\n\nexport function RefContent({ title, references, githubUrl, className }: Props) {\n  const t = useTranslations(\"Common\");\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const showSheet = references && title;\n\n  return (\n    <>\n      <div className={cn(\"space-y-4\", className)}>\n        <h2\n          className=\"scroll-mt-28 font-medium text-2xl leading-tight tracking-tight\"\n          id={t(\"references\")}\n        >\n          {t(\"references\")}\n        </h2>\n\n        <div className=\"flex flex-wrap items-center gap-2\">\n          {showSheet && (\n            <Tooltip>\n              <TooltipTrigger asChild>\n                <Button\n                  aria-label={t(\"bibliography\")}\n                  onClick={() => setOpen(!open)}\n                  size=\"icon\"\n                  variant=\"outline\"\n                >\n                  <span className=\"sr-only\">{t(\"bibliography\")}</span>\n                  <LayersIcon className=\"size-4\" />\n                </Button>\n              </TooltipTrigger>\n              <TooltipContent side=\"bottom\">\n                <p>{t(\"bibliography\")}</p>\n              </TooltipContent>\n            </Tooltip>\n          )}\n\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <Button\n                aria-label={t(\"source-code\")}\n                asChild\n                size=\"icon\"\n                variant=\"outline\"\n              >\n                <a\n                  href={githubUrl ?? \"https://github.com/nakafaai/nakafa.com\"}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  title={t(\"source-code\")}\n                >\n                  <span className=\"sr-only\">{t(\"source-code\")}</span>\n                  <SiGithub className=\"size-4\" />\n                </a>\n              </Button>\n            </TooltipTrigger>\n            <TooltipContent side=\"bottom\">\n              <p>{t(\"source-code\")}</p>\n            </TooltipContent>\n          </Tooltip>\n\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <Button asChild size=\"icon\" variant=\"outline\">\n                <a\n                  href=\"https://www.youtube.com/@nakafaa\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  title={t(\"videos\")}\n                >\n                  <span className=\"sr-only\">{t(\"videos\")}</span>\n                  <SiYoutube className=\"size-4\" />\n                </a>\n              </Button>\n            </TooltipTrigger>\n            <TooltipContent side=\"bottom\">\n              <p>{t(\"videos\")}</p>\n            </TooltipContent>\n          </Tooltip>\n\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <Button asChild size=\"icon\" variant=\"outline\">\n                <a\n                  href=\"https://discord.gg/CPCSfKhvfQ\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  title={t(\"community\")}\n                >\n                  <span className=\"sr-only\">{t(\"community\")}</span>\n                  <SiDiscord className=\"size-4\" />\n                </a>\n              </Button>\n            </TooltipTrigger>\n            <TooltipContent side=\"bottom\">\n              <p>{t(\"community\")}</p>\n            </TooltipContent>\n          </Tooltip>\n        </div>\n      </div>\n\n      {showSheet && (\n        <Sheet modal={false} onOpenChange={setOpen} open={open}>\n          <SheetContent className=\"w-6/7 sm:max-w-xl\">\n            <div className=\"flex h-full flex-col\">\n              <SheetHeader>\n                <SheetTitle className=\"text-2xl\">\n                  {references.length} {t(\"references\")}\n                </SheetTitle>\n                <SheetDescription>{title}</SheetDescription>\n              </SheetHeader>\n\n              <Separator />\n\n              <div className=\"flex flex-1 flex-col overflow-hidden\">\n                <ScrollArea className=\"h-full px-4\">\n                  <div className=\"flex flex-col gap-4 py-4\">\n                    {references.map((reference) => {\n                      const url = reference.url\n                        ? formatUrl(reference.url)\n                        : t(\"no-website\");\n                      const cleanUrl = cleanupUrl(url).split(\"/\")[0];\n\n                      return (\n                        <Card key={reference.title}>\n                          <CardHeader>\n                            <CardTitle\n                              className=\"line-clamp-1 capitalize\"\n                              title={reference.title}\n                            >\n                              {reference.title.toLowerCase()}\n                            </CardTitle>\n                            <CardDescription className=\"flex items-center gap-1\">\n                              <GlobeIcon className=\"size-4 shrink-0\" />\n                              {reference.url ? (\n                                <a\n                                  className=\"underline-offset-4 hover:underline\"\n                                  href={reference.url}\n                                  rel=\"noopener noreferrer\"\n                                  target=\"_blank\"\n                                >\n                                  {cleanUrl}\n                                </a>\n                              ) : (\n                                <span>{t(\"no-website\")}</span>\n                              )}\n                            </CardDescription>\n                          </CardHeader>\n\n                          <CardContent className=\"space-y-2\">\n                            <div className=\"flex items-center gap-1\">\n                              <PencilIcon className=\"size-4 shrink-0\" />\n                              <span className=\"line-clamp-1 text-sm\">\n                                {reference.authors}\n                              </span>\n                            </div>\n\n                            <div className=\"flex items-center gap-1\">\n                              <CalendarIcon className=\"size-4 shrink-0\" />\n                              <span className=\"text-sm\">{reference.year}</span>\n                            </div>\n\n                            {reference.publication && (\n                              <div className=\"flex items-center gap-1\">\n                                <BookOpenIcon className=\"size-4 shrink-0\" />\n                                <span className=\"line-clamp-1 text-sm\">\n                                  {reference.publication}\n                                </span>\n                              </div>\n                            )}\n\n                            {reference.details && (\n                              <div className=\"flex items-center gap-1\">\n                                <BookIcon className=\"size-4 shrink-0\" />\n                                <span className=\"text-sm\">\n                                  {reference.details}\n                                </span>\n                              </div>\n                            )}\n                          </CardContent>\n                        </Card>\n                      );\n                    })}\n                  </div>\n                </ScrollArea>\n              </div>\n            </div>\n          </SheetContent>\n        </Sheet>\n      )}\n    </>\n  );\n}\n"],"names":["c","_c","SiDiscord","SiGithub","SiYoutube","Button","Card","CardContent","CardDescription","CardHeader","CardTitle","ScrollArea","Separator","Sheet","SheetContent","SheetDescription","SheetHeader","SheetTitle","Tooltip","TooltipContent","TooltipTrigger","cleanupUrl","cn","formatUrl","BookIcon","BookOpenIcon","CalendarIcon","GlobeIcon","LayersIcon","PencilIcon","useTranslations","useState","RefContent","t0","$","$i","Symbol","for","title","references","githubUrl","className","t","open","setOpen","showSheet","t1","t2","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","t31","t32","t33","t34","t35","length","map","reference","url","cleanUrl","split","toLowerCase","authors","year","publication","details","t36"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 2126, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/code-block/D%3A/github/nakafa.com-main/packages/design-system/components/code-block/index.tsx"],"sourcesContent":["\"use client\";\n\nimport { type IconType, SiGnometerminal } from \"@icons-pack/react-simple-icons\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { Button } from \"@repo/design-system/components/ui/button\";\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n} from \"@repo/design-system/components/ui/select\";\nimport { filenameIconMap } from \"@repo/design-system/lib/programming\";\nimport { cn } from \"@repo/design-system/lib/utils\";\nimport {\n  transformerNotationDiff,\n  transformerNotationErrorLevel,\n  transformerNotationFocus,\n  transformerNotationHighlight,\n  transformerNotationWordHighlight,\n} from \"@shikijs/transformers\";\nimport { CheckIcon, CopyIcon } from \"lucide-react\";\nimport { useTranslations } from \"next-intl\";\nimport type {\n  ComponentProps,\n  HTMLAttributes,\n  ReactElement,\n  ReactNode,\n} from \"react\";\nimport { cloneElement, useEffect, useState } from \"react\";\nimport {\n  type BundledLanguage,\n  type CodeOptionsMultipleThemes,\n  codeToHtml,\n} from \"shiki\";\nimport { createContext, useContextSelector } from \"use-context-selector\";\n\nexport type { BundledLanguage } from \"shiki\";\n\nconst lineNumberClassNames = cn(\n  \"[&_code]:[counter-reset:line]\",\n  \"[&_code]:[counter-increment:line_0]\",\n  \"[&_.line]:before:content-[counter(line)]\",\n  \"[&_.line]:before:inline-block\",\n  \"[&_.line]:before:[counter-increment:line]\",\n  \"[&_.line]:before:w-4\",\n  \"[&_.line]:before:mr-4\",\n  \"[&_.line]:before:text-[13px]\",\n  \"[&_.line]:before:text-right\",\n  \"[&_.line]:before:text-muted-foreground/50\",\n  \"[&_.line]:before:font-mono\",\n  \"[&_.line]:before:select-none\"\n);\n\nconst darkModeClassNames = cn(\n  \"dark:[&_.shiki]:!text-[var(--shiki-dark)]\",\n  \"dark:[&_.shiki]:![font-style:var(--shiki-dark-font-style)]\",\n  \"dark:[&_.shiki]:![font-weight:var(--shiki-dark-font-weight)]\",\n  \"dark:[&_.shiki]:![text-decoration:var(--shiki-dark-text-decoration)]\",\n  \"dark:[&_.shiki_span]:!text-[var(--shiki-dark)]\",\n  \"dark:[&_.shiki_span]:![font-style:var(--shiki-dark-font-style)]\",\n  \"dark:[&_.shiki_span]:![font-weight:var(--shiki-dark-font-weight)]\",\n  \"dark:[&_.shiki_span]:![text-decoration:var(--shiki-dark-text-decoration)]\"\n);\n\nconst lineHighlightClassNames = cn(\n  \"[&_.line.highlighted]:bg-blue-50\",\n  \"[&_.line.highlighted]:after:bg-blue-500\",\n  \"[&_.line.highlighted]:after:absolute\",\n  \"[&_.line.highlighted]:after:left-0\",\n  \"[&_.line.highlighted]:after:top-0\",\n  \"[&_.line.highlighted]:after:bottom-0\",\n  \"[&_.line.highlighted]:after:w-0.5\",\n  \"dark:[&_.line.highlighted]:!bg-blue-500/10\"\n);\n\nconst lineDiffClassNames = cn(\n  \"[&_.line.diff]:after:absolute\",\n  \"[&_.line.diff]:after:left-0\",\n  \"[&_.line.diff]:after:top-0\",\n  \"[&_.line.diff]:after:bottom-0\",\n  \"[&_.line.diff]:after:w-0.5\",\n  \"[&_.line.diff.add]:bg-emerald-50\",\n  \"[&_.line.diff.add]:after:bg-emerald-500\",\n  \"[&_.line.diff.remove]:bg-rose-50\",\n  \"[&_.line.diff.remove]:after:bg-rose-500\",\n  \"dark:[&_.line.diff.add]:!bg-emerald-500/10\",\n  \"dark:[&_.line.diff.remove]:!bg-rose-500/10\"\n);\n\nconst lineFocusedClassNames = cn(\n  \"[&_code:has(.focused)_.line]:blur-[2px]\",\n  \"[&_code:has(.focused)_.line.focused]:blur-none\"\n);\n\nconst wordHighlightClassNames = cn(\n  \"[&_.highlighted-word]:bg-blue-50\",\n  \"dark:[&_.highlighted-word]:!bg-blue-500/10\"\n);\n\nconst codeBlockClassName = cn(\n  \"mt-0 bg-muted/40 text-sm\",\n  \"[&_pre]:py-4\",\n  \"[&_pre]:overflow-x-auto\",\n  \"[&_.shiki]:!bg-[var(--shiki-bg)]\",\n  \"[&_code]:w-full\",\n  \"[&_code]:grid\",\n  \"[&_code]:bg-transparent\",\n  \"[&_.line]:px-4\",\n  \"[&_.line]:w-full\",\n  \"[&_.line]:relative\"\n);\n\nconst highlight = (\n  html: string,\n  language?: BundledLanguage,\n  themes?: CodeOptionsMultipleThemes[\"themes\"]\n) =>\n  codeToHtml(html, {\n    lang: language ?? \"typescript\",\n    themes: themes ?? {\n      light: \"github-light\",\n      dark: \"github-dark-default\",\n    },\n    transformers: [\n      transformerNotationDiff({\n        matchAlgorithm: \"v3\",\n      }),\n      transformerNotationHighlight({\n        matchAlgorithm: \"v3\",\n      }),\n      transformerNotationWordHighlight({\n        matchAlgorithm: \"v3\",\n      }),\n      transformerNotationFocus({\n        matchAlgorithm: \"v3\",\n      }),\n      transformerNotationErrorLevel({\n        matchAlgorithm: \"v3\",\n      }),\n    ],\n  });\n\nexport type CodeBlockData = {\n  language: string;\n  filename: string;\n  code: string;\n};\n\ntype CodeBlockContextType = {\n  value: string | undefined;\n  onValueChange: ((value: string) => void) | undefined;\n  data: CodeBlockData[];\n};\n\nconst CodeBlockContext = createContext<CodeBlockContextType>({\n  value: undefined,\n  onValueChange: undefined,\n  data: [],\n});\n\nfunction useCodeBlock<T>(selector: (state: CodeBlockContextType) => T): T {\n  const ctx = useContextSelector(CodeBlockContext, (context) => context);\n  if (!ctx) {\n    throw new Error(\"CodeBlock components must be used within CodeBlock\");\n  }\n  return selector(ctx);\n}\n\nexport type CodeBlockProps = HTMLAttributes<HTMLDivElement> & {\n  defaultValue?: string;\n  value?: string;\n  onValueChange?: (value: string) => void;\n  data: CodeBlockData[];\n};\n\nexport const CodeBlock = ({\n  value: controlledValue,\n  onValueChange: controlledOnValueChange,\n  defaultValue,\n  className,\n  data,\n  ...props\n}: CodeBlockProps) => {\n  const [value, onValueChange] = useControllableState({\n    defaultProp: defaultValue ?? \"\",\n    prop: controlledValue,\n    onChange: controlledOnValueChange,\n  });\n\n  return (\n    <CodeBlockContext.Provider value={{ value, onValueChange, data }}>\n      <div\n        className={cn(\n          \"grid size-full grid-cols-1 overflow-hidden rounded-xl border shadow-sm\",\n          className\n        )}\n        {...props}\n      />\n    </CodeBlockContext.Provider>\n  );\n};\n\nexport type CodeBlockHeaderProps = HTMLAttributes<HTMLDivElement>;\n\nexport const CodeBlockHeader = ({\n  className,\n  ...props\n}: CodeBlockHeaderProps) => (\n  <div\n    className={cn(\n      \"flex flex-row items-center border-b bg-muted/80 p-1\",\n      className\n    )}\n    {...props}\n  />\n);\n\nexport type CodeBlockFilesProps = Omit<\n  HTMLAttributes<HTMLDivElement>,\n  \"children\"\n> & {\n  children: (item: CodeBlockData) => ReactNode;\n};\n\nexport const CodeBlockFiles = ({\n  className,\n  children,\n  ...props\n}: CodeBlockFilesProps) => {\n  const data = useCodeBlock((state) => state.data);\n\n  return (\n    <div\n      className={cn(\"flex min-w-0 grow flex-row items-center gap-2\", className)}\n      {...props}\n    >\n      {data.map(children)}\n    </div>\n  );\n};\n\nexport type CodeBlockFilenameProps = HTMLAttributes<HTMLDivElement> & {\n  icon?: IconType;\n  value?: string;\n};\n\nexport const CodeBlockFilename = ({\n  className,\n  icon,\n  value,\n  children,\n  ...props\n}: CodeBlockFilenameProps) => {\n  const activeValue = useCodeBlock((state) => state.value);\n  const defaultIcon = Object.entries(filenameIconMap).find(([pattern]) => {\n    const regex = new RegExp(\n      `^${pattern.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\")}$`\n    );\n    return regex.test(children?.toString() ?? \"\");\n  })?.[1];\n  const Icon = icon ?? defaultIcon ?? SiGnometerminal;\n\n  if (value !== activeValue) {\n    return null;\n  }\n\n  return (\n    <div\n      className=\"flex min-w-0 items-center gap-2 px-4 py-1.5 text-muted-foreground text-sm\"\n      {...props}\n    >\n      {Icon && <Icon className=\"size-4 shrink-0\" />}\n      <span className=\"min-w-0 flex-1 truncate\">{children}</span>\n    </div>\n  );\n};\n\nexport type CodeBlockSelectProps = ComponentProps<typeof Select>;\n\nexport const CodeBlockSelect = (props: CodeBlockSelectProps) => {\n  const { value, onValueChange } = useCodeBlock((state) => ({\n    value: state.value,\n    onValueChange: state.onValueChange,\n  }));\n\n  return <Select onValueChange={onValueChange} value={value} {...props} />;\n};\n\nexport type CodeBlockSelectTriggerProps = ComponentProps<typeof SelectTrigger>;\n\nexport const CodeBlockSelectTrigger = ({\n  className,\n  ...props\n}: CodeBlockSelectTriggerProps) => (\n  <SelectTrigger\n    className={cn(\n      \"w-fit border-none text-muted-foreground text-sm shadow-none\",\n      className\n    )}\n    size=\"sm\"\n    {...props}\n  />\n);\n\nexport type CodeBlockSelectValueProps = ComponentProps<typeof SelectValue>;\n\nexport const CodeBlockSelectValue = (props: CodeBlockSelectValueProps) => (\n  <SelectValue {...props} />\n);\n\nexport type CodeBlockSelectContentProps = Omit<\n  ComponentProps<typeof SelectContent>,\n  \"children\"\n> & {\n  children: (item: CodeBlockData) => ReactNode;\n};\n\nexport const CodeBlockSelectContent = ({\n  children,\n  ...props\n}: CodeBlockSelectContentProps) => {\n  const t = useTranslations(\"Common\");\n  const data = useCodeBlock((state) => state.data);\n\n  return (\n    <SelectContent {...props}>\n      <SelectGroup>\n        <SelectLabel>{t(\"language\")}</SelectLabel>\n        {data.map(children)}\n      </SelectGroup>\n    </SelectContent>\n  );\n};\n\nexport type CodeBlockSelectItemProps = ComponentProps<typeof SelectItem>;\n\nexport const CodeBlockSelectItem = ({\n  className,\n  ...props\n}: CodeBlockSelectItemProps) => (\n  <SelectItem className={cn(\"text-sm\", className)} {...props} />\n);\n\nexport type CodeBlockCopyButtonProps = ComponentProps<typeof Button> & {\n  onCopy?: () => void;\n  onError?: (error: Error) => void;\n  timeout?: number;\n};\n\nexport const CodeBlockCopyButton = ({\n  asChild,\n  onCopy,\n  onError,\n  timeout = 2000,\n  children,\n  className,\n  ...props\n}: CodeBlockCopyButtonProps) => {\n  const [isCopied, setIsCopied] = useState(false);\n  const { data, value } = useCodeBlock((state) => ({\n    data: state.data,\n    value: state.value,\n  }));\n  const code = data.find((item) => item.language === value)?.code;\n\n  const copyToClipboard = () => {\n    if (\n      typeof window === \"undefined\" ||\n      !navigator.clipboard.writeText ||\n      !code\n    ) {\n      return;\n    }\n\n    navigator.clipboard.writeText(code).then(() => {\n      setIsCopied(true);\n      onCopy?.();\n\n      setTimeout(() => setIsCopied(false), timeout);\n    }, onError);\n  };\n\n  if (asChild) {\n    return cloneElement(children as ReactElement, {\n      // @ts-expect-error - we know this is a button\n      onClick: copyToClipboard,\n    });\n  }\n\n  const Icon = isCopied ? CheckIcon : CopyIcon;\n\n  return (\n    <Button\n      className={cn(\"shrink-0\", className)}\n      onClick={copyToClipboard}\n      size=\"icon\"\n      variant=\"ghost\"\n      {...props}\n    >\n      {children ?? <Icon className=\"text-muted-foreground\" size={14} />}\n    </Button>\n  );\n};\n\ntype CodeBlockFallbackProps = HTMLAttributes<HTMLDivElement>;\n\nconst CodeBlockFallback = ({ children, ...props }: CodeBlockFallbackProps) => (\n  <div {...props}>\n    <pre className=\"w-full\">\n      <code>\n        {children\n          ?.toString()\n          .split(\"\\n\")\n          .map((line, i) => (\n            <span className=\"line\" key={`${i}-${line}`}>\n              {line}\n            </span>\n          ))}\n      </code>\n    </pre>\n  </div>\n);\n\nexport type CodeBlockBodyProps = Omit<\n  HTMLAttributes<HTMLDivElement>,\n  \"children\"\n> & {\n  children: (item: CodeBlockData) => ReactNode;\n};\n\nexport const CodeBlockBody = ({ children, ...props }: CodeBlockBodyProps) => {\n  const data = useCodeBlock((state) => state.data);\n\n  return <div {...props}>{data.map(children)}</div>;\n};\n\nexport type CodeBlockItemProps = HTMLAttributes<HTMLDivElement> & {\n  value: string;\n  lineNumbers?: boolean;\n};\n\nexport const CodeBlockItem = ({\n  children,\n  lineNumbers = true,\n  className,\n  value,\n  ...props\n}: CodeBlockItemProps) => {\n  const activeValue = useCodeBlock((state) => state.value);\n\n  if (value !== activeValue) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        codeBlockClassName,\n        lineHighlightClassNames,\n        lineDiffClassNames,\n        lineFocusedClassNames,\n        wordHighlightClassNames,\n        darkModeClassNames,\n        lineNumbers && lineNumberClassNames,\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport type CodeBlockContentProps = HTMLAttributes<HTMLDivElement> & {\n  themes?: CodeOptionsMultipleThemes[\"themes\"];\n  language?: BundledLanguage;\n  syntaxHighlighting?: boolean;\n  children: string;\n};\n\nexport const CodeBlockContent = ({\n  children,\n  themes,\n  language,\n  syntaxHighlighting = true,\n  ...props\n}: CodeBlockContentProps) => {\n  const [html, setHtml] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!syntaxHighlighting) {\n      return;\n    }\n\n    highlight(children, language, themes)\n      .then(setHtml)\n      // biome-ignore lint/suspicious/noConsole: \"it's fine\"\n      .catch(console.error);\n  }, [children, themes, syntaxHighlighting, language]);\n\n  if (!(syntaxHighlighting && html)) {\n    return <CodeBlockFallback>{children}</CodeBlockFallback>;\n  }\n\n  return (\n    <div\n      // biome-ignore lint/security/noDangerouslySetInnerHtml: \"Kinda how Shiki works\"\n      dangerouslySetInnerHTML={{ __html: html }}\n      {...props}\n    />\n  );\n};\n"],"names":["c","_c","SiGnometerminal","useControllableState","Button","Select","SelectContent","SelectGroup","SelectItem","SelectLabel","SelectTrigger","SelectValue","filenameIconMap","cn","transformerNotationDiff","transformerNotationErrorLevel","transformerNotationFocus","transformerNotationHighlight","transformerNotationWordHighlight","CheckIcon","CopyIcon","useTranslations","cloneElement","useEffect","useState","codeToHtml","createContext","useContextSelector","lineNumberClassNames","darkModeClassNames","lineHighlightClassNames","lineDiffClassNames","lineFocusedClassNames","wordHighlightClassNames","codeBlockClassName","highlight","html","language","themes","lang","light","dark","transformers","matchAlgorithm","CodeBlockContext","value","undefined","onValueChange","data","useCodeBlock","selector","$","$i","Symbol","for","ctx","_temp","Error","t0","context","CodeBlock","className","controlledOnValueChange","controlledValue","defaultValue","props","t1","t2","defaultProp","prop","onChange","t3","t4","t5","t6","CodeBlockHeader","CodeBlockFiles","children","_temp2","map","CodeBlockFilename","icon","activeValue","_temp3","defaultIcon","Object","entries","find","pattern","regex","RegExp","replace","test","toString","Icon","CodeBlockSelect","_temp4","CodeBlockSelectTrigger","CodeBlockSelectValue","CodeBlockSelectContent","t","_temp5","CodeBlockSelectItem","CodeBlockCopyButton","asChild","onCopy","onError","timeout","isCopied","setIsCopied","_temp6","copyToClipboard","bb0","code","item","window","navigator","clipboard","writeText","then","setTimeout","onClick","CodeBlockFallback","split","_temp7","CodeBlockBody","_temp8","CodeBlockItem","lineNumbers","_temp9","CodeBlockContent","syntaxHighlighting","setHtml","catch","console","error","__html","state","line","i"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAa,SAAAA,CAAA,IAAAC,EAAA;AAEb,SAAwBC,eAAe,QAAQ,gCAAgC;AAC/E,SAASC,oBAAoB,QAAQ,wCAAwC;AAC7E,SAASC,MAAM,QAAQ,0CAA0C;AACjE,SACEC,MAAM,EACNC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,WAAW,EACXC,aAAa,EACbC,WAAW,QACN,0CAA0C;AACjD,SAASC,eAAe,QAAQ,qCAAqC;AACrE,SAASC,EAAE,QAAQ,+BAA+B;AAClD,SACEC,uBAAuB,EACvBC,6BAA6B,EAC7BC,wBAAwB,EACxBC,4BAA4B,EAC5BC,gCAAgC,QAC3B,uBAAuB;AAC9B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,cAAc;;AAClD,SAASC,eAAe,QAAQ,WAAW;AAO3C,SAASC,YAAY,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACzD,SAGEC,UAAU,QACL,OAAO;AACd,SAASC,aAAa,EAAEC,kBAAkB,QAAQ,sBAAsB;;;AArCxE,YAAY;;;;;;;;;;;;;;AAyCZ,MAAMC,oBAAoB,OAAGf,qJAAE,EAC7B,+BAA+B,EAC/B,qCAAqC,EACrC,0CAA0C,EAC1C,+BAA+B,EAC/B,2CAA2C,EAC3C,sBAAsB,EACtB,uBAAuB,EACvB,8BAA8B,EAC9B,6BAA6B,EAC7B,2CAA2C,EAC3C,4BAA4B,EAC5B,8BACF,CAAC;AAED,MAAMgB,kBAAkB,OAAGhB,qJAAE,EAC3B,2CAA2C,EAC3C,4DAA4D,EAC5D,8DAA8D,EAC9D,sEAAsE,EACtE,gDAAgD,EAChD,iEAAiE,EACjE,mEAAmE,EACnE,2EACF,CAAC;AAED,MAAMiB,uBAAuB,OAAGjB,qJAAE,EAChC,kCAAkC,EAClC,yCAAyC,EACzC,sCAAsC,EACtC,oCAAoC,EACpC,mCAAmC,EACnC,sCAAsC,EACtC,mCAAmC,EACnC,4CACF,CAAC;AAED,MAAMkB,kBAAkB,OAAGlB,qJAAE,EAC3B,+BAA+B,EAC/B,6BAA6B,EAC7B,4BAA4B,EAC5B,+BAA+B,EAC/B,4BAA4B,EAC5B,kCAAkC,EAClC,yCAAyC,EACzC,kCAAkC,EAClC,yCAAyC,EACzC,4CAA4C,EAC5C,4CACF,CAAC;AAED,MAAMmB,qBAAqB,OAAGnB,qJAAE,EAC9B,yCAAyC,EACzC,gDACF,CAAC;AAED,MAAMoB,uBAAuB,OAAGpB,qJAAE,EAChC,kCAAkC,EAClC,4CACF,CAAC;AAED,MAAMqB,kBAAkB,OAAGrB,qJAAE,EAC3B,0BAA0B,EAC1B,cAAc,EACd,yBAAyB,EACzB,kCAAkC,EAClC,iBAAiB,EACjB,eAAe,EACf,yBAAyB,EACzB,gBAAgB,EAChB,kBAAkB,EAClB,oBACF,CAAC;AAED,MAAMsB,SAAS,GAAGA,CAChBC,IAAY,EACZC,QAA0B,EAC1BC,MAA4C,OAE5Cb,iLAAU,EAACW,IAAI,EAAE;QACfG,IAAI,EAAEF,QAAQ,8CAAI,YAAY;QAC9BC,MAAM,yCAAEA,MAAM,GAAI;YAChBE,KAAK,EAAE,cAAc;YACrBC,IAAI,EAAE;QACR,CAAC;QACDC,YAAY,EAAE;gBACZ5B,yLAAuB,EAAC;gBACtB6B,cAAc,EAAE;YAClB,CAAC,CAAC;gBACF1B,8LAA4B,EAAC;gBAC3B0B,cAAc,EAAE;YAClB,CAAC,CAAC;gBACFzB,kMAAgC,EAAC;gBAC/ByB,cAAc,EAAE;YAClB,CAAC,CAAC;gBACF3B,0LAAwB,EAAC;gBACvB2B,cAAc,EAAE;YAClB,CAAC,CAAC;gBACF5B,+LAA6B,EAAC;gBAC5B4B,cAAc,EAAE;YAClB,CAAC,CAAC;SAAA;IAEN,CAAC,CAAC;AAcJ,MAAMC,gBAAgB,OAAGlB,+KAAa,EAAuB;IAC3DmB,KAAK,EAAEC,SAAS;IAChBC,aAAa,EAAED,SAAS;IACxBE,IAAI,EAAE,EAAA;AACR,CAAC,CAAC;AAEF,sBAAAE,QAAA;;IAAA,MAAAC,CAAA,OAAAlD,gLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IACE,MAAAI,GAAA,6LAAYX,gBAAA,EAAAY,KAAyD,CAAC;IAAC,IAAA,CAClED,GAAG,EAAA;QAAA,MAAA,IAAAE,KAAA,CACU,oDAAoD;IAAA;IAAA,IAAAC,EAAA;IAAA,IAAAP,CAAA,CAAA,EAAA,KAAAI,GAAA,IAAAJ,CAAA,CAAA,EAAA,KAAAD,QAAA,EAAA;QAE/DQ,EAAA,GAAAR,QAAQ,CAACK,GAAG,CAAC;QAAAJ,CAAA,CAAA,EAAA,GAAAI,GAAA;QAAAJ,CAAA,CAAA,EAAA,GAAAD,QAAA;QAAAC,CAAA,CAAA,EAAA,GAAAO,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAP,CAAA,CAAA,EAAA;IAAA;IAAA,OAAbO,EAAa;AAAA;GALtBT;;QACctB,oLAAA;;;AADd,SAAA6B,MAAAG,OAAA;IAAA,OACgEA,OAAO;AAAA;AAchE,mBAAkBD,EAAA;;IAAA,MAAAP,CAAA,OAAAlD,gLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAAU,SAAA;IAAA,IAAAC,uBAAA;IAAA,IAAAC,eAAA;IAAA,IAAAf,IAAA;IAAA,IAAAgB,YAAA;IAAA,IAAAC,KAAA;IAAA,IAAAd,CAAA,CAAA,EAAA,KAAAO,EAAA,EAAA;QAAC,CAAA,EAAAb,KAAA,EAAAkB,eAAA,EAAAhB,aAAA,EAAAe,uBAAA,EAAAE,YAAA,EAAAH,SAAA,EAAAb,IAAA,EAAA,GAAAiB,OAAA,GAAAP,EAOT;QAAAP,CAAA,CAAA,EAAA,GAAAO,EAAA;QAAAP,CAAA,CAAA,EAAA,GAAAU,SAAA;QAAAV,CAAA,CAAA,EAAA,GAAAW,uBAAA;QAAAX,CAAA,CAAA,EAAA,GAAAY,eAAA;QAAAZ,CAAA,CAAA,EAAA,GAAAH,IAAA;QAAAG,CAAA,CAAA,EAAA,GAAAa,YAAA;QAAAb,CAAA,CAAA,EAAA,GAAAc,KAAA;IAAA,OAAA;QAAAJ,SAAA,GAAAV,CAAA,CAAA,EAAA;QAAAW,uBAAA,GAAAX,CAAA,CAAA,EAAA;QAAAY,eAAA,GAAAZ,CAAA,CAAA,EAAA;QAAAH,IAAA,GAAAG,CAAA,CAAA,EAAA;QAAAa,YAAA,GAAAb,CAAA,CAAA,EAAA;QAAAc,KAAA,GAAAd,CAAA,CAAA,EAAA;IAAA;IAEA,MAAAe,EAAA,sDAAAF,YAAY,GAAI,EAAE;IAAA,IAAAG,EAAA;IAAA,IAAAhB,CAAA,CAAA,EAAA,KAAAW,uBAAA,IAAAX,CAAA,CAAA,EAAA,KAAAY,eAAA,IAAAZ,CAAA,CAAA,GAAA,KAAAe,EAAA,EAAA;QADmBC,EAAA,GAAA;YAAAC,WAAA,EACrCF,EAAkB;YAAAG,IAAA,EACzBN,eAAe;YAAAO,QAAA,EACXR;QAAuB;QAClCX,CAAA,CAAA,EAAA,GAAAW,uBAAA;QAAAX,CAAA,CAAA,EAAA,GAAAY,eAAA;QAAAZ,CAAA,CAAA,GAAA,GAAAe,EAAA;QAAAf,CAAA,CAAA,GAAA,GAAAgB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAhB,CAAA,CAAA,GAAA;IAAA;IAJD,MAAA,CAAAN,KAAA,EAAAE,aAAA,CAAA,4NAAoDoB,EAInD,CAAC;IAAC,IAAAI,EAAA;IAAA,IAAApB,CAAA,CAAA,GAAA,KAAAH,IAAA,IAAAG,CAAA,CAAA,GAAA,KAAAJ,aAAA,IAAAI,CAAA,CAAA,GAAA,KAAAN,KAAA,EAAA;QAGiC0B,EAAA,GAAA;YAAA1B,KAAA;YAAAE,aAAA;YAAAC;QAAA;QAA8BG,CAAA,CAAA,GAAA,GAAAH,IAAA;QAAAG,CAAA,CAAA,GAAA,GAAAJ,aAAA;QAAAI,CAAA,CAAA,GAAA,GAAAN,KAAA;QAAAM,CAAA,CAAA,GAAA,GAAAoB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAApB,CAAA,CAAA,GAAA;IAAA;IAAA,IAAAqB,EAAA;IAAA,IAAArB,CAAA,CAAA,GAAA,KAAAU,SAAA,EAAA;QAEjDW,EAAA,OAAA3D,qJAAA,EACT,wEAAwE,EACxEgD,SACF,CAAC;QAAAV,CAAA,CAAA,GAAA,GAAAU,SAAA;QAAAV,CAAA,CAAA,GAAA,GAAAqB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAArB,CAAA,CAAA,GAAA;IAAA;IAAA,IAAAsB,EAAA;IAAA,IAAAtB,CAAA,CAAA,GAAA,KAAAc,KAAA,IAAAd,CAAA,CAAA,GAAA,KAAAqB,EAAA,EAAA;QAJHC,EAAA,iBAAA,6LAAA,GAME;YALW,SAGV,CAHU,CAAAD,EAGX,CAAC;YAAA,GACGP,KAAK,IACT;;;;;;QAAAd,CAAA,CAAA,GAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,GAAA,GAAAqB,EAAA;QAAArB,CAAA,CAAA,GAAA,GAAAsB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAtB,CAAA,CAAA,GAAA;IAAA;IAAA,IAAAuB,EAAA;IAAA,IAAAvB,CAAA,CAAA,GAAA,KAAAoB,EAAA,IAAApB,CAAA,CAAA,GAAA,KAAAsB,EAAA,EAAA;QAPJC,EAAA,iBAAA,6LAAA,iBAAA,QAAA;YAAkC,KAA8B,CAA9B,CAAAH,EAA6B,CAAC,CAC9D;sBAAAE,EAMC,CACH,4BAA4B;;;;;;QAAAtB,CAAA,CAAA,GAAA,GAAAoB,EAAA;QAAApB,CAAA,CAAA,GAAA,GAAAsB,EAAA;QAAAtB,CAAA,CAAA,GAAA,GAAAuB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAvB,CAAA,CAAA,GAAA;IAAA;IAAA,OAR5BuB,EAQ4B;AAAA,CAE/B;;;QAjBgCvE,mNAAA;;;KARpByD,SAAS;AA6Bf,yBAAwBF,EAAA;IAAA,MAAAP,CAAA,OAAAlD,gLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAAU,SAAA;IAAA,IAAAI,KAAA;IAAA,IAAAd,CAAA,CAAA,EAAA,KAAAO,EAAA,EAAA;QAAC,CAAA,EAAAG,SAAA,EAAA,GAAAI,OAAA,GAAAP,EAGT;QAAAP,CAAA,CAAA,EAAA,GAAAO,EAAA;QAAAP,CAAA,CAAA,EAAA,GAAAU,SAAA;QAAAV,CAAA,CAAA,EAAA,GAAAc,KAAA;IAAA,OAAA;QAAAJ,SAAA,GAAAV,CAAA,CAAA,EAAA;QAAAc,KAAA,GAAAd,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAe,EAAA;IAAA,IAAAf,CAAA,CAAA,EAAA,KAAAU,SAAA,EAAA;QAERK,EAAA,OAAArD,qJAAA,EACT,qDAAqD,EACrDgD,SACF,CAAC;QAAAV,CAAA,CAAA,EAAA,GAAAU,SAAA;QAAAV,CAAA,CAAA,EAAA,GAAAe,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAf,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAgB,EAAA;IAAA,IAAAhB,CAAA,CAAA,EAAA,KAAAc,KAAA,IAAAd,CAAA,CAAA,EAAA,KAAAe,EAAA,EAAA;QAJHC,EAAA,iBAAA,6LAAA,GAME;YALW,SAGV,CAHU,CAAAD,EAGX,CAAC;YAAA,GACGD,KAAK,IACT;;;;;;QAAAd,CAAA,CAAA,EAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,EAAA,GAAAe,EAAA;QAAAf,CAAA,CAAA,EAAA,GAAAgB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAhB,CAAA,CAAA,EAAA;IAAA;IAAA,OANFgB,EAME;AAAA,CACH;MAXYQ,eAAe;AAoBrB,MAAMC,cAAc,IAAGlB,EAAA;;IAAA,MAAAP,CAAA,OAAAlD,gLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAA0B,QAAA;IAAA,IAAAhB,SAAA;IAAA,IAAAI,KAAA;IAAA,IAAAd,CAAA,CAAA,EAAA,KAAAO,EAAA,EAAA;QAAC,CAAA,EAAAG,SAAA,EAAAgB,QAAA,EAAA,GAAAZ,OAAA,GAAAP,EAIT;QAAAP,CAAA,CAAA,EAAA,GAAAO,EAAA;QAAAP,CAAA,CAAA,EAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,EAAA,GAAAU,SAAA;QAAAV,CAAA,CAAA,EAAA,GAAAc,KAAA;IAAA,OAAA;QAAAY,QAAA,GAAA1B,CAAA,CAAA,EAAA;QAAAU,SAAA,GAAAV,CAAA,CAAA,EAAA;QAAAc,KAAA,GAAAd,CAAA,CAAA,EAAA;IAAA;IACpB,MAAAH,IAAA,gBAAa8B,MAAkC,CAAC;IAAC,IAAAZ,EAAA;IAAA,IAAAf,CAAA,CAAA,EAAA,KAAAU,SAAA,EAAA;QAIlCK,EAAA,OAAArD,qJAAA,EAAG,+CAA+C,EAAEgD,SAAS,CAAC;QAAAV,CAAA,CAAA,EAAA,GAAAU,SAAA;QAAAV,CAAA,CAAA,EAAA,GAAAe,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAf,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAgB,EAAA;IAAA,IAAAhB,CAAA,CAAA,EAAA,KAAA0B,QAAA,IAAA1B,CAAA,CAAA,EAAA,KAAAH,IAAA,EAAA;QAGxEmB,EAAA,GAAAnB,IAAI,CAAA+B,GAAA,CAAKF,QAAQ,CAAC;QAAA1B,CAAA,CAAA,EAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,EAAA,GAAAH,IAAA;QAAAG,CAAA,CAAA,EAAA,GAAAgB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAhB,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAoB,EAAA;IAAA,IAAApB,CAAA,CAAA,GAAA,KAAAc,KAAA,IAAAd,CAAA,CAAA,GAAA,KAAAe,EAAA,IAAAf,CAAA,CAAA,GAAA,KAAAgB,EAAA,EAAA;QAJrBI,EAAA,iBAAA,6LAAA,GAKM;YAJO,SAA8D,CAA9D,CAAAL,EAA6D,CAAC;YAAA,GACrED,KAAK,EAER;sBAAAE,EAAiB,CACpB,EALA,GAKM;;;;;;QAAAhB,CAAA,CAAA,GAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,GAAA,GAAAe,EAAA;QAAAf,CAAA,CAAA,GAAA,GAAAgB,EAAA;QAAAhB,CAAA,CAAA,GAAA,GAAAoB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAApB,CAAA,CAAA,GAAA;IAAA;IAAA,OALNoB,EAKM;AAAA,CAET;;;QAVctB,YAAA;;;;AAiBR,2BAA0BS,EAAA;;;IAAA,MAAAP,CAAA,OAAAlD,gLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAA0B,QAAA;IAAA,IAAAI,IAAA;IAAA,IAAAhB,KAAA;IAAA,IAAApB,KAAA;IAAA,IAAAM,CAAA,CAAA,EAAA,KAAAO,EAAA,EAAA;QAAC,MAAA,EAAAG,SAAA,EAAAoB,IAAA,EAAAf,EAAA,EAAArB,KAAA,EAAAsB,EAAA,EAAAU,QAAA,EAAAN,EAAA,EAAA,GAAAC,IAAA,GAAAd,EAMT;QANSuB,IAAA,GAAAf,EAAA;QAAArB,KAAA,GAAAsB,EAAA;QAAAU,QAAA,GAAAN,EAAA;QAAAN,KAAA,GAAAO,EAAA;QAMTrB,CAAA,CAAA,EAAA,GAAAO,EAAA;QAAAP,CAAA,CAAA,EAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,EAAA,GAAA8B,IAAA;QAAA9B,CAAA,CAAA,EAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,EAAA,GAAAN,KAAA;IAAA,OAAA;QAAAgC,QAAA,GAAA1B,CAAA,CAAA,EAAA;QAAA8B,IAAA,GAAA9B,CAAA,CAAA,EAAA;QAAAc,KAAA,GAAAd,CAAA,CAAA,EAAA;QAAAN,KAAA,GAAAM,CAAA,CAAA,EAAA;IAAA;IACvB,MAAA+B,WAAA,gBAAoBC,MAAmC,CAAC;IACxD,MAAAC,WAAA,kCAAoBE,OAAA,CAAA1E,wKAA8B,CAAC,CAAA2E,IAAA,EAAArB,EAAA;QAAO,MAAA,CAAAsB,OAAA,CAAA,GAAAtB,EAAS;QACjE,MAAAuB,KAAA,GAAA,IAAAC,MAAA,CACE,IAA6E,EAAG,KAA5EF,OAAO,CAAAG,OAAA,CAAA,OAAgB,MAAM,CAAC,CAAAA,OAAA,CAAA,OAAgB,KAAK,CAAC,CAAAA,OAAA,CAAA,OAAgB,IAAI,CAAC,EAAA;;QAC7E,OACKF,KAAK,CAAAG,IAAA,uBAAMf,QAAQ,qDAAAgB,QAAA,qEAAgB,EAAE,CAAC;IAAA,CAC9C,CAAC,yDALkBR,MAAA,cAKlB,CAAA,EAAA;;IACF,MAAAS,IAAA,WAAab,IAAI,sCAAIG,WAAW,uCAAAlF,4PAAmB;IAAC,IAEhD2C,KAAK,KAAKqC,WAAW,EAAA;QAAA,OAAA;IAAA;IAAA,IAAAf,EAAA;IAAA,IAAAhB,CAAA,CAAA,EAAA,KAAA2C,IAAA,EAAA;QASpB3B,EAAA,GAAA2B,IAAI,kBAAI,6LAAC,IAAI;YAAW,SAAiB,EAAjB,iBAAiB,GAAG;;;;;;QAAA3C,CAAA,CAAA,EAAA,GAAA2C,IAAA;QAAA3C,CAAA,CAAA,EAAA,GAAAgB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAhB,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAoB,EAAA;IAAA,IAAApB,CAAA,CAAA,EAAA,KAAA0B,QAAA,EAAA;QAC7CN,EAAA,iBAAA,6LAAA,IAA2D;YAA3C,SAAyB,EAAzB,yBAAyB,CAAEM;sBAAAA,QAAO,CAAE,EAApD,IAA2D;;;;;;QAAA1B,CAAA,CAAA,EAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,EAAA,GAAAoB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAApB,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAqB,EAAA;IAAA,IAAArB,CAAA,CAAA,GAAA,KAAAc,KAAA,IAAAd,CAAA,CAAA,GAAA,KAAAgB,EAAA,IAAAhB,CAAA,CAAA,GAAA,KAAAoB,EAAA,EAAA;QAL7DC,EAAA,iBAAA,6LAAA,GAMM;YALM,SAA2E,EAA3E,2EAA2E;YAAA,GACjFP,KAAK,EAER;;gBAAAE,EAA2C,CAC5C;gBAAAI,EAA0D,CAC5D,EANA,GAMM;;;;;;;QAAApB,CAAA,CAAA,GAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,GAAA,GAAAgB,EAAA;QAAAhB,CAAA,CAAA,GAAA,GAAAoB,EAAA;QAAApB,CAAA,CAAA,GAAA,GAAAqB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAArB,CAAA,CAAA,GAAA;IAAA;IAAA,OANNqB,EAMM;AAAA,CAET;;;QAtBqBvB,YAAA;;;MAPT+B,iBAAiB;AAiCvB,yBAAwBf,KAAA;;IAAA,MAAAd,CAAA,GAAAlD,oLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAC7B,MAAA,EAAAN,KAAA,EAAAE,aAAAA,EAAA,gBAAiCiD,MAG/B,CAAC;IAAC,IAAAtC,EAAA;IAAA,IAAAP,CAAA,CAAA,EAAA,KAAAJ,aAAA,IAAAI,CAAA,CAAA,EAAA,KAAAc,KAAA,IAAAd,CAAA,CAAA,EAAA,KAAAN,KAAA,EAAA;QAEGa,EAAA,iBAAA,6LAAC,wKAAM;YAAgBX,aAAa,CAAbA,CAAAA,aAAY,CAAC;YAASF,KAAK,CAALA,CAAAA,KAAI,CAAC;YAAA,GAAMoB,KAAK,IAAI;;;;;;QAAAd,CAAA,CAAA,EAAA,GAAAJ,aAAA;QAAAI,CAAA,CAAA,EAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,EAAA,GAAAN,KAAA;QAAAM,CAAA,CAAA,EAAA,GAAAO,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAP,CAAA,CAAA,EAAA;IAAA;IAAA,OAAjEO,EAAiE;AAAA,CACzE;;;QANkCT,YAAA;;;MADtB8C,eAAe;AAWrB,gCAA+BrC,EAAA;IAAA,MAAAP,CAAA,OAAAlD,gLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAAU,SAAA;IAAA,IAAAI,KAAA;IAAA,IAAAd,CAAA,CAAA,EAAA,KAAAO,EAAA,EAAA;QAAC,CAAA,EAAAG,SAAA,EAAA,GAAAI,OAAA,GAAAP,EAGT;QAAAP,CAAA,CAAA,EAAA,GAAAO,EAAA;QAAAP,CAAA,CAAA,EAAA,GAAAU,SAAA;QAAAV,CAAA,CAAA,EAAA,GAAAc,KAAA;IAAA,OAAA;QAAAJ,SAAA,GAAAV,CAAA,CAAA,EAAA;QAAAc,KAAA,GAAAd,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAe,EAAA;IAAA,IAAAf,CAAA,CAAA,EAAA,KAAAU,SAAA,EAAA;QAEfK,EAAA,OAAArD,qJAAA,EACT,6DAA6D,EAC7DgD,SACF,CAAC;QAAAV,CAAA,CAAA,EAAA,GAAAU,SAAA;QAAAV,CAAA,CAAA,EAAA,GAAAe,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAf,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAgB,EAAA;IAAA,IAAAhB,CAAA,CAAA,EAAA,KAAAc,KAAA,IAAAd,CAAA,CAAA,EAAA,KAAAe,EAAA,EAAA;QAJHC,EAAA,iBAAA,6LAAC,+KAAa;YACD,SAGV,CAHU,CAAAD,EAGX,CAAC;YACI,IAAI,EAAJ,IAAI;YAAA,GACLD,KAAK,IACT;;;;;;QAAAd,CAAA,CAAA,EAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,EAAA,GAAAe,EAAA;QAAAf,CAAA,CAAA,EAAA,GAAAgB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAhB,CAAA,CAAA,EAAA;IAAA;IAAA,OAPFgB,EAOE;AAAA,CACH;MAZY8B,sBAAsB;AAgB5B,8BAA6BhC,KAAA;IAAA,MAAAd,CAAA,OAAAlD,gLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAAO,EAAA;IAAA,IAAAP,CAAA,CAAA,EAAA,KAAAc,KAAA,EAAA;QAClCP,EAAA,iBAAA,6LAAC,6KAAW;YAAA,GAAKO,KAAK,IAAI;;;;;;QAAAd,CAAA,CAAA,EAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,EAAA,GAAAO,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAP,CAAA,CAAA,EAAA;IAAA;IAAA,OAA1BO,EAA0B;AAAA,CAC3B;MAFYwC,oBAAoB;AAW1B,gCAA+BxC,EAAA;;IAAA,MAAAP,CAAA,OAAAlD,gLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAA0B,QAAA;IAAA,IAAAZ,KAAA;IAAA,IAAAd,CAAA,CAAA,EAAA,KAAAO,EAAA,EAAA;QAAC,CAAA,EAAAmB,QAAA,EAAA,GAAAZ,OAAA,GAAAP,EAGT;QAAAP,CAAA,CAAA,EAAA,GAAAO,EAAA;QAAAP,CAAA,CAAA,EAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,EAAA,GAAAc,KAAA;IAAA,OAAA;QAAAY,QAAA,GAAA1B,CAAA,CAAA,EAAA;QAAAc,KAAA,GAAAd,CAAA,CAAA,EAAA;IAAA;IAC5B,MAAAiD,CAAA,qOAA0B,QAAQ,CAAC;IACnC,MAAApD,IAAA,gBAAaqD,MAAkC,CAAC;IAAC,IAAAnC,EAAA;IAAA,IAAAf,CAAA,CAAA,EAAA,KAAAiD,CAAA,EAAA;QAK7BlC,EAAA,GAAAkC,CAAC,CAAC,UAAU,CAAC;QAAAjD,CAAA,CAAA,EAAA,GAAAiD,CAAA;QAAAjD,CAAA,CAAA,EAAA,GAAAe,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAf,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAgB,EAAA;IAAA,IAAAhB,CAAA,CAAA,EAAA,KAAAe,EAAA,EAAA;QAA3BC,EAAA,iBAAA,6LAAC,6KAAW,CAAE;sBAAAD,EAAY,CAAE,EAA3B,WAAW,CAA8B;;;;;;QAAAf,CAAA,CAAA,EAAA,GAAAe,EAAA;QAAAf,CAAA,CAAA,EAAA,GAAAgB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAhB,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAoB,EAAA;IAAA,IAAApB,CAAA,CAAA,EAAA,KAAA0B,QAAA,IAAA1B,CAAA,CAAA,EAAA,KAAAH,IAAA,EAAA;QACzCuB,EAAA,GAAAvB,IAAI,CAAA+B,GAAA,CAAKF,QAAQ,CAAC;QAAA1B,CAAA,CAAA,EAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,EAAA,GAAAH,IAAA;QAAAG,CAAA,CAAA,GAAA,GAAAoB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAApB,CAAA,CAAA,GAAA;IAAA;IAAA,IAAAqB,EAAA;IAAA,IAAArB,CAAA,CAAA,GAAA,KAAAgB,EAAA,IAAAhB,CAAA,CAAA,GAAA,KAAAoB,EAAA,EAAA;QAFrBC,EAAA,iBAAA,6LAAC,6KAAW,CACV;;gBAAAL,EAAyC,CACxC;gBAAAI,EAAiB,CACpB,EAHC,WAAW,CAGE;;;;;;;QAAApB,CAAA,CAAA,GAAA,GAAAgB,EAAA;QAAAhB,CAAA,CAAA,GAAA,GAAAoB,EAAA;QAAApB,CAAA,CAAA,GAAA,GAAAqB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAArB,CAAA,CAAA,GAAA;IAAA;IAAA,IAAAsB,EAAA;IAAA,IAAAtB,CAAA,CAAA,GAAA,KAAAc,KAAA,IAAAd,CAAA,CAAA,GAAA,KAAAqB,EAAA,EAAA;QAJhBC,EAAA,iBAAA,6LAAC,+KAAa;YAAA,GAAKR,KAAK,EACtB;sBAAAO,EAGa,CACf,EALC,aAAa,CAKE;;;;;;QAAArB,CAAA,CAAA,GAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,GAAA,GAAAqB,EAAA;QAAArB,CAAA,CAAA,GAAA,GAAAsB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAtB,CAAA,CAAA,GAAA;IAAA;IAAA,OALhBsB,EAKgB;AAAA,CAEnB;;;QAXWpD,4NAAA;QACG4B,YAAA;;;MALFkD,sBAAsB;AAmB5B,6BAA4BzC,EAAA;IAAA,MAAAP,CAAA,GAAAlD,oLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAAU,SAAA;IAAA,IAAAI,KAAA;IAAA,IAAAd,CAAA,CAAA,EAAA,KAAAO,EAAA,EAAA;QAAC,CAAA,EAAAG,SAAA,EAAA,GAAAI,OAAA,GAAAP,EAGT;QAAAP,CAAA,CAAA,EAAA,GAAAO,EAAA;QAAAP,CAAA,CAAA,EAAA,GAAAU,SAAA;QAAAV,CAAA,CAAA,EAAA,GAAAc,KAAA;IAAA,OAAA;QAAAJ,SAAA,GAAAV,CAAA,CAAA,EAAA;QAAAc,KAAA,GAAAd,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAe,EAAA;IAAA,IAAAf,CAAA,CAAA,EAAA,KAAAU,SAAA,EAAA;QACFK,EAAA,GAAArD,yJAAA,EAAG,SAAS,EAAEgD,SAAS,CAAC;QAAAV,CAAA,CAAA,EAAA,GAAAU,SAAA;QAAAV,CAAA,CAAA,EAAA,GAAAe,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAf,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAgB,EAAA;IAAA,IAAAhB,CAAA,CAAA,EAAA,KAAAc,KAAA,IAAAd,CAAA,CAAA,EAAA,KAAAe,EAAA,EAAA;QAA/CC,EAAA,iBAAA,6LAAC,4KAAU;YAAY,SAAwB,CAAxB,CAAAD,EAAuB,CAAC;YAAA,GAAMD,KAAK,IAAI;;;;;;QAAAd,CAAA,CAAA,EAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,EAAA,GAAAe,EAAA;QAAAf,CAAA,CAAA,EAAA,GAAAgB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAhB,CAAA,CAAA,EAAA;IAAA;IAAA,OAA9DgB,EAA8D;AAAA,CAC/D;MALYmC,mBAAmB;AAazB,6BAA4B5C,EAAA;;IAAA,MAAAP,CAAA,OAAAlD,gLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAAqD,OAAA;IAAA,IAAA3B,QAAA;IAAA,IAAAhB,SAAA;IAAA,IAAA4C,MAAA;IAAA,IAAAC,OAAA;IAAA,IAAAzC,KAAA;IAAA,IAAAC,EAAA;IAAA,IAAAf,CAAA,CAAA,EAAA,KAAAO,EAAA,EAAA;QAAC,CAAA,EAAA8C,OAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAzC,EAAA,EAAAW,QAAA,EAAAhB,SAAA,EAAA,GAAAI,OAAA,GAAAP,EAQT;QAAAP,CAAA,CAAA,EAAA,GAAAO,EAAA;QAAAP,CAAA,CAAA,EAAA,GAAAqD,OAAA;QAAArD,CAAA,CAAA,EAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,EAAA,GAAAU,SAAA;QAAAV,CAAA,CAAA,EAAA,GAAAsD,MAAA;QAAAtD,CAAA,CAAA,EAAA,GAAAuD,OAAA;QAAAvD,CAAA,CAAA,EAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,EAAA,GAAAe,EAAA;IAAA,OAAA;QAAAsC,OAAA,GAAArD,CAAA,CAAA,EAAA;QAAA0B,QAAA,GAAA1B,CAAA,CAAA,EAAA;QAAAU,SAAA,GAAAV,CAAA,CAAA,EAAA;QAAAsD,MAAA,GAAAtD,CAAA,CAAA,EAAA;QAAAuD,OAAA,GAAAvD,CAAA,CAAA,EAAA;QAAAc,KAAA,GAAAd,CAAA,CAAA,EAAA;QAAAe,EAAA,GAAAf,CAAA,CAAA,EAAA;IAAA;IAJzB,MAAAwD,OAAA,GAAAzC,EAAc,KAAApB,SAAA,GAAA,OAAdoB,EAAc;IAKd,MAAA,CAAA0C,QAAA,EAAAC,WAAA,CAAA,OAAgCrF,yKAAA,EAAA,KAAc,CAAC;IAC/C,MAAA,EAAAwB,IAAA,EAAAH,KAAAA,EAAA,gBAAwBiE,MAGtB,CAAC;IAAC,IAAAC,eAAA;IAAA,IAAA5C,EAAA;IAAA,IAAAhB,CAAA,CAAA,EAAA,KAAAqD,OAAA,IAAArD,CAAA,CAAA,GAAA,KAAA0B,QAAA,IAAA1B,CAAA,CAAA,GAAA,KAAAH,IAAA,IAAAG,CAAA,CAAA,GAAA,KAAAsD,MAAA,IAAAtD,CAAA,CAAA,GAAA,KAAAuD,OAAA,IAAAvD,CAAA,CAAA,GAAA,KAAAwD,OAAA,IAAAxD,CAAA,CAAA,GAAA,KAAAN,KAAA,EAAA;QAqBKsB,EAAA,GAAAd,MAAA,CAAAC,GAAA,CAAA,6BAGN,CAAC;QAAA0D,GAAA,EAAA;;YAvBJ,MAAAC,IAAA,IAAajE,IAAI,cAAAuC,IAAA,EAAA2B,IAAA,GAAgBA,IAAI,CAAA7E,QAAA,KAAcQ,KAAK,CAAC,0DAAAoE,IAAA;YAEzDF,eAAA,GAAAA,CAAA;gBAAA,IAEI,OAAAI,MAAA,AAAkB,WAAW,IAAA,CAAAC,SAAA,CAAAC,SAAA,CAAAC,SACC,IAAA,CAC7BL,IAAI,EAAA;oBAAA;gBAAA;gBAKPG,SAAA,CAAAC,SAAA,CAAAC,SAAA,CAA8BL,IAAI,CAAC,CAAAM,IAAA,CAAA;oBACjCV,WAAW,CAAA,IAAK,CAAC;oEACjBJ,MAAM;oBAENe,UAAA,CAAA,IAAiBX,WAAW,CAAA,KAAM,CAAC,EAAEF,OAAO,CAAC;gBAAA,GAC5CD,OAAO,CAAC;YAAA;YACX,IAEEF,OAAO,EAAA;gBACFrC,EAAA,qBAAA7C,6KAAA,EAAauD,QAAQ,EAAA;oBAAA4C,OAAA,EAEjBV;gBAAe,CACzB,CAAC;gBAAA,MAAAC,GAAA;YAAA;QAAA;QAAA7D,CAAA,CAAA,EAAA,GAAAqD,OAAA;QAAArD,CAAA,CAAA,GAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,GAAA,GAAAH,IAAA;QAAAG,CAAA,CAAA,GAAA,GAAAsD,MAAA;QAAAtD,CAAA,CAAA,GAAA,GAAAuD,OAAA;QAAAvD,CAAA,CAAA,GAAA,GAAAwD,OAAA;QAAAxD,CAAA,CAAA,GAAA,GAAAN,KAAA;QAAAM,CAAA,CAAA,GAAA,GAAA4D,eAAA;QAAA5D,CAAA,CAAA,GAAA,GAAAgB,EAAA;IAAA,OAAA;QAAA4C,eAAA,GAAA5D,CAAA,CAAA,GAAA;QAAAgB,EAAA,GAAAhB,CAAA,CAAA,GAAA;IAAA;IAAA,IAAAgB,EAAA,KAAAd,MAAA,CAAAC,GAAA,CAAA,gCAAA;QAAA,OAAAa,EAAA;IAAA;IAGJ,MAAA2B,IAAA,GAAac,QAAQ,GAAAzF,wNAAA,GAAAC,qNAAuB;IAAC,IAAAmD,EAAA;IAAA,IAAApB,CAAA,CAAA,GAAA,KAAAU,SAAA,EAAA;QAI9BU,EAAA,OAAA1D,qJAAA,EAAG,UAAU,EAAEgD,SAAS,CAAC;QAAAV,CAAA,CAAA,GAAA,GAAAU,SAAA;QAAAV,CAAA,CAAA,GAAA,GAAAoB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAApB,CAAA,CAAA,GAAA;IAAA;IAAA,IAAAqB,EAAA;IAAA,IAAArB,CAAA,CAAA,GAAA,KAAA2C,IAAA,IAAA3C,CAAA,CAAA,GAAA,KAAA0B,QAAA,EAAA;QAMnCL,EAAA,GAAAK,QAAQ,4DAAI,6LAAC,IAAI;YAAW,SAAuB,EAAvB,uBAAuB;YAAO,IAAE,CAAF,CAAA,EAAC,CAAC,GAAI;;;;;;QAAA1B,CAAA,CAAA,GAAA,GAAA2C,IAAA;QAAA3C,CAAA,CAAA,GAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,GAAA,GAAAqB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAArB,CAAA,CAAA,GAAA;IAAA;IAAA,IAAAsB,EAAA;IAAA,IAAAtB,CAAA,CAAA,GAAA,KAAA4D,eAAA,IAAA5D,CAAA,CAAA,GAAA,KAAAc,KAAA,IAAAd,CAAA,CAAA,GAAA,KAAAoB,EAAA,IAAApB,CAAA,CAAA,GAAA,KAAAqB,EAAA,EAAA;QAPnEC,EAAA,iBAAA,6LAAC,wKAAM;YACM,SAAyB,CAAzB,CAAAF,EAAwB,CAAC;YAC3BwC,OAAe,CAAfA,CAAAA,eAAc,CAAC;YACnB,IAAM,EAAN,MAAM;YACH,OAAO,EAAP,OAAO;YAAA,GACX9C,KAAK,EAER;sBAAAO,EAA+D,CAClE,EARC,MAAM,CAQE;;;;;;QAAArB,CAAA,CAAA,GAAA,GAAA4D,eAAA;QAAA5D,CAAA,CAAA,GAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,GAAA,GAAAoB,EAAA;QAAApB,CAAA,CAAA,GAAA,GAAAqB,EAAA;QAAArB,CAAA,CAAA,GAAA,GAAAsB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAtB,CAAA,CAAA,GAAA;IAAA;IAAA,OARTsB,EAQS;AAAA,CAEZ;;;QA3CyBxB,YAAA;;;MAVbsD,mBAAmB;AAyDhC,2BAA0B7C,EAAA;IAAA,MAAAP,CAAA,OAAAlD,gLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAA0B,QAAA;IAAA,IAAAZ,KAAA;IAAA,IAAAd,CAAA,CAAA,EAAA,KAAAO,EAAA,EAAA;QAAC,CAAA,EAAAmB,QAAA,EAAA,GAAAZ,OAAA,GAAAP,EAA8C;QAAAP,CAAA,CAAA,EAAA,GAAAO,EAAA;QAAAP,CAAA,CAAA,EAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,EAAA,GAAAc,KAAA;IAAA,OAAA;QAAAY,QAAA,GAAA1B,CAAA,CAAA,EAAA;QAAAc,KAAA,GAAAd,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAe,EAAA;IAAA,IAAAf,CAAA,CAAA,EAAA,KAAA0B,QAAA,EAAA;QAIhEX,EAAA,GAAAW,QAAQ,qDAAAgB,QAAA,GAAA8B,KAAA,CAEA,IAAI,EAAA5C,GAAA,CAAA6C,MAAA;QAKTzE,CAAA,CAAA,EAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,EAAA,GAAAe,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAf,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAgB,EAAA;IAAA,IAAAhB,CAAA,CAAA,EAAA,KAAAe,EAAA,EAAA;QATRC,EAAA,iBAAA,6LAAA,GAWM;YAXS,SAAQ,EAAR,QAAQ;oCACrB,6LAAA,IASO,CARJ;0BAAAD,EAOE,CACL,EATA,IASO,CACT,EAXA,GAWM;;;;;;;;;;;QAAAf,CAAA,CAAA,EAAA,GAAAe,EAAA;QAAAf,CAAA,CAAA,EAAA,GAAAgB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAhB,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAoB,EAAA;IAAA,IAAApB,CAAA,CAAA,EAAA,KAAAc,KAAA,IAAAd,CAAA,CAAA,EAAA,KAAAgB,EAAA,EAAA;QAZRI,EAAA,iBAAA,6LAAA,GAaM;YAAA,GAbGN,KAAK,EACZ;sBAAAE,EAWK,CACP,EAbA,GAaM;;;;;;QAAAhB,CAAA,CAAA,EAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,EAAA,GAAAgB,EAAA;QAAAhB,CAAA,CAAA,GAAA,GAAAoB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAApB,CAAA,CAAA,GAAA;IAAA;IAAA,OAbNoB,EAaM;AAAA,CACP;OAfKmD,iBAAiB;AAwBhB,uBAAsBhE,EAAA;;IAAA,MAAAP,CAAA,OAAAlD,gLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAA0B,QAAA;IAAA,IAAAZ,KAAA;IAAA,IAAAd,CAAA,CAAA,EAAA,KAAAO,EAAA,EAAA;QAAC,CAAA,EAAAmB,QAAA,EAAA,GAAAZ,OAAA,GAAAP,EAA0C;QAAAP,CAAA,CAAA,EAAA,GAAAO,EAAA;QAAAP,CAAA,CAAA,EAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,EAAA,GAAAc,KAAA;IAAA,OAAA;QAAAY,QAAA,GAAA1B,CAAA,CAAA,EAAA;QAAAc,KAAA,GAAAd,CAAA,CAAA,EAAA;IAAA;IACtE,MAAAH,IAAA,gBAAa8E,MAAkC,CAAC;IAAC,IAAA5D,EAAA;IAAA,IAAAf,CAAA,CAAA,EAAA,KAAA0B,QAAA,IAAA1B,CAAA,CAAA,EAAA,KAAAH,IAAA,EAAA;QAEzBkB,EAAA,GAAAlB,IAAI,CAAA+B,GAAA,CAAKF,QAAQ,CAAC;QAAA1B,CAAA,CAAA,EAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,EAAA,GAAAH,IAAA;QAAAG,CAAA,CAAA,EAAA,GAAAe,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAf,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAgB,EAAA;IAAA,IAAAhB,CAAA,CAAA,EAAA,KAAAc,KAAA,IAAAd,CAAA,CAAA,EAAA,KAAAe,EAAA,EAAA;QAAnCC,EAAA,iBAAA,6LAAA,GAA0C;YAAA,GAAjCF,KAAK,EAAG;sBAAAC,EAAiB,CAAE,EAApC,GAA0C;;;;;;QAAAf,CAAA,CAAA,EAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,EAAA,GAAAe,EAAA;QAAAf,CAAA,CAAA,EAAA,GAAAgB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAhB,CAAA,CAAA,EAAA;IAAA;IAAA,OAA1CgB,EAA0C;AAAA,CAClD;IAJY0D,aAAa;;QACX5E,YAAA;;;;AAUR,sBAAsBS,EAAA;;IAAA,MAAAP,CAAA,OAAAlD,gLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAA0B,QAAA;IAAA,IAAAhB,SAAA;IAAA,IAAAI,KAAA;IAAA,IAAAC,EAAA;IAAA,IAAArB,KAAA;IAAA,IAAAM,CAAA,CAAA,EAAA,KAAAO,EAAA,EAAA;QAAC,CAAA,EAAAmB,QAAA,EAAAmD,WAAA,EAAA9D,EAAA,EAAAL,SAAA,EAAAhB,KAAA,EAAA,GAAAoB,OAAA,GAAAP,EAMT;QAAAP,CAAA,CAAA,EAAA,GAAAO,EAAA;QAAAP,CAAA,CAAA,EAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,EAAA,GAAAU,SAAA;QAAAV,CAAA,CAAA,EAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,EAAA,GAAAe,EAAA;QAAAf,CAAA,CAAA,EAAA,GAAAN,KAAA;IAAA,OAAA;QAAAgC,QAAA,GAAA1B,CAAA,CAAA,EAAA;QAAAU,SAAA,GAAAV,CAAA,CAAA,EAAA;QAAAc,KAAA,GAAAd,CAAA,CAAA,EAAA;QAAAe,EAAA,GAAAf,CAAA,CAAA,EAAA;QAAAN,KAAA,GAAAM,CAAA,CAAA,EAAA;IAAA;IAJnB,MAAA6E,WAAA,GAAA9D,EAAkB,KAAApB,SAAA,GAAA,OAAlBoB,EAAkB;IAKlB,MAAAgB,WAAA,gBAAoB+C,MAAmC,CAAC;IAAC,IAErDpF,KAAK,KAAKqC,WAAW,EAAA;QAAA,OAAA;IAAA;IAanB,MAAAf,EAAA,GAAA6D,WAAW,IAAApG,oBAAwB;IAAA,IAAA2C,EAAA;IAAA,IAAApB,CAAA,CAAA,EAAA,KAAAU,SAAA,IAAAV,CAAA,CAAA,EAAA,KAAAgB,EAAA,EAAA;QAP1BI,EAAA,OAAA1D,qJAAA,EAAAqB,kBAAA,EAAAJ,uBAAA,EAAAC,kBAAA,EAAAC,qBAAA,EAAAC,uBAAA,EAAAJ,kBAAA,EAOTsC,EAAmC,EACnCN,SACF,CAAC;QAAAV,CAAA,CAAA,EAAA,GAAAU,SAAA;QAAAV,CAAA,CAAA,EAAA,GAAAgB,EAAA;QAAAhB,CAAA,CAAA,EAAA,GAAAoB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAApB,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAqB,EAAA;IAAA,IAAArB,CAAA,CAAA,GAAA,KAAA0B,QAAA,IAAA1B,CAAA,CAAA,GAAA,KAAAc,KAAA,IAAAd,CAAA,CAAA,GAAA,KAAAoB,EAAA,EAAA;QAVHC,EAAA,iBAAA,6LAAA,GAcM;YAbO,SASV,CATU,CAAAD,EASX,CAAC;YAAA,GACGN,KAAK,EAERY;sBAAAA,QAAO,CACV,EAdA,GAcM;;;;;;QAAA1B,CAAA,CAAA,GAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,GAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,GAAA,GAAAoB,EAAA;QAAApB,CAAA,CAAA,GAAA,GAAAqB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAArB,CAAA,CAAA,GAAA;IAAA;IAAA,OAdNqB,EAcM;AAAA,CAET;;;QAvBqBvB,YAAA;;;OAPT8E,aAAa;AAuCnB,0BAAyBrE,EAAA;;IAAA,MAAAP,CAAA,OAAAlD,gLAAA,EAAA;IAAA,IAAAkD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAA0B,QAAA;IAAA,IAAAxC,QAAA;IAAA,IAAA4B,KAAA;IAAA,IAAAC,EAAA;IAAA,IAAA5B,MAAA;IAAA,IAAAa,CAAA,CAAA,EAAA,KAAAO,EAAA,EAAA;QAAC,CAAA,EAAAmB,QAAA,EAAAvC,MAAA,EAAAD,QAAA,EAAA8F,kBAAA,EAAAjE,EAAA,EAAA,GAAAD,OAAA,GAAAP,EAMT;QAAAP,CAAA,CAAA,EAAA,GAAAO,EAAA;QAAAP,CAAA,CAAA,EAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,EAAA,GAAAd,QAAA;QAAAc,CAAA,CAAA,EAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,EAAA,GAAAe,EAAA;QAAAf,CAAA,CAAA,EAAA,GAAAb,MAAA;IAAA,OAAA;QAAAuC,QAAA,GAAA1B,CAAA,CAAA,EAAA;QAAAd,QAAA,GAAAc,CAAA,CAAA,EAAA;QAAAc,KAAA,GAAAd,CAAA,CAAA,EAAA;QAAAe,EAAA,GAAAf,CAAA,CAAA,EAAA;QAAAb,MAAA,GAAAa,CAAA,CAAA,EAAA;IAAA;IAFtB,MAAAgF,kBAAA,GAAAjE,EAAyB,KAAApB,SAAA,GAAA,OAAzBoB,EAAyB;IAGzB,MAAA,CAAA9B,IAAA,EAAAgG,OAAA,CAAA,OAAwB5G,yKAAA,EAAA,IAA4B,CAAC;IAAC,IAAA2C,EAAA;IAAA,IAAAI,EAAA;IAAA,IAAApB,CAAA,CAAA,EAAA,KAAA0B,QAAA,IAAA1B,CAAA,CAAA,EAAA,KAAAd,QAAA,IAAAc,CAAA,CAAA,EAAA,KAAAgF,kBAAA,IAAAhF,CAAA,CAAA,GAAA,KAAAb,MAAA,EAAA;QAE5C6B,EAAA,GAAAA,CAAA;YAAA,IAAA,CACHgE,kBAAkB,EAAA;gBAAA;YAAA;YAIvBhG,SAAA,CAAU0C,QAAQ,EAAExC,QAAQ,EAAEC,MAAM,CAAC,CAAAiF,IAAA,CAC7Ba,OAAO,CAAC,CAAAC,KAAA,CAAAC,OAAA,CAAAC,KAEM,CAAC;QAAA;QACtBhE,EAAA,GAAA;YAACM,QAAQ;YAAEvC,MAAM;YAAE6F,kBAAkB;YAAE9F,QAAQ;SAAA;QAACc,CAAA,CAAA,EAAA,GAAA0B,QAAA;QAAA1B,CAAA,CAAA,EAAA,GAAAd,QAAA;QAAAc,CAAA,CAAA,EAAA,GAAAgF,kBAAA;QAAAhF,CAAA,CAAA,GAAA,GAAAb,MAAA;QAAAa,CAAA,CAAA,GAAA,GAAAgB,EAAA;QAAAhB,CAAA,CAAA,GAAA,GAAAoB,EAAA;IAAA,OAAA;QAAAJ,EAAA,GAAAhB,CAAA,CAAA,GAAA;QAAAoB,EAAA,GAAApB,CAAA,CAAA,GAAA;IAAA;QATnD5B,0KAAA,EAAU4C,EAST,EAAEI,EAAgD,CAAC;IAAA,IAAA,CAAA,CAE9C4D,kBAAkB,IAAI/F,IAAI,GAAA;QAAA,IAAAoC,EAAA;QAAA,IAAArB,CAAA,CAAA,GAAA,KAAA0B,QAAA,EAAA;YACvBL,EAAA,iBAAA,6LAAC,iBAAiB,CAAEK;0BAAAA,QAAO,CAAE,EAA5B,iBAAiB,CAA+B;;;;;;YAAA1B,CAAA,CAAA,GAAA,GAAA0B,QAAA;YAAA1B,CAAA,CAAA,GAAA,GAAAqB,EAAA;QAAA,OAAA;YAAAA,EAAA,GAAArB,CAAA,CAAA,GAAA;QAAA;QAAA,OAAjDqB,EAAiD;IAAA;IAAA,IAAAA,EAAA;IAAA,IAAArB,CAAA,CAAA,GAAA,KAAAf,IAAA,EAAA;QAM7BoC,EAAA,GAAA;YAAAgE,MAAA,EAAUpG;QAAI;QAAEe,CAAA,CAAA,GAAA,GAAAf,IAAA;QAAAe,CAAA,CAAA,GAAA,GAAAqB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAArB,CAAA,CAAA,GAAA;IAAA;IAAA,IAAAsB,EAAA;IAAA,IAAAtB,CAAA,CAAA,GAAA,KAAAc,KAAA,IAAAd,CAAA,CAAA,GAAA,KAAAqB,EAAA,EAAA;QAF3CC,EAAA,iBAAA,6LAAA,GAIE;YAFyB,uBAAgB,CAAhB,CAAAD,EAAe,CAAC;YAAA,GACrCP,KAAK,IACT;;;;;;QAAAd,CAAA,CAAA,GAAA,GAAAc,KAAA;QAAAd,CAAA,CAAA,GAAA,GAAAqB,EAAA;QAAArB,CAAA,CAAA,GAAA,GAAAsB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAtB,CAAA,CAAA,GAAA;IAAA;IAAA,OAJFsB,EAIE;AAAA,CAEL;;OA/BYyD,gBAAgB;AAhQC,SAAApD,OAAA2D,KAAA;IAAA,OAKSA,KAAK,CAAAzF,IAAA;AAAA;AAiBX,SAAAmC,OAAAsD,KAAA;IAAA,OAOaA,KAAK,CAAA5F,KAAA;AAAA;AA0BpB,SAAAmD,OAAAyC,KAAA;IAAA,OAAA;QAAA5F,KAAA,EAEpB4F,KAAK,CAAA5F,KAAA;QAAAE,aAAA,EACG0F,KAAK,CAAA1F,aAAAA;IAAA;AAAA;AAmCc,SAAAsD,OAAAoC,KAAA;IAAA,OAKCA,KAAK,CAAAzF,IAAA;AAAA;AA2BT,SAAA8D,OAAA2B,KAAA;IAAA,OAAA;QAAAzF,IAAA,EAWzByF,KAAK,CAAAzF,IAAA;QAAAH,KAAA,EACJ4F,KAAK,CAAA5F,KAAAA;IAAA;AAAA;AA6CU,SAAA+E,OAAAc,IAAA,EAAAC,CAAA;IAAA,qBAQd,6LAAA,IAEO;QAFS,SAAM,EAAN,MAAM,CAAM,GAAc,CAAd;kBACzBD,IAAG,CACN,EAFA,IAEO;OAFqB,UAAGC,CAAC,EAAA,KAAQ,CAAC,CAAC,CACvCD,IADiCA,IAAI;;;;;AAEjC;AAcU,SAAAZ,OAAAW,KAAA;IAAA,OACUA,KAAK,CAAAzF,IAAA;AAAA;AAUf,SAAAiF,OAAAQ,KAAA;IAAA,OAOiBA,KAAK,CAAA5F,KAAA;AAAA","ignoreList":[],"debugId":null}},
    {"offset": {"line": 3314, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/markdown/D%3A/github/nakafa.com-main/packages/design-system/components/markdown/code-block.tsx"],"sourcesContent":["\"use client\";\n\nimport type {\n  BundledLanguage,\n  CodeBlockData,\n} from \"@repo/design-system/components/code-block\";\nimport {\n  CodeBlock,\n  CodeBlockBody,\n  CodeBlockContent,\n  CodeBlockCopyButton,\n  CodeBlockFilename,\n  CodeBlockFiles,\n  CodeBlockHeader,\n  CodeBlockItem,\n  CodeBlockSelect,\n  CodeBlockSelectContent,\n  CodeBlockSelectItem,\n  CodeBlockSelectTrigger,\n  CodeBlockSelectValue,\n} from \"@repo/design-system/components/code-block\";\n\nexport function CodeBlockMdx({ data }: { data: CodeBlockData[] }) {\n  return (\n    <CodeBlock className=\"my-4\" data={data} defaultValue={data[0].language}>\n      <CodeBlockHeader>\n        <CodeBlockFiles>\n          {(item) => (\n            <CodeBlockFilename key={item.language} value={item.language}>\n              {item.filename}\n            </CodeBlockFilename>\n          )}\n        </CodeBlockFiles>\n        <CodeBlockSelect>\n          <CodeBlockSelectTrigger>\n            <CodeBlockSelectValue />\n          </CodeBlockSelectTrigger>\n          <CodeBlockSelectContent align=\"end\">\n            {(item) => (\n              <CodeBlockSelectItem key={item.language} value={item.language}>\n                {item.language}\n              </CodeBlockSelectItem>\n            )}\n          </CodeBlockSelectContent>\n        </CodeBlockSelect>\n        <CodeBlockCopyButton />\n      </CodeBlockHeader>\n      <CodeBlockBody>\n        {(item) => (\n          <CodeBlockItem key={item.language} value={item.language}>\n            <CodeBlockContent language={item.language as BundledLanguage}>\n              {item.code}\n            </CodeBlockContent>\n          </CodeBlockItem>\n        )}\n      </CodeBlockBody>\n    </CodeBlock>\n  );\n}\n"],"names":["c","_c","CodeBlock","CodeBlockBody","CodeBlockContent","CodeBlockCopyButton","CodeBlockFilename","CodeBlockFiles","CodeBlockHeader","CodeBlockItem","CodeBlockSelect","CodeBlockSelectContent","CodeBlockSelectItem","CodeBlockSelectTrigger","CodeBlockSelectValue","CodeBlockMdx","t0","$","$i","Symbol","for","data","t1","_temp","t2","t3","_temp2","_temp3","t4","language","item_1","item","code","item_0","filename"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 3473, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/ui/D%3A/github/nakafa.com-main/packages/design-system/components/ui/chart.tsx"],"sourcesContent":["\"use client\";\n\nimport { cn } from \"@repo/design-system/lib/utils\";\nimport { createContext, useContext, useId, useMemo } from \"react\";\nimport {\n  Legend,\n  type LegendProps,\n  ResponsiveContainer,\n  Tooltip,\n} from \"recharts\";\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const;\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode;\n    icon?: React.ComponentType;\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  );\n};\n\ntype ChartContextProps = {\n  config: ChartConfig;\n};\n\nconst ChartContext = createContext<ChartContextProps | null>(null);\n\nfunction useChart() {\n  const context = useContext(ChartContext);\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\");\n  }\n\n  return context;\n}\n\nfunction ChartContainer({\n  id,\n  className,\n  children,\n  config,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  config: ChartConfig;\n  children: React.ComponentProps<typeof ResponsiveContainer>[\"children\"];\n}) {\n  const uniqueId = useId();\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`;\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        className={cn(\n          \"flex aspect-square justify-center text-xs sm:aspect-video [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-hidden [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-hidden [&_.recharts-surface]:outline-hidden\",\n          className\n        )}\n        data-chart={chartId}\n        data-slot=\"chart\"\n        {...props}\n      >\n        <ChartStyle config={config} id={chartId} />\n        <ResponsiveContainer>{children}</ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  );\n}\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, itemConfig]) => itemConfig.theme || itemConfig.color\n  );\n\n  if (!colorConfig.length) {\n    return null;\n  }\n\n  const styleContent = Object.entries(THEMES)\n    .map(\n      ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color;\n    return color ? `  --color-${key}: ${color};` : null;\n  })\n  .filter(Boolean)\n  .join(\"\\n\")}\n}\n`\n    )\n    .join(\"\\n\");\n\n  return <style>{styleContent}</style>;\n};\n\nconst ChartTooltip = Tooltip;\n\nfunction ChartTooltipContent({\n  active,\n  payload,\n  className,\n  indicator = \"dot\",\n  hideLabel = false,\n  hideIndicator = false,\n  label,\n  labelFormatter,\n  labelClassName,\n  formatter,\n  color,\n  nameKey,\n  labelKey,\n}: React.ComponentProps<typeof Tooltip> &\n  React.ComponentProps<\"div\"> & {\n    hideLabel?: boolean;\n    hideIndicator?: boolean;\n    indicator?: \"line\" | \"dot\" | \"dashed\";\n    nameKey?: string;\n    labelKey?: string;\n  }) {\n  const { config } = useChart();\n\n  const tooltipLabel = useMemo(() => {\n    if (hideLabel || !payload?.length) {\n      return null;\n    }\n\n    const [item] = payload;\n    const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`;\n    const itemConfig = getPayloadConfigFromPayload(config, item, key);\n    const value =\n      !labelKey && typeof label === \"string\"\n        ? config[label as keyof typeof config]?.label || label\n        : itemConfig?.label;\n\n    if (labelFormatter) {\n      return (\n        <div className={cn(\"font-medium\", labelClassName)}>\n          {labelFormatter(value, payload)}\n        </div>\n      );\n    }\n\n    if (!value) {\n      return null;\n    }\n\n    return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>;\n  }, [\n    label,\n    labelFormatter,\n    payload,\n    hideLabel,\n    labelClassName,\n    config,\n    labelKey,\n  ]);\n\n  if (!(active && payload?.length)) {\n    return null;\n  }\n\n  const nestLabel = payload.length === 1 && indicator !== \"dot\";\n\n  return (\n    <div\n      className={cn(\n        \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n        className\n      )}\n    >\n      {nestLabel ? null : tooltipLabel}\n      <div className=\"grid gap-1.5\">\n        {payload.map((item, index) => {\n          const key = `${nameKey || item.name || item.dataKey || \"value\"}`;\n          const itemConfig = getPayloadConfigFromPayload(config, item, key);\n          const indicatorColor = color || item.payload.fill || item.color;\n\n          return (\n            <div\n              className={cn(\n                \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                indicator === \"dot\" && \"items-center\"\n              )}\n              key={item.dataKey}\n            >\n              {formatter && item?.value !== undefined && item.name ? (\n                formatter(item.value, item.name, item, index, item.payload)\n              ) : (\n                <>\n                  {itemConfig?.icon ? (\n                    <itemConfig.icon />\n                  ) : (\n                    !hideIndicator && (\n                      <div\n                        className={cn(\n                          \"shrink-0 rounded-[2px] border-(--color-border) bg-(--color-bg)\",\n                          {\n                            \"h-2.5 w-2.5\": indicator === \"dot\",\n                            \"w-1\": indicator === \"line\",\n                            \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                              indicator === \"dashed\",\n                            \"my-0.5\": nestLabel && indicator === \"dashed\",\n                          }\n                        )}\n                        style={\n                          {\n                            \"--color-bg\": indicatorColor,\n                            \"--color-border\": indicatorColor,\n                          } as React.CSSProperties\n                        }\n                      />\n                    )\n                  )}\n                  <div\n                    className={cn(\n                      \"flex flex-1 justify-between gap-2 leading-none\",\n                      nestLabel ? \"items-end\" : \"items-center\"\n                    )}\n                  >\n                    <div className=\"grid gap-1.5\">\n                      {nestLabel ? tooltipLabel : null}\n                      <span className=\"text-muted-foreground\">\n                        {itemConfig?.label || item.name}\n                      </span>\n                    </div>\n                    {item.value && (\n                      <span className=\"font-medium font-mono text-foreground tabular-nums\">\n                        {item.value.toLocaleString()}\n                      </span>\n                    )}\n                  </div>\n                </>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nconst ChartLegend = Legend;\n\nfunction ChartLegendContent({\n  className,\n  hideIcon = false,\n  payload,\n  verticalAlign = \"bottom\",\n  nameKey,\n}: React.ComponentProps<\"div\"> &\n  Pick<LegendProps, \"payload\" | \"verticalAlign\"> & {\n    hideIcon?: boolean;\n    nameKey?: string;\n  }) {\n  const { config } = useChart();\n\n  if (!payload?.length) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        \"flex flex-wrap items-center justify-center gap-4\",\n        verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n        className\n      )}\n    >\n      {payload.map((item) => {\n        const key = `${nameKey || item.dataKey || \"value\"}`;\n        const itemConfig = getPayloadConfigFromPayload(config, item, key);\n\n        return (\n          <div\n            className={cn(\n              \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n            )}\n            key={item.value}\n          >\n            {itemConfig?.icon && !hideIcon ? (\n              <itemConfig.icon />\n            ) : (\n              <div\n                className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                style={{\n                  backgroundColor: item.color,\n                }}\n              />\n            )}\n            {itemConfig?.label}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return;\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined;\n\n  let configLabelKey: string = key;\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string;\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string;\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config];\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n};\n"],"names":["c","_c","cn","createContext","useContext","useId","useMemo","Legend","ResponsiveContainer","Tooltip","THEMES","light","dark","ChartContext","useChart","$","$i","Symbol","for","context","Error","ChartContainer","t0","children","className","config","id","props","uniqueId","chartId","replace","t1","t2","t3","t4","t5","t6","ChartStyle","Object","entries","filter","_temp","colorConfig","length","map","theme","prefix","key","itemConfig_0","color","itemConfig","Boolean","join","styleContent","ChartTooltip","ChartTooltipContent","active","payload","indicator","hideLabel","hideIndicator","label","labelFormatter","labelClassName","formatter","nameKey","labelKey","tooltipLabel","item","dataKey","name","getPayloadConfigFromPayload","value","nestLabel","index","indicatorColor","fill","undefined","icon","toLocaleString","ChartLegend","ChartLegendContent","hideIcon","verticalAlign","backgroundColor","payloadPayload","configLabelKey"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 3989, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/contents/articles/politics/kim-plus-empty-box/D%3A/github/nakafa.com-main/packages/contents/articles/politics/kim-plus-empty-box/chart.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport {\n  type ChartConfig,\n  ChartContainer,\n  ChartLegend,\n  ChartLegendContent,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@repo/design-system/components/ui/chart\";\nimport { useTranslations } from \"next-intl\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  LabelList,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\ntype Props = {\n  title: string;\n  description: string;\n  footnote: string;\n};\n\nexport function ElectabilityChart({ title, description, footnote }: Props) {\n  const t = useTranslations(\"Common\");\n\n  const electabilityData = [\n    {\n      name: \"Anies Baswedan\",\n      value: 40,\n    },\n    {\n      name: \"Basuki Tjahaja Purnama\",\n      value: 24,\n    },\n    {\n      name: \"Ridwan Kamil\",\n      value: 13,\n    },\n    {\n      name: \"Tri Rismaharini\",\n      value: 1,\n    },\n    {\n      name: \"Erick Tohir\",\n      value: 1,\n    },\n    {\n      name: \"Erwin Aksa\",\n      value: 1,\n    },\n    {\n      name: \"Ahmad Sahroni\",\n      value: 1,\n    },\n    {\n      name: t(\"not-answering\"),\n      value: 16,\n    },\n  ];\n\n  const chartConfig = {\n    value: {\n      label: t(\"electability\"),\n      color: \"var(--chart-3)\",\n    },\n    label: {\n      color: \"var(--background)\",\n    },\n  } satisfies ChartConfig;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <BarChart\n            accessibilityLayer\n            data={electabilityData}\n            layout=\"vertical\"\n            margin={{\n              right: 24,\n              left: 81,\n            }}\n          >\n            <CartesianGrid horizontal={false} />\n            <YAxis\n              axisLine={false}\n              dataKey=\"name\"\n              hide\n              tickLine={false}\n              tickMargin={10}\n              type=\"category\"\n            />\n            <XAxis dataKey=\"value\" hide type=\"number\" />\n            <ChartTooltip\n              content={<ChartTooltipContent indicator=\"line\" />}\n              cursor={false}\n            />\n            <Bar\n              dataKey=\"value\"\n              fill=\"var(--color-value)\"\n              layout=\"vertical\"\n              radius={8}\n            >\n              <LabelList\n                className=\"fill-foreground\"\n                dataKey=\"name\"\n                fontSize={12}\n                offset={10}\n                position=\"left\"\n                width={75}\n              />\n              <LabelList\n                className=\"fill-foreground\"\n                dataKey=\"value\"\n                fontSize={12}\n                offset={8}\n                position=\"right\"\n              />\n            </Bar>\n            <ChartLegend content={<ChartLegendContent />} />\n          </BarChart>\n        </ChartContainer>\n      </CardContent>\n      <CardFooter>\n        <p className=\"text-sm\">{footnote}</p>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":["c","_c","Card","CardContent","CardDescription","CardFooter","CardHeader","CardTitle","ChartContainer","ChartLegend","ChartLegendContent","ChartTooltip","ChartTooltipContent","useTranslations","Bar","BarChart","CartesianGrid","LabelList","XAxis","YAxis","ElectabilityChart","t0","$","$i","Symbol","for","title","description","footnote","t","t1","t2","t3","t4","t5","t6","t7","name","value","t8","t9","electabilityData","t10","t11","label","color","t12","t13","chartConfig","t14","t15","t16","t17","t18","t19","t20","right","left","t21","t22","t23","t24","t25","t26","t27"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 4420, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/contents/articles/politics/merah-putih-cabinet-analysis/D%3A/github/nakafa.com-main/packages/contents/articles/politics/merah-putih-cabinet-analysis/chart.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport {\n  type ChartConfig,\n  ChartContainer,\n  ChartLegend,\n  ChartLegendContent,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@repo/design-system/components/ui/chart\";\nimport { useTranslations } from \"next-intl\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  LabelList,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\nconst TICK_LABEL_CHAR_LIMIT = 3;\n\ntype Props = {\n  title: string;\n  description: string;\n  footnote: string;\n};\n\nconst CabinetChartData = [\n  { name: \"Reformasi Pembangunan\", cabinet: 37 },\n  { name: \"Persatuan Nasional\", cabinet: 36 },\n  { name: \"Gotong Royong\", cabinet: 33 },\n  { name: \"Indonesia Bersatu\", cabinet: 34 },\n  { name: \"Indonesia Bersatu II\", cabinet: 34 },\n  { name: \"Kerja\", cabinet: 34 },\n  { name: \"Indonesia Maju\", cabinet: 34 },\n  { name: \"Merah Putih\", cabinet: 48 },\n];\n\nexport function CabinetChart({ title, description, footnote }: Props) {\n  const t = useTranslations(\"Common\");\n\n  const chartConfig = {\n    cabinet: {\n      label: t(\"cabinet\"),\n      color: \"var(--chart-1)\",\n    },\n    label: {\n      color: \"var(--foreground)\",\n    },\n  } satisfies ChartConfig;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <BarChart\n            accessibilityLayer\n            data={CabinetChartData}\n            layout=\"vertical\"\n            margin={{\n              right: 16,\n            }}\n          >\n            <CartesianGrid horizontal={false} />\n            <YAxis\n              axisLine={false}\n              dataKey=\"name\"\n              hide\n              tickFormatter={(value) => value.slice(0, TICK_LABEL_CHAR_LIMIT)}\n              tickLine={false}\n              tickMargin={10}\n              type=\"category\"\n            />\n            <XAxis dataKey=\"cabinet\" hide type=\"number\" />\n            <ChartTooltip\n              content={<ChartTooltipContent indicator=\"line\" />}\n              cursor={false}\n            />\n            <Bar\n              dataKey=\"cabinet\"\n              fill=\"var(--color-cabinet)\"\n              layout=\"vertical\"\n              radius={8}\n            >\n              <LabelList\n                className=\"fill-(--color-label)\"\n                dataKey=\"name\"\n                fontSize={12}\n                offset={8}\n                position=\"insideLeft\"\n              />\n              <LabelList\n                className=\"fill-foreground\"\n                dataKey=\"cabinet\"\n                fontSize={12}\n                offset={8}\n                position=\"right\"\n              />\n            </Bar>\n            <ChartLegend content={<ChartLegendContent />} />\n          </BarChart>\n        </ChartContainer>\n      </CardContent>\n      <CardFooter>\n        <p className=\"text-sm\">{footnote}</p>\n      </CardFooter>\n    </Card>\n  );\n}\n\nexport function CompositionChart({ title, description, footnote }: Props) {\n  const t = useTranslations(\"Common\");\n\n  const MinisterChartData = [{ name: t(\"minister\"), new: 31, incumbent: 18 }];\n  const GenderChartData = [{ name: t(\"gender\"), male: 43, female: 5 }];\n  const PoliticalStatusChartData = [\n    { name: t(\"political-status\"), politician: 23, non_politician: 25 },\n  ];\n\n  const chartConfig = {\n    new: {\n      label: t(\"new\"),\n      color: \"var(--chart-1)\",\n    },\n    incumbent: {\n      label: t(\"incumbent\"),\n      color: \"var(--chart-2)\",\n    },\n    male: {\n      label: t(\"male\"),\n      color: \"var(--chart-1)\",\n    },\n    female: {\n      label: t(\"female\"),\n      color: \"var(--chart-2)\",\n    },\n    politician: {\n      label: t(\"politicians\"),\n      color: \"var(--chart-1)\",\n    },\n    non_politician: {\n      label: t(\"non-politicians\"),\n      color: \"var(--chart-2)\",\n    },\n    label: {\n      color: \"var(--foreground)\",\n    },\n  } satisfies ChartConfig;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid w-full grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3\">\n          <ChartContainer\n            className=\"aspect-square sm:aspect-square\"\n            config={chartConfig}\n          >\n            <BarChart accessibilityLayer data={MinisterChartData}>\n              <CartesianGrid vertical={false} />\n              <XAxis\n                axisLine={false}\n                dataKey=\"name\"\n                tickLine={false}\n                tickMargin={10}\n              />\n              <ChartTooltip\n                content={<ChartTooltipContent indicator=\"line\" />}\n                cursor={false}\n              />\n              <Bar dataKey=\"new\" fill=\"var(--color-new)\" radius={8} />\n              <Bar\n                dataKey=\"incumbent\"\n                fill=\"var(--color-incumbent)\"\n                radius={8}\n              />\n              <ChartLegend content={<ChartLegendContent />} />\n            </BarChart>\n          </ChartContainer>\n\n          <ChartContainer\n            className=\"aspect-square sm:aspect-square\"\n            config={chartConfig}\n          >\n            <BarChart data={GenderChartData}>\n              <CartesianGrid vertical={false} />\n              <XAxis\n                axisLine={false}\n                dataKey=\"name\"\n                tickLine={false}\n                tickMargin={10}\n              />\n              <ChartTooltip\n                content={<ChartTooltipContent indicator=\"line\" />}\n                cursor={false}\n              />\n              <Bar dataKey=\"male\" fill=\"var(--color-male)\" radius={8} />\n              <Bar dataKey=\"female\" fill=\"var(--color-female)\" radius={8} />\n              <ChartLegend content={<ChartLegendContent />} />\n            </BarChart>\n          </ChartContainer>\n\n          <ChartContainer\n            className=\"aspect-square sm:aspect-square\"\n            config={chartConfig}\n          >\n            <BarChart data={PoliticalStatusChartData}>\n              <CartesianGrid vertical={false} />\n              <XAxis\n                axisLine={false}\n                dataKey=\"name\"\n                tickLine={false}\n                tickMargin={10}\n              />\n              <ChartTooltip\n                content={<ChartTooltipContent indicator=\"line\" />}\n                cursor={false}\n              />\n              <Bar\n                dataKey=\"politician\"\n                fill=\"var(--color-politician)\"\n                radius={8}\n              />\n              <Bar\n                dataKey=\"non_politician\"\n                fill=\"var(--color-non_politician)\"\n                radius={8}\n              />\n              <ChartLegend content={<ChartLegendContent />} />\n            </BarChart>\n          </ChartContainer>\n        </div>\n      </CardContent>\n      <CardFooter>\n        <p className=\"text-sm\">{footnote}</p>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":["c","_c","Card","CardContent","CardDescription","CardFooter","CardHeader","CardTitle","ChartContainer","ChartLegend","ChartLegendContent","ChartTooltip","ChartTooltipContent","useTranslations","Bar","BarChart","CartesianGrid","LabelList","XAxis","YAxis","TICK_LABEL_CHAR_LIMIT","CabinetChartData","name","cabinet","CabinetChart","t0","$","$i","Symbol","for","title","description","footnote","t","t1","t2","label","color","t3","t4","chartConfig","t5","t6","t7","t10","t11","t8","t9","right","_temp","t12","t13","t14","t15","t16","t17","value","slice","CompositionChart","new","incumbent","MinisterChartData","male","female","GenderChartData","politician","non_politician","PoliticalStatusChartData","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","t31","t32","t33","t34","t35","t36","t37","t38","t39","t40","t41","t42","t43","t44","t45","t46","t47","t48","t49","t50"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 5527, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/ui/D%3A/github/nakafa.com-main/packages/design-system/components/ui/stepper.tsx"],"sourcesContent":["\"use client\";\n\nimport { cn } from \"@repo/design-system/lib/utils\";\nimport { CheckIcon, LoaderCircleIcon } from \"lucide-react\";\nimport { Slot as SlotPrimitive } from \"radix-ui\";\nimport { createContext, useCallback, useContext, useState } from \"react\";\n\n// Types\ntype StepperContextValue = {\n  activeStep: number;\n  setActiveStep: (step: number) => void;\n  orientation: \"horizontal\" | \"vertical\";\n};\n\ntype StepItemContextValue = {\n  step: number;\n  state: StepState;\n  isDisabled: boolean;\n  isLoading: boolean;\n};\n\ntype StepState = \"active\" | \"completed\" | \"inactive\" | \"loading\";\n\n// Contexts\nconst StepperContext = createContext<StepperContextValue | undefined>(\n  undefined\n);\nconst StepItemContext = createContext<StepItemContextValue | undefined>(\n  undefined\n);\n\nconst useStepper = () => {\n  const context = useContext(StepperContext);\n  if (!context) {\n    throw new Error(\"useStepper must be used within a Stepper\");\n  }\n  return context;\n};\n\nconst useStepItem = () => {\n  const context = useContext(StepItemContext);\n  if (!context) {\n    throw new Error(\"useStepItem must be used within a StepperItem\");\n  }\n  return context;\n};\n\n// Components\ninterface StepperProps extends React.HTMLAttributes<HTMLDivElement> {\n  defaultValue?: number;\n  value?: number;\n  onValueChange?: (value: number) => void;\n  orientation?: \"horizontal\" | \"vertical\";\n}\n\nfunction Stepper({\n  defaultValue = 0,\n  value,\n  onValueChange,\n  orientation = \"horizontal\",\n  className,\n  ...props\n}: StepperProps) {\n  const [activeStep, setInternalStep] = useState(defaultValue);\n\n  const setActiveStep = useCallback(\n    (step: number) => {\n      if (value === undefined) {\n        setInternalStep(step);\n      }\n      onValueChange?.(step);\n    },\n    [value, onValueChange]\n  );\n\n  const currentStep = value ?? activeStep;\n\n  return (\n    <StepperContext.Provider\n      value={{\n        activeStep: currentStep,\n        setActiveStep,\n        orientation,\n      }}\n    >\n      <div\n        className={cn(\n          \"group/stepper inline-flex data-[orientation=horizontal]:w-full data-[orientation=horizontal]:flex-row data-[orientation=vertical]:flex-col\",\n          className\n        )}\n        data-orientation={orientation}\n        data-slot=\"stepper\"\n        {...props}\n      />\n    </StepperContext.Provider>\n  );\n}\n\n// StepperItem\ninterface StepperItemProps extends React.HTMLAttributes<HTMLDivElement> {\n  step: number;\n  completed?: boolean;\n  disabled?: boolean;\n  loading?: boolean;\n}\n\nfunction StepperItem({\n  step,\n  completed = false,\n  disabled = false,\n  loading = false,\n  className,\n  children,\n  ...props\n}: StepperItemProps) {\n  const { activeStep } = useStepper();\n\n  let state: StepState;\n  if (completed || step < activeStep) {\n    state = \"completed\";\n  } else if (activeStep === step) {\n    state = \"active\";\n  } else {\n    state = \"inactive\";\n  }\n\n  const isLoading = loading && step === activeStep;\n\n  return (\n    <StepItemContext.Provider\n      value={{ step, state, isDisabled: disabled, isLoading }}\n    >\n      <div\n        className={cn(\n          \"group/step flex items-center group-data-[orientation=horizontal]/stepper:flex-row group-data-[orientation=vertical]/stepper:flex-col\",\n          className\n        )}\n        data-slot=\"stepper-item\"\n        data-state={state}\n        {...(isLoading ? { \"data-loading\": true } : {})}\n        {...props}\n      >\n        {children}\n      </div>\n    </StepItemContext.Provider>\n  );\n}\n\n// StepperTrigger\ninterface StepperTriggerProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  asChild?: boolean;\n}\n\nfunction StepperTrigger({\n  asChild = false,\n  className,\n  children,\n  ...props\n}: StepperTriggerProps) {\n  const { setActiveStep } = useStepper();\n  const { step, isDisabled } = useStepItem();\n\n  if (asChild) {\n    const Comp = asChild ? SlotPrimitive.Slot : \"span\";\n    return (\n      <Comp className={className} data-slot=\"stepper-trigger\">\n        {children}\n      </Comp>\n    );\n  }\n\n  return (\n    <button\n      className={cn(\n        \"inline-flex items-center gap-3 rounded-full outline-none focus-visible:z-10 focus-visible:border-ring focus-visible:ring-[3px] focus-visible:ring-ring/50 disabled:pointer-events-none disabled:opacity-50\",\n        className\n      )}\n      data-slot=\"stepper-trigger\"\n      disabled={isDisabled}\n      onClick={() => setActiveStep(step)}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n}\n\n// StepperIndicator\ninterface StepperIndicatorProps extends React.HTMLAttributes<HTMLDivElement> {\n  asChild?: boolean;\n}\n\nfunction StepperIndicator({\n  asChild = false,\n  className,\n  children,\n  ...props\n}: StepperIndicatorProps) {\n  const { state, step, isLoading } = useStepItem();\n\n  return (\n    <span\n      className={cn(\n        \"relative flex size-6 shrink-0 items-center justify-center rounded-full bg-muted font-medium text-muted-foreground text-xs data-[state=active]:bg-primary data-[state=completed]:bg-primary data-[state=active]:text-primary-foreground data-[state=completed]:text-primary-foreground\",\n        className\n      )}\n      data-slot=\"stepper-indicator\"\n      data-state={state}\n      {...props}\n    >\n      {asChild ? (\n        children\n      ) : (\n        <>\n          <span className=\"transition-all group-data-[state=completed]/step:scale-0 group-data-loading/step:scale-0 group-data-[state=completed]/step:opacity-0 group-data-loading/step:opacity-0 group-data-loading/step:transition-none\">\n            {step}\n          </span>\n          <CheckIcon\n            aria-hidden=\"true\"\n            className=\"absolute scale-0 opacity-0 transition-all group-data-[state=completed]/step:scale-100 group-data-[state=completed]/step:opacity-100\"\n            size={16}\n          />\n          {isLoading && (\n            <span className=\"absolute transition-all\">\n              <LoaderCircleIcon\n                aria-hidden=\"true\"\n                className=\"animate-spin\"\n                size={14}\n              />\n            </span>\n          )}\n        </>\n      )}\n    </span>\n  );\n}\n\n// StepperTitle\nfunction StepperTitle({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLHeadingElement>) {\n  return (\n    <h3\n      className={cn(\"font-medium text-sm\", className)}\n      data-slot=\"stepper-title\"\n      {...props}\n    />\n  );\n}\n\n// StepperDescription\nfunction StepperDescription({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLParagraphElement>) {\n  return (\n    <p\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      data-slot=\"stepper-description\"\n      {...props}\n    />\n  );\n}\n\n// StepperSeparator\nfunction StepperSeparator({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\n        \"m-0.5 bg-muted group-data-[orientation=horizontal]/stepper:h-0.5 group-data-[orientation=vertical]/stepper:h-12 group-data-[orientation=horizontal]/stepper:w-full group-data-[orientation=vertical]/stepper:w-0.5 group-data-[orientation=horizontal]/stepper:flex-1 group-data-[state=completed]/step:bg-primary\",\n        className\n      )}\n      data-slot=\"stepper-separator\"\n      {...props}\n    />\n  );\n}\n\nexport {\n  Stepper,\n  StepperDescription,\n  StepperIndicator,\n  StepperItem,\n  StepperSeparator,\n  StepperTitle,\n  StepperTrigger,\n};\n"],"names":["c","_c","cn","CheckIcon","LoaderCircleIcon","Slot","SlotPrimitive","createContext","useCallback","useContext","useState","StepperContext","undefined","StepItemContext","useStepper","$","$i","Symbol","for","context","Error","useStepItem","Stepper","t0","className","onValueChange","props","t1","t2","value","defaultValue","orientation","activeStep","setInternalStep","t3","step","setActiveStep","currentStep","t4","t5","t6","t7","StepperItem","children","completed","disabled","loading","state","isLoading","isDisabled","t8","StepperTrigger","asChild","Comp","StepperIndicator","StepperTitle","StepperDescription","StepperSeparator"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 6213, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/contents/articles/politics/pork-barrel-politics-power/D%3A/github/nakafa.com-main/packages/contents/articles/politics/pork-barrel-politics-power/chart.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport {\n  type ChartConfig,\n  ChartContainer,\n  ChartLegend,\n  ChartLegendContent,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@repo/design-system/components/ui/chart\";\nimport { format } from \"date-fns\";\nimport { useTranslations } from \"next-intl\";\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  LabelList,\n  Line,\n  LineChart,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\ntype Props = {\n  title: string;\n  description: string;\n  footnote: string;\n  yLabel: string;\n};\n\nconst BudgetChartData = [\n  {\n    year: \"2020\",\n    budget: 498,\n  },\n  {\n    year: \"2021\",\n    budget: 468.2,\n  },\n  {\n    year: \"2022\",\n    budget: 460.6,\n  },\n  {\n    year: \"2023\",\n    budget: 439.1,\n  },\n  {\n    year: \"2024\",\n    budget: 496.8,\n  },\n];\n\nexport function BudgetChart({\n  title,\n  yLabel,\n  footnote,\n}: Omit<Props, \"description\">) {\n  const t = useTranslations(\"Common\");\n\n  const chartConfig = {\n    budget: {\n      label: t(\"budget\"),\n      color: \"var(--chart-4)\",\n    },\n    label: {\n      color: \"var(--foreground)\",\n    },\n  } satisfies ChartConfig;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>Kemenkeu RI, 2024a.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <BarChart\n            accessibilityLayer\n            data={BudgetChartData}\n            margin={{\n              right: 16,\n            }}\n          >\n            <CartesianGrid vertical={false} />\n            <XAxis\n              axisLine={false}\n              dataKey=\"year\"\n              tickLine={false}\n              tickMargin={10}\n            />\n            <YAxis\n              axisLine={false}\n              label={{\n                value: yLabel,\n                angle: -90,\n                position: \"insideLeft\",\n                style: { textAnchor: \"middle\" },\n              }}\n              tickLine={false}\n            />\n            <ChartTooltip\n              content={<ChartTooltipContent indicator=\"line\" />}\n              cursor={false}\n            />\n            <Bar dataKey=\"budget\" fill=\"var(--color-budget)\" radius={8}>\n              <LabelList\n                className=\"fill-foreground\"\n                dataKey=\"budget\"\n                fontSize={12}\n                offset={8}\n                position=\"top\"\n              />\n            </Bar>\n            <ChartLegend content={<ChartLegendContent />} />\n          </BarChart>\n        </ChartContainer>\n      </CardContent>\n      <CardFooter>\n        <p className=\"text-sm\">{footnote}</p>\n      </CardFooter>\n    </Card>\n  );\n}\n\nconst FundChartData = [\n  {\n    year: \"2015\",\n    fund: 16.7,\n  },\n  {\n    year: \"2016\",\n    fund: 9.3,\n  },\n  {\n    year: \"2017\",\n    fund: 13.1,\n  },\n  {\n    year: \"2018\",\n    fund: 17.6,\n  },\n];\n\nexport function FundChart({ title, description, yLabel, footnote }: Props) {\n  const t = useTranslations(\"Common\");\n\n  const chartConfig = {\n    fund: {\n      label: t(\"fund\"),\n      color: \"var(--chart-5)\",\n    },\n    label: {\n      color: \"var(--foreground)\",\n    },\n  } satisfies ChartConfig;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <BarChart\n            accessibilityLayer\n            data={FundChartData}\n            margin={{\n              right: 16,\n            }}\n          >\n            <CartesianGrid vertical={false} />\n            <XAxis\n              axisLine={false}\n              dataKey=\"year\"\n              tickLine={false}\n              tickMargin={10}\n            />\n            <YAxis\n              axisLine={false}\n              label={{\n                value: yLabel,\n                angle: -90,\n                position: \"insideLeft\",\n                style: { textAnchor: \"middle\" },\n              }}\n              tickLine={false}\n            />\n            <ChartTooltip\n              content={<ChartTooltipContent indicator=\"line\" />}\n              cursor={false}\n            />\n            <Bar dataKey=\"fund\" fill=\"var(--color-fund)\" radius={8}>\n              <LabelList\n                className=\"fill-foreground\"\n                dataKey=\"fund\"\n                fontSize={12}\n                offset={8}\n                position=\"top\"\n              />\n            </Bar>\n            <ChartLegend content={<ChartLegendContent />} />\n          </BarChart>\n        </ChartContainer>\n      </CardContent>\n      <CardFooter>\n        <p className=\"text-sm\">{footnote}</p>\n      </CardFooter>\n    </Card>\n  );\n}\n\nconst ElectabilityChartData = [\n  {\n    date: \"2021-01-01\",\n    anies_muhaimin: 23,\n    prabowo_gibran: 35,\n    ganjar_mahfud: 25,\n  },\n  {\n    date: \"2022-05-01\",\n    anies_muhaimin: 22,\n    prabowo_gibran: 33,\n    ganjar_mahfud: 33,\n  },\n  {\n    date: \"2022-06-01\",\n    anies_muhaimin: 21,\n    prabowo_gibran: 34,\n    ganjar_mahfud: 38,\n  },\n  {\n    date: \"2022-07-01\",\n    anies_muhaimin: 28,\n    prabowo_gibran: 27,\n    ganjar_mahfud: 30,\n  },\n  {\n    date: \"2022-10-01\",\n    anies_muhaimin: 28,\n    prabowo_gibran: 30,\n    ganjar_mahfud: 32,\n  },\n  {\n    date: \"2023-01-01\",\n    anies_muhaimin: 22,\n    prabowo_gibran: 22,\n    ganjar_mahfud: 38,\n  },\n  {\n    date: \"2023-02-01\",\n    anies_muhaimin: 25,\n    prabowo_gibran: 28,\n    ganjar_mahfud: 37,\n  },\n  {\n    date: \"2023-04-01\",\n    anies_muhaimin: 28,\n    prabowo_gibran: 35,\n    ganjar_mahfud: 36,\n  },\n  {\n    date: \"2023-07-01\",\n    anies_muhaimin: 20,\n    prabowo_gibran: 38,\n    ganjar_mahfud: 32,\n  },\n  {\n    date: \"2023-09-01\",\n    anies_muhaimin: 21,\n    prabowo_gibran: 37,\n    ganjar_mahfud: 31,\n  },\n  {\n    date: \"2023-10-01\",\n    anies_muhaimin: 22,\n    prabowo_gibran: 39,\n    ganjar_mahfud: 37,\n  },\n  {\n    date: \"2023-12-01\",\n    anies_muhaimin: 20,\n    prabowo_gibran: 43,\n    ganjar_mahfud: 21,\n  },\n  {\n    date: \"2024-01-01\",\n    anies_muhaimin: 22,\n    prabowo_gibran: 48,\n    ganjar_mahfud: 19,\n  },\n  {\n    date: \"2024-02-01\",\n    anies_muhaimin: 22,\n    prabowo_gibran: 56,\n    ganjar_mahfud: 18,\n  },\n];\n\nconst chartConfig = {\n  anies_muhaimin: {\n    label: \"Anies Baswedan-Muhaimin Iskandar\",\n    color: \"var(--chart-1)\",\n  },\n  prabowo_gibran: {\n    label: \"Prabowo Subianto-Gibran Rakabuming\",\n    color: \"var(--chart-2)\",\n  },\n  ganjar_mahfud: {\n    label: \"Ganjar Pranowo-Mahfud MD\",\n    color: \"var(--chart-3)\",\n  },\n} satisfies ChartConfig;\n\nexport function ElectabilityChart({\n  title,\n  description,\n  yLabel,\n  footnote,\n}: Props) {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <LineChart accessibilityLayer data={ElectabilityChartData}>\n            <CartesianGrid vertical={false} />\n            <XAxis\n              axisLine={false}\n              dataKey=\"date\"\n              tickFormatter={(value) => {\n                const date = new Date(value);\n                return format(date, \"MMM yyyy\");\n              }}\n              tickLine={false}\n              tickMargin={8}\n            />\n            <YAxis\n              axisLine={false}\n              label={{\n                value: yLabel,\n                angle: -90,\n                position: \"insideLeft\",\n                style: { textAnchor: \"middle\" },\n              }}\n              tickLine={false}\n            />\n            <ChartTooltip\n              content={\n                <ChartTooltipContent\n                  indicator=\"line\"\n                  labelFormatter={(value) =>\n                    format(new Date(value), \"MMMM yyyy\")\n                  }\n                />\n              }\n              cursor={false}\n            />\n            <Line\n              dataKey=\"anies_muhaimin\"\n              dot={false}\n              stroke=\"var(--color-anies_muhaimin)\"\n              strokeWidth={2}\n              type=\"natural\"\n            />\n            <Line\n              dataKey=\"prabowo_gibran\"\n              dot={false}\n              stroke=\"var(--color-prabowo_gibran)\"\n              strokeWidth={2}\n              type=\"natural\"\n            />\n            <Line\n              dataKey=\"ganjar_mahfud\"\n              dot={false}\n              stroke=\"var(--color-ganjar_mahfud)\"\n              strokeWidth={2}\n              type=\"natural\"\n            />\n            <ChartLegend content={<ChartLegendContent />} />\n          </LineChart>\n        </ChartContainer>\n      </CardContent>\n      <CardFooter>\n        <p className=\"text-sm\">{footnote}</p>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":["c","_c","Card","CardContent","CardDescription","CardFooter","CardHeader","CardTitle","ChartContainer","ChartLegend","ChartLegendContent","ChartTooltip","ChartTooltipContent","format","useTranslations","Bar","BarChart","CartesianGrid","LabelList","Line","LineChart","XAxis","YAxis","BudgetChartData","year","budget","BudgetChart","t0","$","$i","Symbol","for","title","yLabel","footnote","t","t1","t2","label","color","t3","t4","chartConfig","t5","t6","t7","t10","t8","t9","right","t11","textAnchor","t12","value","angle","position","style","t13","t14","t15","t16","t17","t18","t19","FundChartData","fund","FundChart","description","ElectabilityChartData","date","anies_muhaimin","prabowo_gibran","ganjar_mahfud","ElectabilityChart","_temp","_temp2","value_0","Date"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 7308, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/contents/D%3A/github/nakafa.com-main/packages/design-system/components/contents/animation-bacterial.tsx"],"sourcesContent":["\"use client\";\n\nimport { useIntersection } from \"@mantine/hooks\";\nimport { Button } from \"@repo/design-system/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport { PauseIcon, PlayIcon, TimerResetIcon } from \"lucide-react\";\nimport { AnimatePresence, LayoutGroup, motion } from \"motion/react\";\nimport {\n  useCallback,\n  useDeferredValue,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\n\nconst MAX_BACTERIA_COUNT = 100;\nconst SPEED_INTERVAL = 1000;\nconst STAGGER_DELAY = 0.01;\nconst SCALE_INCREASE = 1.1;\nconst SPEED_VALUES_DIFFERENCE = 0.25;\nconst SPEED_VALUES = Array.from(\n  { length: 5 },\n  (_, i) => SPEED_VALUES_DIFFERENCE * (i + 1)\n);\n\ntype FormulaType = \"geometric\" | \"exponential\" | \"custom\";\n\ntype BacterialGrowthProps = {\n  /**\n   * The ratio of bacterial growth.\n   * @default 2\n   */\n  ratio?: number;\n  /**\n   * The initial count of bacteria.\n   * @default 1\n   */\n  initialCount?: number;\n  /**\n   * The maximum number of generations to display.\n   * @default 6\n   */\n  maxGenerations?: number;\n  /**\n   * The type of formula to use.\n   * @default \"geometric\"\n   */\n  formulaType?: FormulaType;\n  /**\n   * The custom formula to use.\n   */\n  customFormula?: (\n    initialCount: number,\n    ratio: number,\n    generation: number\n  ) => number;\n  /**\n   * The time interval in hours.\n   * @default 1\n   */\n  timeInterval?: number;\n  /**\n   * The time unit label (hours, minutes, etc.).\n   * @default \"h\"\n   */\n  timeUnit?: string;\n  /**\n   * The labels to use for the animation.\n   */\n  labels?: {\n    title?: string;\n    bacterial?: string;\n    initialBacteria?: string;\n  };\n};\n\nexport function BacterialGrowth({\n  ratio = 2,\n  initialCount = 1,\n  maxGenerations = 6,\n  formulaType = \"geometric\",\n  customFormula,\n  timeInterval = 1, // Default: 1 hour\n  timeUnit = \"h\", // Default: hours\n  labels = {\n    title: \"Bacterial Growth\",\n    bacterial: \"Bacterial\",\n    initialBacteria: \"Initial bacteria\",\n  },\n}: BacterialGrowthProps) {\n  const [generation, setGeneration] = useState(0);\n  const [speed, setSpeed] = useState(1);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const deferredPlaying = useDeferredValue(isPlaying);\n  const deferredGeneration = useDeferredValue(generation);\n\n  const { ref, entry } = useIntersection({\n    threshold: 0.1,\n  });\n\n  useEffect(() => {\n    if (entry) {\n      setIsPlaying(entry.isIntersecting);\n    }\n  }, [entry]);\n\n  // Start playing when component comes into view\n\n  // Calculate current bacteria count based on the selected formula type\n  const bacteriaCount = useMemo(() => {\n    if (customFormula) {\n      return customFormula(initialCount, ratio, deferredGeneration);\n    }\n\n    switch (formulaType) {\n      case \"geometric\":\n        // U_n = a·r^(n-1) (standard geometric sequence formula)\n        // For bacterial growth: bacteria after n generations = initial × ratio^(generation)\n        // We always start index from 0, so we don't need to subtract 1 from the generation\n        return initialCount * ratio ** deferredGeneration;\n      case \"exponential\":\n        // B(t) = B₀ × e^(kt) where k = ln(ratio)\n        return initialCount * Math.exp(Math.log(ratio) * deferredGeneration);\n      default:\n        // Default to geometric for backward compatibility\n        return initialCount * ratio ** deferredGeneration;\n    }\n  }, [initialCount, deferredGeneration, ratio, formulaType, customFormula]);\n\n  // Create an array of bacteria to display\n  const bacteria = useMemo(\n    () =>\n      Array.from(\n        { length: Math.min(Math.round(bacteriaCount), MAX_BACTERIA_COUNT) },\n        (_, i) => i\n      ),\n    [bacteriaCount]\n  );\n\n  // Calculate how many bacteria to actually show (cap at 100 for performance)\n  const displayCount = useMemo(\n    () => Math.min(Math.round(bacteriaCount), MAX_BACTERIA_COUNT),\n    [bacteriaCount]\n  );\n\n  // Calculate grid dimensions based on bacteria count\n  const gridCols = useMemo(\n    () => Math.min(Math.ceil(Math.sqrt(displayCount)), 10),\n    [displayCount]\n  );\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n\n    // Stop playing when maximum generation is reached\n    if (deferredGeneration >= maxGenerations) {\n      setIsPlaying(false);\n      return;\n    }\n\n    if (deferredPlaying) {\n      interval = setInterval(() => {\n        setGeneration((prev) => {\n          if (prev < maxGenerations) {\n            return prev + 1;\n          }\n          return prev;\n        });\n      }, SPEED_INTERVAL / speed);\n    }\n\n    return () => clearInterval(interval);\n  }, [deferredPlaying, deferredGeneration, maxGenerations, speed]);\n\n  const resetAnimation = useCallback(() => {\n    setGeneration(0);\n    setIsPlaying(true);\n  }, []);\n\n  const togglePlayPause = useCallback(() => {\n    if (!isPlaying && generation >= maxGenerations) {\n      // If at max generation and trying to play, restart from beginning\n      setGeneration(0);\n      setIsPlaying(true);\n    } else {\n      setIsPlaying(!isPlaying);\n    }\n  }, [isPlaying, generation, maxGenerations]);\n\n  // Generate time buttons\n  const timeButtons = useMemo(\n    () =>\n      Array.from({ length: maxGenerations + 1 }).map((_, i) => {\n        const time = i * timeInterval;\n        return (\n          <Button\n            key={time.toString()}\n            onClick={() => {\n              setGeneration(i);\n              setIsPlaying(false);\n            }}\n            size=\"sm\"\n            variant={generation === i ? \"default\" : \"outline\"}\n          >\n            {time}\n            {timeUnit}\n          </Button>\n        );\n      }),\n    [generation, maxGenerations, timeInterval, timeUnit]\n  );\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{labels.title}</CardTitle>\n        <CardDescription>\n          {Math.round(bacteriaCount)} {labels.bacterial}\n        </CardDescription>\n      </CardHeader>\n\n      <CardContent>\n        <div\n          className=\"relative aspect-square w-full overflow-hidden rounded-lg border border-cyan-100 bg-cyan-50 sm:aspect-video dark:border-cyan-900 dark:bg-cyan-950\"\n          ref={ref}\n        >\n          <div\n            className=\"grid h-full w-full gap-0.5 p-2 sm:px-0\"\n            style={{\n              gridTemplateColumns: `repeat(${gridCols}, minmax(0, 1fr))`,\n            }}\n          >\n            <LayoutGroup>\n              <AnimatePresence mode=\"popLayout\">\n                {bacteria.map((id) => (\n                  <motion.div\n                    animate={{\n                      scale: 1,\n                      opacity: 1,\n                    }}\n                    className=\"relative flex items-center justify-center\"\n                    exit={{ scale: 0, opacity: 0 }}\n                    initial={{ scale: 0, opacity: 0 }}\n                    key={id}\n                    layout\n                    transition={{\n                      type: \"spring\",\n                      stiffness: 500,\n                      damping: 30,\n                      delay: id * STAGGER_DELAY, // Stagger effect\n                    }}\n                  >\n                    <motion.div\n                      animate={{\n                        scale: [1, SCALE_INCREASE, 1],\n                      }}\n                      className=\"aspect-square h-full max-h-[20px] w-full max-w-[20px] rounded-full bg-cyan-300 transition-colors hover:bg-cyan-400 sm:max-h-[32px] sm:max-w-[32px] dark:bg-cyan-500\"\n                      transition={{\n                        duration: 1,\n                        repeat: Number.POSITIVE_INFINITY,\n                        repeatType: \"reverse\",\n                      }}\n                      whileHover={{\n                        scale: SCALE_INCREASE,\n                      }}\n                    />\n                  </motion.div>\n                ))}\n              </AnimatePresence>\n            </LayoutGroup>\n          </div>\n        </div>\n      </CardContent>\n\n      <CardFooter className=\"flex flex-col gap-4 px-0\">\n        <div className=\"flex w-full flex-col items-center justify-between gap-4 px-6 sm:flex-row\">\n          <div className=\"flex justify-between gap-2\">\n            <Button\n              aria-label=\"Reset\"\n              onClick={resetAnimation}\n              size=\"icon\"\n              variant=\"outline\"\n            >\n              <TimerResetIcon className=\"size-4 shrink-0\" />\n              <span className=\"sr-only\">Reset</span>\n            </Button>\n            <Button\n              aria-label={isPlaying ? \"Pause\" : \"Play\"}\n              onClick={togglePlayPause}\n              size=\"icon\"\n              variant={isPlaying ? \"outline\" : \"default\"}\n            >\n              {isPlaying ? (\n                <PauseIcon className=\"size-4 shrink-0\" />\n              ) : (\n                <PlayIcon className=\"size-4 shrink-0\" />\n              )}\n              <span className=\"sr-only\">{isPlaying ? \"Pause\" : \"Play\"}</span>\n            </Button>\n          </div>\n\n          <div className=\"flex flex-wrap justify-center gap-2\">\n            {SPEED_VALUES.map((speedValue) => (\n              <Button\n                key={speedValue}\n                onClick={() => setSpeed(speedValue)}\n                size=\"sm\"\n                variant={speed === speedValue ? \"default\" : \"outline\"}\n              >\n                {speedValue}x\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"w-full border-t px-6 pt-4\">\n          <div className=\"flex flex-wrap justify-center gap-2\">\n            {timeButtons}\n          </div>\n        </div>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":["useIntersection","Button","Card","CardContent","CardDescription","CardFooter","CardHeader","CardTitle","PauseIcon","PlayIcon","TimerResetIcon","AnimatePresence","LayoutGroup","motion","useCallback","useDeferredValue","useEffect","useMemo","useState","MAX_BACTERIA_COUNT","SPEED_INTERVAL","STAGGER_DELAY","SCALE_INCREASE","SPEED_VALUES_DIFFERENCE","SPEED_VALUES","Array","from","length","_","i","BacterialGrowth","ratio","initialCount","maxGenerations","formulaType","customFormula","timeInterval","timeUnit","labels","title","bacterial","initialBacteria","generation","setGeneration","speed","setSpeed","isPlaying","setIsPlaying","deferredPlaying","deferredGeneration","ref","entry","threshold","isIntersecting","bacteriaCount","Math","exp","log","bacteria","min","round","displayCount","gridCols","ceil","sqrt","interval","setInterval","prev","clearInterval","resetAnimation","togglePlayPause","timeButtons","map","time","toString","gridTemplateColumns","id","scale","opacity","type","stiffness","damping","delay","duration","repeat","Number","POSITIVE_INFINITY","repeatType","speedValue"],"mappings":";;;;;AAEA,SAASA,eAAe,QAAQ,gBAAgB;AAChD,SAASC,MAAM,QAAQ,0CAA0C;AACjE,SACEC,IAAI,EACJC,WAAW,EACXC,eAAe,EACfC,UAAU,EACVC,UAAU,EACVC,SAAS,QACJ,wCAAwC;AAC/C,SAASC,SAAS,EAAEC,QAAQ,EAAEC,cAAc,QAAQ,cAAc;;;;;AAClE,SAASC,eAAe,EAAEC,WAAW,EAAEC,MAAM,QAAQ,cAAc;AACnE,SACEC,WAAW,EACXC,gBAAgB,EAChBC,SAAS,EACTC,OAAO,EACPC,QAAQ,QACH,OAAO;;;AApBd,YAAY;;;;;;;AAsBZ,MAAMC,kBAAkB,GAAG,GAAG;AAC9B,MAAMC,cAAc,GAAG,IAAI;AAC3B,MAAMC,aAAa,GAAG,IAAI;AAC1B,MAAMC,cAAc,GAAG,GAAG;AAC1B,MAAMC,uBAAuB,GAAG,IAAI;AACpC,MAAMC,YAAY,GAAGC,KAAK,CAACC,IAAI,CAC7B;IAAEC,MAAM,EAAE;AAAE,CAAC,EACb,CAACC,CAAC,EAAEC,CAAC,GAAKN,uBAAuB,GAAA,CAAIM,CAAC,GAAG,CAAC,CAC5C,CAAC;AAqDM,8BAagB,EAAE;QAbO,EAC9BE,KAAK,GAAG,CAAC,EACTC,YAAY,GAAG,CAAC,EAChBC,cAAc,GAAG,CAAC,EAClBC,WAAW,GAAG,WAAW,EACzBC,aAAa,EACbC,YAAY,GAAG,CAAC,EAAE,kBAAA;IAClBC,QAAQ,GAAG,GAAG,EAAE,iBAAA;IAChBC,MAAM,GAAG;QACPC,KAAK,EAAE,kBAAkB;QACzBC,SAAS,EAAE,WAAW;QACtBC,eAAe,EAAE;IACnB,CAAA;;IAEA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,OAAGzB,yKAAQ,EAAC,CAAC,CAAC;IAC/C,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,OAAG3B,yKAAQ,EAAC,CAAC,CAAC;IACrC,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,OAAG7B,yKAAQ,EAAC,KAAK,CAAC;IAEjD,MAAM8B,eAAe,0LAAoBF,SAAS,CAAC;IACnD,MAAMG,kBAAkB,0LAAoBP,UAAU,CAAC;IAEvD,MAAM,EAAEQ,GAAG,EAAEC,KAAAA,EAAO,uNAAmB;QACrCC,SAAS,EAAE;IACb,CAAC,CAAC;QAEFpC,0KAAS;qCAAC,MAAM;YACd,IAAImC,KAAK,EAAE;gBACTJ,YAAY,CAACI,KAAK,CAACE,cAAc,CAAC;YACpC;QACF,CAAC;oCAAE;QAACF,KAAK;KAAC,CAAC;IAEX,+CAAA;IAEA,sEAAA;IACA,MAAMG,aAAa,OAAGrC,wKAAO;kDAAC,MAAM;YAClC,IAAIkB,aAAa,EAAE;gBACjB,OAAOA,aAAa,CAACH,YAAY,EAAED,KAAK,EAAEkB,kBAAkB,CAAC;YAC/D;YAEA,OAAQf,WAAW;gBACjB,KAAK,WAAW;oBACd,wDAAA;oBACA,oFAAA;oBACA,mFAAA;oBACA,OAAOF,YAAY,GAAGD,KAAK,IAAIkB,kBAAkB;gBACnD,KAAK,aAAa;oBAChB,yCAAA;oBACA,OAAOjB,YAAY,GAAGuB,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAC1B,KAAK,CAAC,GAAGkB,kBAAkB,CAAC;gBACtE;oBACE,kDAAA;oBACA,OAAOjB,YAAY,GAAGD,KAAK,IAAIkB,kBAAkB;YACrD;QACF,CAAC;iDAAE;QAACjB,YAAY;QAAEiB,kBAAkB;QAAElB,KAAK;QAAEG,WAAW;QAAEC,aAAa;KAAC,CAAC;IAEzE,yCAAA;IACA,MAAMuB,QAAQ,GAAGzC,4KAAO;6CACtB,IACEQ,KAAK,CAACC,IAAI,CACR;gBAAEC,MAAM,EAAE4B,IAAI,CAACI,GAAG,CAACJ,IAAI,CAACK,KAAK,CAACN,aAAa,CAAC,EAAEnC,kBAAkB;YAAE,CAAC;qDACnE,CAACS,CAAC,EAAEC,CAAC,GAAKA,CACZ,CAAC;;4CACH;QAACyB,aAAa;KAChB,CAAC;IAED,4EAAA;IACA,MAAMO,YAAY,GAAG5C,4KAAO;iDAC1B,IAAMsC,IAAI,CAACI,GAAG,CAACJ,IAAI,CAACK,KAAK,CAACN,aAAa,CAAC,EAAEnC,kBAAkB,CAAC;gDAC7D;QAACmC,aAAa;KAChB,CAAC;IAED,oDAAA;IACA,MAAMQ,QAAQ,OAAG7C,wKAAO;6CACtB,IAAMsC,IAAI,CAACI,GAAG,CAACJ,IAAI,CAACQ,IAAI,CAACR,IAAI,CAACS,IAAI,CAACH,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC;4CACtD;QAACA,YAAY;KACf,CAAC;QAED7C,0KAAS;qCAAC,MAAM;YACd,IAAIiD,QAAwB;YAE5B,kDAAA;YACA,IAAIhB,kBAAkB,IAAIhB,cAAc,EAAE;gBACxCc,YAAY,CAAC,KAAK,CAAC;gBACnB;YACF;YAEA,IAAIC,eAAe,EAAE;gBACnBiB,QAAQ,GAAGC,WAAW;iDAAC,MAAM;wBAC3BvB,aAAa;yDAAEwB,IAAI,IAAK;gCACtB,IAAIA,IAAI,GAAGlC,cAAc,EAAE;oCACzB,OAAOkC,IAAI,GAAG,CAAC;gCACjB;gCACA,OAAOA,IAAI;4BACb,CAAC,CAAC;;oBACJ,CAAC;gDAAE/C,cAAc,GAAGwB,KAAK,CAAC;YAC5B;YAEA;6CAAO,IAAMwB,aAAa,CAACH,QAAQ,CAAC;;QACtC,CAAC;oCAAE;QAACjB,eAAe;QAAEC,kBAAkB;QAAEhB,cAAc;QAAEW,KAAK;KAAC,CAAC;IAEhE,MAAMyB,cAAc,OAAGvD,4KAAW;uDAAC,MAAM;YACvC6B,aAAa,CAAC,CAAC,CAAC;YAChBI,YAAY,CAAC,IAAI,CAAC;QACpB,CAAC;sDAAE,EAAE,CAAC;IAEN,MAAMuB,eAAe,OAAGxD,4KAAW;wDAAC,MAAM;YACxC,IAAI,CAACgC,SAAS,IAAIJ,UAAU,IAAIT,cAAc,EAAE;gBAC9C,kEAAA;gBACAU,aAAa,CAAC,CAAC,CAAC;gBAChBI,YAAY,CAAC,IAAI,CAAC;YACpB,CAAC,MAAM;gBACLA,YAAY,CAAC,CAACD,SAAS,CAAC;YAC1B;QACF,CAAC;uDAAE;QAACA,SAAS;QAAEJ,UAAU;QAAET,cAAc;KAAC,CAAC;IAE3C,wBAAA;IACA,MAAMsC,WAAW,OAAGtD,wKAAO;gDACzB,IACEQ,KAAK,CAACC,IAAI,CAAC;gBAAEC,MAAM,EAAEM,cAAc,GAAG;YAAE,CAAC,CAAC,CAACuC,GAAG;wDAAC,CAAC5C,GAAC,EAAEC,GAAC,KAAK;oBACvD,MAAM4C,IAAI,GAAG5C,GAAC,GAAGO,YAAY;oBAC7B,qBACE,6LAAC,wKAAM,CACL,GAAG,CAAC;wBACJ,OAAO,CAAC;oEAAC,MAAM;gCACbO,aAAa,CAACd,GAAC,CAAC;gCAChBkB,YAAY,CAAC,KAAK,CAAC;4BACrB,CAAC,CAAC;;wBACF,IAAI,EAAC,IAAI;wBACT,OAAO,CAAC,CAACL,UAAU,KAAKb,GAAC,GAAG,SAAS,GAAG,SAAS,CAAC;;4BAEjD4C,IAAI;4BACJpC,QAAQ;;uBATJoC,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC;;;;;gBAY3B,CAAC,CAAC;;+CACJ;QAAChC,UAAU;QAAET,cAAc;QAAEG,YAAY;QAAEC,QAAQ;KACrD,CAAC;IAED,qBACE,6LAAC,oKAAI;;0BACH,6LAAC,0KAAU;;kCACT,6LAAC,yKAAS,CAAC;kCAACC,MAAM,CAACC,KAAK,CAAC,EAAE,SAAS;;;;;;kCACpC,6LAAC,+KAAe;;4BACbgB,IAAI,CAACK,KAAK,CAACN,aAAa,CAAC;4BAAC,CAAC;4BAAChB,MAAM,CAACE,SAAS;;;;;;;;;;;;;0BAIjD,6LAAC,2KAAW;wCACV,6LAAC,GAAG;oBACF,SAAS,EAAC,kJAAkJ;oBAC5J,GAAG,CAAC,CAACU,GAAG,CAAC;4CAET,6LAAC,GAAG;wBACF,SAAS,EAAC,wCAAwC;wBAClD,KAAK,CAAC,CAAC;4BACLyB,mBAAmB,EAAE,UAAkB,OAARb,QAAQ,EAAA;wBACzC,CAAC,CAAC;gDAEF,6LAAC,uMAAW;oDACV,6LAAC,+MAAe;gCAAC,IAAI,EAAC,WAAW;0CAC9BJ,QAAQ,CAACc,GAAG,EAAEI,EAAE,iBACf,6LAAC,uMAAM,CAAC,GAAG;wCACT,OAAO,CAAC,CAAC;4CACPC,KAAK,EAAE,CAAC;4CACRC,OAAO,EAAE;wCACX,CAAC,CAAC;wCACF,SAAS,EAAC,2CAA2C;wCACrD,IAAI,CAAC,CAAC;4CAAED,KAAK,EAAE,CAAC;4CAAEC,OAAO,EAAE;wCAAE,CAAC,CAAC;wCAC/B,OAAO,CAAC,CAAC;4CAAED,KAAK,EAAE,CAAC;4CAAEC,OAAO,EAAE;wCAAE,CAAC,CAAC,CAClC,GAAG,CAAC;wCACJ,MAAM;wCACN,UAAU,CAAC,CAAC;4CACVC,IAAI,EAAE,QAAQ;4CACdC,SAAS,EAAE,GAAG;4CACdC,OAAO,EAAE,EAAE;4CACXC,KAAK,EAAEN,EAAE,GAAGvD,aAAa,CAAE,iBAAA;wCAC7B,CAAC,CAAC;gEAEF,6LAAC,uMAAM,CAAC,GAAG;4CACT,OAAO,CAAC,CAAC;gDACPwD,KAAK,EAAE;oDAAC,CAAC;oDAAEvD,cAAc;oDAAE,CAAC;iDAAA;4CAC9B,CAAC,CAAC;4CACF,SAAS,EAAC,qKAAqK;4CAC/K,UAAU,CAAC,CAAC;gDACV6D,QAAQ,EAAE,CAAC;gDACXC,MAAM,EAAEC,MAAM,CAACC,iBAAiB;gDAChCC,UAAU,EAAE;4CACd,CAAC,CAAC;4CACF,UAAU,CAAC,CAAC;gDACVV,KAAK,EAAEvD;4CACT,CAAC,CAAC;;;;;;uCArBCsD,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BA+BtB,6LAAC,0KAAU;gBAAC,SAAS,EAAC,0BAA0B;;kCAC9C,6LAAC,GAAG;wBAAC,SAAS,EAAC,0EAA0E;;0CACvF,6LAAC,GAAG;gCAAC,SAAS,EAAC,4BAA4B;;kDACzC,6LAAC,wKAAM;wCACL,UAAU,IAAC,OAAO;wCAClB,OAAO,CAAC,CAACP,cAAc,CAAC;wCACxB,IAAI,EAAC,MAAM;wCACX,OAAO,EAAC,SAAS;;0DAEjB,6LAAC,2OAAc;gDAAC,SAAS,EAAC,iBAAiB;;;;;;0DAC3C,6LAAC,IAAI;gDAAC,SAAS,EAAC,SAAS;0DAAC,KAAK,EAAE,IAAI;;;;;;;;;;;;kDAEvC,6LAAC,wKAAM;wCACL,UAAU,CAAC,GAACvB,SAAS,GAAG,OAAO,GAAG,MAAM,CAAC;wCACzC,OAAO,CAAC,CAACwB,eAAe,CAAC;wCACzB,IAAI,EAAC,MAAM;wCACX,OAAO,CAAC,CAACxB,SAAS,GAAG,SAAS,GAAG,SAAS,CAAC;;4CAE1CA,SAAS,iBACR,6LAAC,wNAAS;gDAAC,SAAS,EAAC,iBAAiB,GAAG;;;;;qEAEzC,6LAAC,qNAAQ;gDAAC,SAAS,EAAC,iBAAiB,GACtC;;;;;;0DACD,6LAAC,IAAI;gDAAC,SAAS,EAAC,SAAS,CAAC;0DAACA,SAAS,GAAG,OAAO,GAAG,MAAM,CAAC,EAAE,IAAI;;;;;;;;;;;;;;;;;;0CAIlE,6LAAC,GAAG;gCAAC,SAAS,EAAC,qCAAqC;0CACjDtB,YAAY,CAACgD,GAAG,CAAEgB,UAAU,kBAC3B,6LAAC,wKAAM,CACL,GAAG,CAAC;wCACJ,OAAO,CAAC,CAAC,IAAM3C,QAAQ,CAAC2C,UAAU,CAAC,CAAC;wCACpC,IAAI,EAAC,IAAI;wCACT,OAAO,CAAC,CAAC5C,KAAK,KAAK4C,UAAU,GAAG,SAAS,GAAG,SAAS,CAAC;;4CAErDA,UAAU;4CAAC;;uCALPA,UAAU,CAAC;;;;;;;;;;;;;;;;kCAWxB,6LAAC,GAAG;wBAAC,SAAS,EAAC,2BAA2B;gDACxC,6LAAC,GAAG;4BAAC,SAAS,EAAC,qCAAqC;sCACjDjB,WAAW;;;;;;;;;;;;;;;;;;;;;;;AAMxB;;;QAtO0BxD,iLAAgB;QACbA,iLAAgB;QAEpBf,8MAAe;;;KArBxB8B,eAAeA","ignoreList":[],"debugId":null}},
    {"offset": {"line": 7761, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/contents/D%3A/github/nakafa.com-main/packages/design-system/components/contents/function-chart.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport type { ChartConfig } from \"@repo/design-system/components/ui/chart\";\nimport {\n  ChartContainer,\n  ChartLegend,\n  ChartLegendContent,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@repo/design-system/components/ui/chart\";\nimport type { ReactNode } from \"react\";\nimport { useMemo } from \"react\";\nimport { CartesianGrid, Line, LineChart, XAxis, YAxis } from \"recharts\";\n\nconst THRESHOLD_VALUE = 1000;\nconst THRESHOLD_VALUE_DECIMAL_PLACES = 0;\n\ntype Props = {\n  p: number;\n  a: number;\n  title: ReactNode;\n  description: ReactNode;\n  n?: number;\n};\n\nexport function FunctionChart({ p, a, title, description, n = 11 }: Props) {\n  const data = useMemo(\n    () =>\n      Array.from({ length: n }, (_, i) => {\n        // Handle the specific case where a=0 and x=0 (mathematically undefined)\n        if (a === 0 && i === 0) {\n          return { x: i, y: null }; // Use null to represent undefined\n        }\n        return {\n          x: i,\n          y: p * a ** i,\n        };\n      }),\n    [a, p, n]\n  );\n\n  const chartConfig = {\n    y: {\n      label: \"f(x)\",\n      color: \"var(--chart-1)\",\n    },\n  } satisfies ChartConfig;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <LineChart accessibilityLayer data={data}>\n            <CartesianGrid />\n            <XAxis\n              dataKey=\"x\"\n              tickFormatter={(value) => value.toString()}\n              tickMargin={8}\n            />\n            <YAxis\n              label={{\n                value: \"f(x)\",\n                angle: -90,\n                position: \"insideLeft\",\n                style: { textAnchor: \"middle\" },\n              }}\n              tickFormatter={(value) =>\n                value >= THRESHOLD_VALUE\n                  ? `${(value / THRESHOLD_VALUE).toFixed(THRESHOLD_VALUE_DECIMAL_PLACES)}k`\n                  : value\n              }\n              tickMargin={8}\n            />\n            <ChartTooltip\n              content={({ active, payload }) => {\n                if (active && payload && payload.length) {\n                  const xValue = payload[0].payload.x;\n                  const yValue = payload[0].payload.y;\n\n                  // Special handling for undefined case\n                  if (yValue === null) {\n                    return (\n                      <ChartTooltipContent\n                        active={active}\n                        label={`x = ${xValue}, y = undefined`}\n                        payload={[]}\n                      />\n                    );\n                  }\n\n                  return (\n                    <ChartTooltipContent\n                      active={active}\n                      label={`x = ${xValue}`}\n                      payload={payload}\n                    />\n                  );\n                }\n                return null;\n              }}\n            />\n            <Line\n              connectNulls={false}\n              dataKey=\"y\"\n              dot\n              name=\"y\"\n              stroke={chartConfig.y.color}\n              strokeWidth={2}\n              type=\"monotone\"\n            />\n            <ChartLegend\n              content={<ChartLegendContent verticalAlign=\"bottom\" />}\n            />\n          </LineChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":["c","_c","Card","CardContent","CardDescription","CardHeader","CardTitle","ChartContainer","ChartLegend","ChartLegendContent","ChartTooltip","ChartTooltipContent","useMemo","CartesianGrid","Line","LineChart","XAxis","YAxis","THRESHOLD_VALUE","THRESHOLD_VALUE_DECIMAL_PLACES","FunctionChart","t0","$","$i","Symbol","for","p","a","title","description","n","t1","undefined","t2","t3","_","i","x","y","Array","from","length","data","label","color","chartConfig","t4","t5","t6","t7","t8","_temp","t10","t11","t9","value","angle","position","style","textAnchor","_temp2","_temp3","t12","t13","t14","active","payload","xValue","yValue","value_0","toFixed","toString"],"mappings":";;;;;AAAa,SAAAA,CAAA,IAAAC,EAAA;AAEb,SACEC,IAAI,EACJC,WAAW,EACXC,eAAe,EACfC,UAAU,EACVC,SAAS,QACJ,wCAAwC;AAE/C,SACEC,cAAc,EACdC,WAAW,EACXC,kBAAkB,EAClBC,YAAY,EACZC,mBAAmB,QACd,yCAAyC;;;;;AAGhD,SAASE,aAAa,EAAEC,IAAI,EAAEC,SAAS,EAAEC,KAAK,EAAEC,KAAK,QAAQ,UAAU;AAnBvE,YAAY;;;;;;AAqBZ,MAAMC,eAAe,GAAG,IAAI;AAC5B,MAAMC,8BAA8B,GAAG,CAAC;AAUjC,uBAAAE,EAAA;IAAA,MAAAC,CAAA,OAAArB,gLAAA,EAAA;IAAA,IAAAqB,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAuB,MAAA,EAAAI,CAAA,EAAAC,CAAA,EAAAC,KAAA,EAAAC,WAAA,EAAAC,CAAA,EAAAC,EAAAA,EAAA,GAAAV,EAA2C;IAAf,MAAAS,CAAA,GAAAC,EAAM,KAAAC,SAAA,GAAA,KAAND,EAAM;IAAA,IAAAE,EAAA;IAAA,IAAAX,CAAA,CAAA,EAAA,KAAAK,CAAA,IAAAL,CAAA,CAAA,EAAA,KAAAQ,CAAA,IAAAR,CAAA,CAAA,EAAA,KAAAI,CAAA,EAAA;QAAA,IAAAQ,EAAA;QAAA,IAAAZ,CAAA,CAAA,EAAA,KAAAK,CAAA,IAAAL,CAAA,CAAA,EAAA,KAAAI,CAAA,EAAA;YAGhCQ,EAAA,GAAAA,CAAAC,CAAA,EAAAC,CAAA;gBAAA,IAEpBT,CAAC,KAAA,CAAM,IAAIS,CAAC,KAAA,CAAM,EAAA;oBAAA,OAAA;wBAAAC,CAAA,EACRD,CAAC;wBAAAE,CAAA,EAAA;oBAAA;gBAAA;gBAAA,OAAA;oBAAAD,CAAA,EAGVD,CAAC;oBAAAE,CAAA,EACDZ,CAAC,GAAGC,CAAC,IAAIS;gBAAC;YAAA;YAEhBd,CAAA,CAAA,EAAA,GAAAK,CAAA;YAAAL,CAAA,CAAA,EAAA,GAAAI,CAAA;YAAAJ,CAAA,CAAA,EAAA,GAAAY,EAAA;QAAA,OAAA;YAAAA,EAAA,GAAAZ,CAAA,CAAA,EAAA;QAAA;QATDW,EAAA,GAAAM,KAAA,CAAAC,IAAA,CAAA;YAAAC,MAAA,EAAqBX;QAAC,GAAII,EASzB,CAAC;QAAAZ,CAAA,CAAA,EAAA,GAAAK,CAAA;QAAAL,CAAA,CAAA,EAAA,GAAAQ,CAAA;QAAAR,CAAA,CAAA,EAAA,GAAAI,CAAA;QAAAJ,CAAA,CAAA,EAAA,GAAAW,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAX,CAAA,CAAA,EAAA;IAAA;IAXN,MAAAoB,IAAA,GAEIT,EASE;IAEJ,IAAAC,EAAA;IAAA,IAAAZ,CAAA,CAAA,EAAA,KAAAE,MAAA,CAAAC,GAAA,CAAA,8BAAA;QAEkBS,EAAA,GAAA;YAAAI,CAAA,EAAA;gBAAAK,KAAA,EAET,MAAM;gBAAAC,KAAA,EACN;YAAgB;QAAA;QAE1BtB,CAAA,CAAA,EAAA,GAAAY,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAZ,CAAA,CAAA,EAAA;IAAA;IALD,MAAAuB,WAAA,GAAoBX,EAKnB;IAAuB,IAAAY,EAAA;IAAA,IAAAxB,CAAA,CAAA,EAAA,KAAAM,KAAA,EAAA;QAKlBkB,EAAA,iBAAA,6LAAC,yKAAS,CAAElB;sBAAAA,KAAI,CAAE,EAAjB,SAAS,CAAoB;;;;;;QAAAN,CAAA,CAAA,EAAA,GAAAM,KAAA;QAAAN,CAAA,CAAA,GAAA,GAAAwB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAxB,CAAA,CAAA,GAAA;IAAA;IAAA,IAAAyB,EAAA;IAAA,IAAAzB,CAAA,CAAA,GAAA,KAAAO,WAAA,EAAA;QAC9BkB,EAAA,iBAAA,6LAAC,+KAAe,CAAElB;sBAAAA,WAAU,CAAE,EAA7B,eAAe,CAAgC;;;;;;QAAAP,CAAA,CAAA,GAAA,GAAAO,WAAA;QAAAP,CAAA,CAAA,GAAA,GAAAyB,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAzB,CAAA,CAAA,GAAA;IAAA;IAAA,IAAA0B,EAAA;IAAA,IAAA1B,CAAA,CAAA,GAAA,KAAAwB,EAAA,IAAAxB,CAAA,CAAA,GAAA,KAAAyB,EAAA,EAAA;QAFlDC,EAAA,iBAAA,6LAAC,0KAAU,CACT;;gBAAAF,EAA6B,CAC7B;gBAAAC,EAA+C,CACjD,EAHC,UAAU,CAGE;;;;;;;QAAAzB,CAAA,CAAA,GAAA,GAAAwB,EAAA;QAAAxB,CAAA,CAAA,GAAA,GAAAyB,EAAA;QAAAzB,CAAA,CAAA,GAAA,GAAA0B,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAA1B,CAAA,CAAA,GAAA;IAAA;IAAA,IAAA2B,EAAA;IAAA,IAAAC,EAAA;IAAA,IAAA5B,CAAA,CAAA,GAAA,KAAAE,MAAA,CAAAC,GAAA,CAAA,8BAAA;QAIPwB,EAAA,iBAAA,6LAAC,iLAAa,GAAG;;;;;QACjBC,EAAA,iBAAA,6LAAC,iKAAK;YACI,OAAG,EAAH,GAAG;YACI,aAA2B,CAA3B,CAAAC,KAA0B,CAAC;YAC9B,UAAC,CAAD,CAAA,EAAC,GACb;;;;;;QAAA7B,CAAA,CAAA,GAAA,GAAA2B,EAAA;QAAA3B,CAAA,CAAA,GAAA,GAAA4B,EAAA;IAAA,OAAA;QAAAD,EAAA,GAAA3B,CAAA,CAAA,GAAA;QAAA4B,EAAA,GAAA5B,CAAA,CAAA,GAAA;IAAA;IAAA,IAAA8B,GAAA;IAAA,IAAAC,GAAA;IAAA,IAAAC,EAAA;IAAA,IAAAhC,CAAA,CAAA,GAAA,KAAAE,MAAA,CAAAC,GAAA,CAAA,8BAAA;QACF6B,EAAA,iBAAA,6LAAC,iKAAK;YACG,KAKN,CALM,CAAA;gBAAAC,KAAA,EACE,MAAM;gBAAAC,KAAA,EAAA,CAAA;gBAAAC,QAAA,EAEH,YAAY;gBAAAC,KAAA,EAAA;oBAAAC,UAAA,EACD;gBAAQ;YAAA,CAC/B,CAAC;YACc,aAGJ,CAHI,CAAAC,MAGL,CAAC;YAEC,UAAC,CAAD,CAAA,EAAC,GACb;;;;;;QACFR,GAAA,iBAAA,6LAAC,6KAAY;YACF,OAyBR,CAzBQ,CAAAS,MAyBT,CAAC,GACD;;;;;;QACFR,GAAA,iBAAA,6LAAC,+JAAI;YACW,YAAK,CAAL,CAAA,KAAI,CAAC;YACX,OAAG,EAAH,GAAG;YACX,GAAG,CAAH,CAAA,IAAE,CAAC;YACE,IAAG,EAAH,GAAG;YACA,MAAmB,CAAnB,CAAAR,WAAW,CAAAP,CAAA,CAAAM,KAAO,CAAC;YACd,WAAC,CAAD,CAAA,EAAC;YACT,IAAU,EAAV,UAAU,GACf;;;;;;QAAAtB,CAAA,CAAA,GAAA,GAAA8B,GAAA;QAAA9B,CAAA,CAAA,GAAA,GAAA+B,GAAA;QAAA/B,CAAA,CAAA,GAAA,GAAAgC,EAAA;IAAA,OAAA;QAAAF,GAAA,GAAA9B,CAAA,CAAA,GAAA;QAAA+B,GAAA,GAAA/B,CAAA,CAAA,GAAA;QAAAgC,EAAA,GAAAhC,CAAA,CAAA,GAAA;IAAA;IAAA,IAAAwC,GAAA;IAAA,IAAAxC,CAAA,CAAA,GAAA,KAAAE,MAAA,CAAAC,GAAA,CAAA,8BAAA;QACFqC,GAAA,iBAAA,6LAAC,4KAAW;YACD,OAA6C,CAA7C,eAAA,6LAAC,mLAAkB;gBAAe,aAAQ,EAAR,QAAQ,GAAE,CAAC,GACtD;;;;;;;;;;;QAAAxC,CAAA,CAAA,GAAA,GAAAwC,GAAA;IAAA,OAAA;QAAAA,GAAA,GAAAxC,CAAA,CAAA,GAAA;IAAA;IAAA,IAAAyC,GAAA;IAAA,IAAAzC,CAAA,CAAA,GAAA,KAAAoB,IAAA,EAAA;QA9DRqB,GAAA,iBAAA,6LAAC,2KAAW;oCACV,6LAAC,+KAAc;gBAASlB,MAAW,CAAXA,CAAAA,WAAU,CAAC;wCACjC,6LAAC,qKAAS;oBAAC,kBAAkB,CAAlB,CAAA,IAAiB,CAAC;oBAAOH,IAAI,CAAJA,CAAAA,IAAG,CAAC,CACtC;;wBAAAO,EAAgB,CAChB;wBAAAC,EAIC,CACD;wBAAAI,EAaC,CACD;wBAAAF,GA2BC,CACD;wBAAAC,GAQC,CACD;wBAAAS,GAEC,CACH,EA7DC,SAAS,CA8DZ,EA/DC,cAAc,CAgEjB,EAjEC,WAAW,CAiEE;;;;;;;;;;;;;;;;;QAAAxC,CAAA,CAAA,GAAA,GAAAoB,IAAA;QAAApB,CAAA,CAAA,GAAA,GAAAyC,GAAA;IAAA,OAAA;QAAAA,GAAA,GAAAzC,CAAA,CAAA,GAAA;IAAA;IAAA,IAAA0C,GAAA;IAAA,IAAA1C,CAAA,CAAA,GAAA,KAAAyC,GAAA,IAAAzC,CAAA,CAAA,GAAA,KAAA0B,EAAA,EAAA;QAtEhBgB,GAAA,iBAAA,6LAAC,oKAAI,CACH;;gBAAAhB,EAGY,CACZ;gBAAAe,GAiEa,CACf,EAvEC,IAAI,CAuEE;;;;;;;QAAAzC,CAAA,CAAA,GAAA,GAAAyC,GAAA;QAAAzC,CAAA,CAAA,GAAA,GAAA0B,EAAA;QAAA1B,CAAA,CAAA,GAAA,GAAA0C,GAAA;IAAA,OAAA;QAAAA,GAAA,GAAA1C,CAAA,CAAA,GAAA;IAAA;IAAA,OAvEP0C,GAuEO;AAAA;KA/FJ5C;AAAA,SAAAyC,OAAAxC,EAAA;IAqDiB,MAAA,EAAA4C,MAAA,EAAAC,OAAAA,EAAA,GAAA7C,EAAmB;IAAA,IACvB4C,MAAM,IAAIC,OAAO,IAAIA,OAAO,CAAAzB,MAAO,EAAA;QACrC,MAAA0B,MAAA,GAAeD,OAAO,CAAA,EAAA,CAAAA,OAAA,CAAA7B,CAAA;QACtB,MAAA+B,MAAA,GAAeF,OAAO,CAAA,EAAA,CAAAA,OAAA,CAAA5B,CAAA;QAAc,IAGhC8B,MAAM,KAAA,IAAS,EAAA;YAAA,qBAEf,6LAAC,oLAAmB;gBACVH,MAAM,CAANA,CAAAA,MAAK,CAAC;gBACP,KAA8B,CAA9B,CAAA,OAAa,OAANE,MAAM,EAAA,gBAAgB,CAAC;gBAC5B,OAAE,CAAF,CAAA,EAAC,CAAC,GACX;;;;;;QAAA;QAAA,qBAKJ,6LAAC,oLAAmB;YACVF,MAAM,CAANA,CAAAA,MAAK,CAAC;YACP,KAAe,CAAf,CAAA,OAAa,CAAC,CAAC,KAARE,MAAM;YACXD,OAAO,CAAPA,CAAAA,OAAM,CAAC,GAChB;;;;;;IAAA;IAAA,OAAA;AAAA;AA1Ef,SAAAN,OAAAS,OAAA;IAAA,OA8CSd,OAAK,IAAArC,eAAmB,GACpB,GAAoE,OAAjE,CAACqC,OAAK,GAAArC,eAAkB,EAAAoD,OAAA,CAAAnD,8BAAwC,CAAC,EAAA,EAAG,KACvEoC,OAAK;AAAA;AAhDlB,SAAAJ,MAAAI,KAAA;IAAA,OAmCiCA,KAAK,CAAAgB,QAAA,CAAU,CAAC;AAAA","ignoreList":[],"debugId":null}},
    {"offset": {"line": 8074, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/contents/subject/high-school/10/mathematics/exponential-logarithm/function-exploration/D%3A/github/nakafa.com-main/packages/contents/subject/high-school/10/mathematics/exponential-logarithm/function-exploration/virus-chart.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport {\n  type ChartConfig,\n  ChartContainer,\n  ChartLegend,\n  ChartLegendContent,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@repo/design-system/components/ui/chart\";\nimport { CartesianGrid, Line, LineChart, XAxis, YAxis } from \"recharts\";\n\nconst EXPONENTIAL_BASE = 3;\nconst LINEAR_SCALING_FACTOR = 3;\nconst LOGARITHMIC_SCALING_FACTOR = 20;\nconst THRESHOLD_VALUE = 1000;\nconst THRESHOLD_VALUE_DECIMAL_PLACES = 0;\n\ntype Props = {\n  labels: {\n    title?: string;\n    description?: string;\n    exponential?: string;\n    linear?: string;\n    logarithmic?: string;\n    yLabel?: string;\n    caption?: string;\n    phase?: string;\n  };\n};\n\nconst data = Array.from({ length: 5 }, (_, i) => {\n  const phase = i + 1;\n  return {\n    phase,\n    exponential: EXPONENTIAL_BASE ** phase, // Exponential: 3^phase\n    linear: LINEAR_SCALING_FACTOR * phase, // Linear: 3*phase\n    logarithmic: Math.log(phase + 1) * LOGARITHMIC_SCALING_FACTOR, // Logarithmic: log(phase+1) * scaling factor\n  };\n});\n\nexport function VirusChart({\n  labels = {\n    title: \"Virus Spread\",\n    description: \"Number of people infected in each phase of the virus spread.\",\n    exponential: \"Exponential Function\",\n    linear: \"Linear Function\",\n    logarithmic: \"Logarithmic Function\",\n    yLabel: \"Number of people infected\",\n    caption:\n      \"Virus spread grows exponentially, accelerating rapidly after initial phases.\",\n    phase: \"Phase\",\n  },\n}: Props) {\n  const chartConfig = {\n    exponential: {\n      label: labels.exponential,\n      color: \"var(--chart-1)\",\n    },\n    linear: {\n      label: labels.linear,\n      color: \"var(--chart-2)\",\n    },\n    logarithmic: {\n      label: labels.logarithmic,\n      color: \"var(--chart-3)\",\n    },\n  } satisfies ChartConfig;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{labels.title}</CardTitle>\n        <CardDescription>{labels.description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <LineChart accessibilityLayer data={data}>\n            <CartesianGrid />\n            <XAxis\n              dataKey=\"phase\"\n              tickFormatter={(value) => value.toString()}\n              tickMargin={8}\n            />\n            <YAxis\n              label={{\n                value: labels.yLabel,\n                angle: -90,\n                position: \"insideLeft\",\n                style: { textAnchor: \"middle\" },\n              }}\n              tickFormatter={(value) =>\n                value >= THRESHOLD_VALUE\n                  ? `${(value / THRESHOLD_VALUE).toFixed(THRESHOLD_VALUE_DECIMAL_PLACES)}k`\n                  : value\n              }\n              tickMargin={8}\n            />\n            <ChartTooltip\n              content={({ active, payload }) => {\n                if (active && payload && payload.length) {\n                  // Extract the phase value from the first payload item\n                  const phaseValue = payload[0].payload.phase;\n                  return (\n                    <ChartTooltipContent\n                      active={active}\n                      label={`${labels.phase} ${phaseValue}`}\n                      payload={payload}\n                    />\n                  );\n                }\n                return null;\n              }}\n            />\n            <Line\n              dataKey=\"exponential\"\n              dot\n              name=\"exponential\"\n              stroke={chartConfig.exponential.color}\n              strokeWidth={2}\n              type=\"monotone\"\n            />\n            <Line\n              dataKey=\"linear\"\n              dot\n              name=\"linear\"\n              stroke={chartConfig.linear.color}\n              strokeWidth={2}\n              type=\"monotone\"\n            />\n            <Line\n              dataKey=\"logarithmic\"\n              dot\n              name=\"logarithmic\"\n              stroke={chartConfig.logarithmic.color}\n              strokeWidth={2}\n              type=\"monotone\"\n            />\n            <ChartLegend\n              content={<ChartLegendContent verticalAlign=\"bottom\" />}\n            />\n          </LineChart>\n        </ChartContainer>\n      </CardContent>\n      <CardFooter>\n        <p className=\"text-sm\">{labels.caption}</p>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":["c","_c","Card","CardContent","CardDescription","CardFooter","CardHeader","CardTitle","ChartContainer","ChartLegend","ChartLegendContent","ChartTooltip","ChartTooltipContent","CartesianGrid","Line","LineChart","XAxis","YAxis","EXPONENTIAL_BASE","LINEAR_SCALING_FACTOR","LOGARITHMIC_SCALING_FACTOR","THRESHOLD_VALUE","THRESHOLD_VALUE_DECIMAL_PLACES","data","Array","from","length","_","i","phase","exponential","linear","logarithmic","Math","log","VirusChart","t0","$","$i","Symbol","for","labels","t1","t2","undefined","title","description","yLabel","caption","t3","label","color","t4","t5","t6","chartConfig","t7","t8","t9","t10","t11","_temp","t12","textAnchor","t13","value","angle","position","style","_temp2","t14","t15","active","payload","phaseValue","t16","t17","t18","t19","t20","t21","t22","value_0","toFixed","toString"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 8500, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/lib/color.ts"],"sourcesContent":["/**\n * COLORS constant\n *\n * All colors are taken from Tailwind CSS's palette at the -500 shade.\n * For example, RED is tailwind's red-500, BLUE is blue-500, etc.\n */\nexport const COLORS = {\n  RED: \"#dc2626\", // tailwind red-500\n  ORANGE: \"#ea580c\", // tailwind orange-500\n  AMBER: \"#d97706\", // tailwind amber-500\n  YELLOW: \"#ca8a04\", // tailwind yellow-500\n  LIME: \"#65a30d\", // tailwind lime-500\n  GREEN: \"#16a34a\", // tailwind green-500\n  EMERALD: \"#059669\", // tailwind emerald-500\n  TEAL: \"#0d9488\", // tailwind teal-500\n  CYAN: \"#0891b2\", // tailwind cyan-500\n  SKY: \"#0284c7\", // tailwind sky-500\n  BLUE: \"#2563eb\", // tailwind blue-500\n  INDIGO: \"#4f46e5\", // tailwind indigo-500\n  VIOLET: \"#7c3aed\", // tailwind violet-500\n  PURPLE: \"#9333ea\", // tailwind purple-500\n  FUCHSIA: \"#c026d3\", // tailwind fuchsia-500\n  PINK: \"#db2777\", // tailwind pink-500\n  ROSE: \"#e11d48\", // tailwind rose-500\n};\n\n// Define a constant array of color keys at module level\nconst COLOR_KEYS = Object.keys(COLORS) as Array<keyof typeof COLORS>;\n\n/**\n * Get a color from the COLORS object\n * @param color - The key of the color to get\n * @returns The color value\n */\nexport function getColor(color: keyof typeof COLORS) {\n  return COLORS[color.toUpperCase() as keyof typeof COLORS];\n}\n\n/**\n * Get a random color from the COLORS object\n * @param exclude - The keys of the colors to exclude\n * @param seed - A seed for deterministic selection\n * @returns The random color value\n */\nexport function randomColor(\n  exclude?: (keyof typeof COLORS)[],\n  seed?: string | number\n) {\n  const availableKeys = COLOR_KEYS.filter(\n    (key) => !exclude?.some((excludeKey) => excludeKey === key)\n  );\n\n  if (availableKeys.length === 0) {\n    return COLORS[COLOR_KEYS[0]];\n  }\n\n  // Deterministic hash-based selection\n  let seedNum = 0;\n  if (typeof seed === \"number\") {\n    seedNum = seed;\n  } else if (seed) {\n    seedNum = Array.from(seed).reduce(\n      (acc, char) => acc + char.charCodeAt(0),\n      0\n    );\n  }\n  const index = seedNum % availableKeys.length;\n\n  return COLORS[availableKeys[index]];\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;;;AACM,MAAM,SAAS;IACpB,KAAK;IACL,QAAQ;IACR,OAAO;IACP,QAAQ;IACR,MAAM;IACN,OAAO;IACP,SAAS;IACT,MAAM;IACN,MAAM;IACN,KAAK;IACL,MAAM;IACN,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,SAAS;IACT,MAAM;IACN,MAAM;AACR;AAEA,wDAAwD;AACxD,MAAM,aAAa,OAAO,IAAI,CAAC;;AAOxB,SAAS,SAAS,KAA0B;IACjD,OAAO,MAAM,CAAC,MAAM,WAAW,GAA0B;AAC3D;AAQO,SAAS,YACd,OAAiC,EACjC,IAAsB;IAEtB,MAAM,gBAAgB,WAAW,MAAM,CACrC,CAAC,MAAQ,EAAC,oBAAA,8BAAA,QAAS,IAAI,CAAC,CAAC,aAAe,eAAe;IAGzD,IAAI,cAAc,MAAM,KAAK,GAAG;QAC9B,OAAO,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC;IAC9B;IAEA,qCAAqC;IACrC,IAAI,UAAU;IACd,IAAI,OAAO,SAAS,UAAU;QAC5B,UAAU;IACZ,OAAO,IAAI,MAAM;QACf,UAAU,MAAM,IAAI,CAAC,MAAM,MAAM,CAC/B,CAAC,KAAK,OAAS,MAAM,KAAK,UAAU,CAAC,IACrC;IAEJ;IACA,MAAM,QAAQ,UAAU,cAAc,MAAM;IAE5C,OAAO,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC;AACrC","debugId":null}},
    {"offset": {"line": 8562, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/three/_data/index.ts"],"sourcesContent":["// origin point O(0, 0, 0)\nexport const ORIGIN_COLOR = {\n  LIGHT: \"#f4f4f5\",\n  DARK: \"#18181b\",\n};\n\n// Needs to load the fonts through URLs, not direct file system paths\n// Font path for the 3D text\nexport const FONT_PATH = \"/fonts/Geist-Regular.ttf\";\nexport const MONO_FONT_PATH = \"/fonts/GeistMono-Regular.ttf\";\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;;;;;AACnB,MAAM,eAAe;IAC1B,OAAO;IACP,MAAM;AACR;AAIO,MAAM,YAAY;AAClB,MAAM,iBAAiB","debugId":null}},
    {"offset": {"line": 8584, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/three/D%3A/github/nakafa.com-main/packages/design-system/components/three/axes.tsx"],"sourcesContent":["\"use client\";\n\nimport { Line, Text } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { COLORS } from \"@repo/design-system/lib/color\";\nimport { type ComponentProps, useMemo, useRef } from \"react\";\nimport { type Group, MeshBasicMaterial, Vector3 } from \"three\";\nimport { FONT_PATH, MONO_FONT_PATH } from \"./_data\";\n\n// Shared materials cache for text components\nconst textMaterialCache = new Map<string, MeshBasicMaterial>();\n\nfunction getTextMaterial(color: string): MeshBasicMaterial {\n  if (!textMaterialCache.has(color)) {\n    textMaterialCache.set(color, new MeshBasicMaterial({ color }));\n  }\n  const material = textMaterialCache.get(color);\n  if (!material) {\n    throw new Error(`Text material not found for color: ${color}`);\n  }\n  return material;\n}\n\nexport function Axes({\n  size = 10,\n  showLabels = true,\n  showZAxis = true,\n  labelSize = 0.5,\n  labelOffset = 0.5,\n  font = \"mono\",\n  ...props\n}: {\n  size?: number;\n  showLabels?: boolean;\n  showZAxis?: boolean;\n  labelSize?: number;\n  labelOffset?: number;\n  font?: \"mono\" | \"sans\";\n} & ComponentProps<\"group\">) {\n  const groupRef = useRef<Group>(null);\n\n  // Create points for each axis (now extending in both positive and negative directions)\n  const xPoints = useMemo(\n    () => [new Vector3(-size, 0, 0), new Vector3(size, 0, 0)],\n    [size]\n  );\n\n  const yPoints = useMemo(\n    () => [new Vector3(0, -size, 0), new Vector3(0, size, 0)],\n    [size]\n  );\n\n  const zPoints = useMemo(\n    () => [new Vector3(0, 0, -size), new Vector3(0, 0, size)],\n    [size]\n  );\n\n  const fontToUse = font === \"mono\" ? MONO_FONT_PATH : FONT_PATH;\n\n  // Memoize label positions to avoid recreating them\n  const labelPositions = useMemo(() => {\n    const offset = size + labelOffset;\n    return {\n      xPos: [offset, 0, 0] as [number, number, number],\n      xNeg: [-offset, 0, 0] as [number, number, number],\n      yPos: [0, offset, 0] as [number, number, number],\n      yNeg: [0, -offset, 0] as [number, number, number],\n      zPos: [0, 0, offset] as [number, number, number],\n      zNeg: [0, 0, -offset] as [number, number, number],\n    };\n  }, [size, labelOffset]);\n\n  // Enable frustum culling for the entire group\n  useFrame(() => {\n    if (groupRef.current) {\n      groupRef.current.frustumCulled = true;\n    }\n  });\n\n  // Get shared materials for text\n  const redMaterial = getTextMaterial(COLORS.RED);\n  const greenMaterial = getTextMaterial(COLORS.GREEN);\n  const blueMaterial = getTextMaterial(COLORS.BLUE);\n\n  return (\n    <group ref={groupRef} {...props}>\n      {/* Axis lines with frustum culling */}\n      <Line color={COLORS.RED} frustumCulled lineWidth={2} points={xPoints} />\n      <Line color={COLORS.GREEN} frustumCulled lineWidth={2} points={yPoints} />\n      <Line\n        color={COLORS.BLUE}\n        frustumCulled\n        lineWidth={2}\n        points={zPoints}\n        visible={showZAxis}\n      />\n\n      {/* X-axis labels */}\n      <Text\n        anchorX=\"left\"\n        color={COLORS.RED}\n        font={fontToUse}\n        fontSize={labelSize}\n        frustumCulled\n        material={redMaterial}\n        position={labelPositions.xPos}\n        visible={showLabels}\n      >\n        X\n      </Text>\n      <Text\n        anchorX=\"right\"\n        color={COLORS.RED}\n        font={fontToUse}\n        fontSize={labelSize}\n        frustumCulled\n        material={redMaterial}\n        position={labelPositions.xNeg}\n        visible={showLabels}\n      >\n        -X\n      </Text>\n\n      {/* Y-axis labels */}\n      <Text\n        anchorX=\"left\"\n        color={COLORS.GREEN}\n        font={fontToUse}\n        fontSize={labelSize}\n        frustumCulled\n        material={greenMaterial}\n        position={labelPositions.yPos}\n        visible={showLabels}\n      >\n        Y\n      </Text>\n      <Text\n        anchorX=\"left\"\n        color={COLORS.GREEN}\n        font={fontToUse}\n        fontSize={labelSize}\n        frustumCulled\n        material={greenMaterial}\n        position={labelPositions.yNeg}\n        visible={showLabels}\n      >\n        -Y\n      </Text>\n\n      {/* Z-axis labels */}\n      <Text\n        anchorX=\"left\"\n        color={COLORS.BLUE}\n        font={fontToUse}\n        fontSize={labelSize}\n        frustumCulled\n        material={blueMaterial}\n        position={labelPositions.zPos}\n        visible={showZAxis && showLabels}\n      >\n        Z\n      </Text>\n      <Text\n        anchorX=\"left\"\n        color={COLORS.BLUE}\n        font={fontToUse}\n        fontSize={labelSize}\n        frustumCulled\n        material={blueMaterial}\n        position={labelPositions.zNeg}\n        visible={showZAxis && showLabels}\n      >\n        -Z\n      </Text>\n    </group>\n  );\n}\n"],"names":["c","_c","Line","Text","useFrame","COLORS","useMemo","useRef","MeshBasicMaterial","Vector3","FONT_PATH","MONO_FONT_PATH","textMaterialCache","Map","getTextMaterial","color","has","set","material","get","Error","Axes","t0","$","$i","Symbol","for","props","t1","t2","t3","t4","t5","t6","size","showLabels","showZAxis","labelSize","labelOffset","font","undefined","groupRef","t7","t8","t9","t10","xPoints","t11","t12","t13","t14","yPoints","t15","t16","t17","t18","zPoints","fontToUse","offset","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","t31","t32","t33","t34","xPos","xNeg","yPos","yNeg","zPos","zNeg","labelPositions","t35","current","frustumCulled","t36","RED","redMaterial","t37","GREEN","greenMaterial","t38","BLUE","blueMaterial","t39","t40","t41","t42","t43","t44","t45","t46","t47","t48","t49","t50"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 9150, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/three/D%3A/github/nakafa.com-main/packages/design-system/components/three/camera-controls.tsx"],"sourcesContent":["\"use client\";\n\nimport { OrbitControls, PerspectiveCamera } from \"@react-three/drei\";\nimport { useFrame, useThree } from \"@react-three/fiber\";\nimport { useRef } from \"react\";\nimport type { OrbitControls as OrbitControlsImpl } from \"three-stdlib\";\n\nconst DEFAULT_CAMERA_X = 12;\nconst DEFAULT_CAMERA_Y = 8;\nconst DEFAULT_CAMERA_Z = 12;\n\nexport function CameraControls({\n  cameraPosition = [DEFAULT_CAMERA_X, DEFAULT_CAMERA_Y, DEFAULT_CAMERA_Z],\n  autoRotate = true,\n}: {\n  cameraPosition?: [number, number, number];\n  autoRotate?: boolean;\n}) {\n  const controlsRef = useRef<OrbitControlsImpl>(null);\n  const { invalidate, performance } = useThree();\n\n  // Handle auto-rotation with proper invalidation for on-demand rendering\n  useFrame(() => {\n    if (autoRotate && controlsRef.current) {\n      // Trigger performance regression during auto-rotation\n      performance.regress();\n      // Only invalidate if auto-rotate is actually changing something\n      controlsRef.current.update();\n      invalidate();\n    }\n  });\n\n  const handleChange = () => {\n    // Trigger performance regression on control changes (movement)\n    performance.regress();\n    invalidate();\n  };\n\n  return (\n    <>\n      <PerspectiveCamera fov={50} makeDefault position={cameraPosition} />\n      <OrbitControls\n        autoRotate={autoRotate}\n        autoRotateSpeed={0.5}\n        dampingFactor={0.05}\n        enableDamping\n        enableZoom={true}\n        makeDefault\n        maxDistance={100}\n        minDistance={1}\n        onChange={handleChange}\n        ref={controlsRef}\n        screenSpacePanning={true}\n        zoomSpeed={1.25}\n      />\n    </>\n  );\n}\n"],"names":["c","_c","OrbitControls","PerspectiveCamera","useFrame","useThree","useRef","DEFAULT_CAMERA_X","DEFAULT_CAMERA_Y","DEFAULT_CAMERA_Z","CameraControls","t0","$","$i","Symbol","for","cameraPosition","t1","autoRotate","t2","t3","undefined","controlsRef","invalidate","performance","t4","current","regress","update","t5","handleChange","t6","t7","t8"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 9301, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/three/D%3A/github/nakafa.com-main/packages/design-system/components/three/canvas.tsx"],"sourcesContent":["\"use client\";\n\nimport { AdaptiveDpr } from \"@react-three/drei\";\nimport { Canvas, type CanvasProps } from \"@react-three/fiber\";\nimport {\n  Button,\n  buttonVariants,\n} from \"@repo/design-system/components/ui/button\";\nimport { cn } from \"@repo/design-system/lib/utils\";\nimport { FrownIcon } from \"lucide-react\";\nimport dynamic from \"next/dynamic\";\nimport { useTranslations } from \"next-intl\";\nimport type { ReactNode } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { SpinnerIcon } from \"../ui/icons\";\n\nfunction ErrorFallback({\n  error,\n  resetErrorBoundary,\n}: {\n  error: Error;\n  resetErrorBoundary: () => void;\n}) {\n  const t = useTranslations(\"Error\");\n  return (\n    <div className=\"flex h-full w-full flex-col items-center justify-center p-4 text-center\">\n      <div className=\"space-y-4 text-center\">\n        <h1 className=\"font-bold font-mono text-2xl text-primary\">5XX</h1>\n\n        <div className=\"space-y-2\">\n          <h2 className=\"font-mono font-semibold tracking-tight\">\n            {t(\"title\")}\n          </h2>\n\n          <p className=\"mx-auto max-w-md text-muted-foreground text-sm\">\n            {error.message}\n          </p>\n        </div>\n\n        <div className=\"mx-auto grid w-fit grid-cols-2 gap-2\">\n          <Button onClick={resetErrorBoundary} size=\"sm\" variant=\"secondary\">\n            {t(\"retry\")}\n          </Button>\n          <a\n            className={cn(buttonVariants({ variant: \"secondary\", size: \"sm\" }))}\n            href=\"https://github.com/nakafaai/nakafa.com/issues\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            title={t(\"report\")}\n          >\n            {t(\"report\")}\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ThreeCanvasComponent({\n  children,\n  frameloop = \"demand\",\n  ...props\n}: {\n  children: ReactNode;\n  frameloop?: \"always\" | \"demand\" | \"never\";\n} & CanvasProps) {\n  return (\n    <ErrorBoundary\n      fallbackRender={({ error, resetErrorBoundary }) => (\n        <ErrorFallback error={error} resetErrorBoundary={resetErrorBoundary} />\n      )}\n    >\n      <Canvas\n        fallback={\n          <div className=\"flex h-full w-full items-center justify-center\">\n            <FrownIcon aria-hidden=\"true\" className=\"size-6 shrink-0\" />\n          </div>\n        }\n        frameloop={frameloop}\n        gl={{\n          antialias: true,\n          powerPreference: \"high-performance\",\n          alpha: true,\n        }}\n        performance={{\n          min: 0.8,\n          max: 1.0,\n          debounce: 100,\n        }}\n        shadows\n        {...props}\n      >\n        <AdaptiveDpr />\n        {children}\n      </Canvas>\n    </ErrorBoundary>\n  );\n}\n\nexport const ThreeCanvas = dynamic(\n  () => Promise.resolve(ThreeCanvasComponent),\n  {\n    ssr: false,\n    loading: () => (\n      <div className=\"flex h-full w-full items-center justify-center\">\n        <SpinnerIcon aria-hidden=\"true\" className=\"size-6 shrink-0\" />\n      </div>\n    ),\n  }\n);\n"],"names":["c","_c","AdaptiveDpr","Canvas","Button","buttonVariants","cn","FrownIcon","dynamic","useTranslations","ErrorBoundary","SpinnerIcon","ErrorFallback","t0","$","$i","Symbol","for","error","resetErrorBoundary","t","t1","t2","t3","t4","message","t5","t6","t7","t8","variant","size","t9","t10","t11","t12","t13","ThreeCanvasComponent","children","props","frameloop","undefined","antialias","powerPreference","alpha","min","max","debounce","_temp","ThreeCanvas","Promise","resolve","ssr","loading"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 9688, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/three/D%3A/github/nakafa.com-main/packages/design-system/components/three/origin.tsx"],"sourcesContent":["import type { ComponentProps } from \"react\";\nimport { ORIGIN_COLOR } from \"./_data\";\n\nconst SPHERE_GEOMETRY_SEGMENTS = 16;\n\nexport function Origin({\n  size = 0.2,\n  color = ORIGIN_COLOR.LIGHT,\n  ...props\n}: {\n  size?: number;\n  color?: string;\n} & ComponentProps<\"mesh\">) {\n  return (\n    <mesh {...props}>\n      <sphereGeometry\n        args={[size, SPHERE_GEOMETRY_SEGMENTS, SPHERE_GEOMETRY_SEGMENTS]}\n      />\n      <meshBasicMaterial color={color} />\n    </mesh>\n  );\n}\n"],"names":["ORIGIN_COLOR","SPHERE_GEOMETRY_SEGMENTS","Origin","t0","$","_c","$i","Symbol","for","props","t1","t2","size","color","undefined","LIGHT","t3","t4","t5"],"mappings":";;;;;;AACA,SAASA,YAAY,QAAQ,SAAS;;;;AAEtC,MAAMC,wBAAwB,GAAG,EAAE;AAE5B,gBAAAE,EAAA;IAAA,MAAAC,CAAA,OAAAC,gLAAA,EAAA;IAAA,IAAAD,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAE,EAAA,GAAA,GAAAA,EAAA,GAAA,IAAAA,EAAA,IAAA,EAAA;YAAAF,CAAA,CAAAE,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAJ,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAAK,KAAA;IAAA,IAAAC,EAAA;IAAA,IAAAC,EAAA;IAAA,IAAAP,CAAA,CAAA,EAAA,KAAAD,EAAA,EAAA;QAAgB,CAAA,EAAAS,IAAA,EAAAF,EAAA,EAAAG,KAAA,EAAAF,EAAA,EAAA,GAAAF,OAAA,GAAAN,EAOG;QAAAC,CAAA,CAAA,EAAA,GAAAD,EAAA;QAAAC,CAAA,CAAA,EAAA,GAAAK,KAAA;QAAAL,CAAA,CAAA,EAAA,GAAAM,EAAA;QAAAN,CAAA,CAAA,EAAA,GAAAO,EAAA;IAAA,OAAA;QAAAF,KAAA,GAAAL,CAAA,CAAA,EAAA;QAAAM,EAAA,GAAAN,CAAA,CAAA,EAAA;QAAAO,EAAA,GAAAP,CAAA,CAAA,EAAA;IAAA;IANxB,MAAAQ,IAAA,GAAAF,EAAU,KAAAI,SAAA,GAAA,MAAVJ,EAAU;IACV,MAAAG,KAAA,GAAAF,EAA0B,KAAAG,SAAA,GAAAd,wLAAA,CAAAe,KAAA,GAA1BJ,EAA0B;IAAA,IAAAK,EAAA;IAAA,IAAAZ,CAAA,CAAA,EAAA,KAAAQ,IAAA,EAAA;QAQtBI,EAAA,iBAAA,6LAAA,cAEE;YADM,IAA0D,CAA1D,CAAA;gBAACJ,IAAI;gBAAAX,wBAAA;gBAAAA,wBAAA;aAAoD,CAAC,GAChE;;;;;;QAAAG,CAAA,CAAA,EAAA,GAAAQ,IAAA;QAAAR,CAAA,CAAA,EAAA,GAAAY,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAZ,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAa,EAAA;IAAA,IAAAb,CAAA,CAAA,EAAA,KAAAS,KAAA,EAAA;QACFI,EAAA,iBAAA,6LAAA,iBAAmC;YAATJ,KAAK,CAALA,CAAAA,KAAI,CAAC,GAAI;;;;;;QAAAT,CAAA,CAAA,EAAA,GAAAS,KAAA;QAAAT,CAAA,CAAA,EAAA,GAAAa,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAb,CAAA,CAAA,EAAA;IAAA;IAAA,IAAAc,EAAA;IAAA,IAAAd,CAAA,CAAA,EAAA,KAAAK,KAAA,IAAAL,CAAA,CAAA,GAAA,KAAAY,EAAA,IAAAZ,CAAA,CAAA,GAAA,KAAAa,EAAA,EAAA;QAJrCC,EAAA,iBAAA,6LAAA,IAKO;YAAA,GALGT,KAAK,EACb;;gBAAAO,EAEC,CACD;gBAAAC,EAAkC,CACpC,EALA,IAKO;;;;;;;QAAAb,CAAA,CAAA,EAAA,GAAAK,KAAA;QAAAL,CAAA,CAAA,GAAA,GAAAY,EAAA;QAAAZ,CAAA,CAAA,GAAA,GAAAa,EAAA;QAAAb,CAAA,CAAA,GAAA,GAAAc,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAd,CAAA,CAAA,GAAA;IAAA;IAAA,OALPc,EAKO;AAAA;KAdJhB","ignoreList":[],"debugId":null}},
    {"offset": {"line": 9787, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/three/D%3A/github/nakafa.com-main/packages/design-system/components/three/coordinate-system.tsx"],"sourcesContent":["\"use client\";\n\nimport { GizmoHelper, GizmoViewport, Grid } from \"@react-three/drei\";\nimport { Button } from \"@repo/design-system/components/ui/button\";\nimport { COLORS } from \"@repo/design-system/lib/color\";\nimport { cn } from \"@repo/design-system/lib/utils\";\nimport { Grid2X2XIcon, Grid2x2Icon, PauseIcon, PlayIcon } from \"lucide-react\";\nimport { useTheme } from \"next-themes\";\nimport {\n  type CSSProperties,\n  type ReactNode,\n  Suspense,\n  useCallback,\n  useMemo,\n  useState,\n} from \"react\";\nimport { ORIGIN_COLOR } from \"./_data\";\nimport { Axes } from \"./axes\";\nimport { CameraControls } from \"./camera-controls\";\nimport { ThreeCanvas } from \"./canvas\";\nimport { Origin } from \"./origin\";\n\nconst GIZMO_MARGIN = 56;\nconst SCENE_READY_DELAY = 100;\nconst CAMERA_POSITION_X = 12;\nconst CAMERA_POSITION_Y = 8;\nconst CAMERA_POSITION_Z = 12;\n\ntype Props = {\n  /** Show the grid planes */\n  showGrid?: boolean;\n  /** Show the coordinate axes */\n  showAxes?: boolean;\n  /** Show the z-axis */\n  showZAxis?: boolean;\n  /** Show the origin point */\n  showOrigin?: boolean;\n  /** Show axis labels */\n  showLabels?: boolean;\n  /** Show the gizmo helper for orientation */\n  showGizmo?: boolean;\n  /** Size of the grid */\n  gridSize?: number;\n  /** Divisions of the grid */\n  gridDivisions?: number;\n  /** Size of the coordinate system */\n  size?: number;\n  /** Background color of the canvas */\n  backgroundColor?: CSSProperties[\"backgroundColor\"];\n  /** Custom camera position */\n  cameraPosition?: [number, number, number];\n  /** Font to use for labels and text\n   *\n   * @default \"mono\"\n   */\n  font?: \"mono\" | \"sans\";\n  /** Children elements to render inside the coordinate system */\n  children?: ReactNode;\n  /** Additional class name */\n  className?: string;\n};\n\nexport function CoordinateSystem({\n  showGrid: initialShowGrid = true,\n  showAxes = true,\n  showZAxis = true,\n  showOrigin = true,\n  showLabels = true,\n  showGizmo = true,\n  gridSize = 15,\n  gridDivisions = 15,\n  size = 15,\n  backgroundColor = \"transparent\",\n  cameraPosition = [CAMERA_POSITION_X, CAMERA_POSITION_Y, CAMERA_POSITION_Z],\n  font = \"mono\",\n  children,\n  className,\n}: Props) {\n  const { resolvedTheme } = useTheme();\n  const [showGrid, setShowGrid] = useState(initialShowGrid);\n  const [play, setPlay] = useState(false);\n  const [sceneReady, setSceneReady] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n\n  // Color mapping based on color scheme\n  const gridColors = useMemo(() => {\n    switch (resolvedTheme) {\n      case \"dark\":\n        return {\n          main: \"#404040\",\n          secondary: \"#262626\",\n        };\n      default:\n        return {\n          main: \"#d4d4d4\",\n          secondary: \"#e5e5e5\",\n        };\n    }\n  }, [resolvedTheme]);\n\n  // Origin point color based on theme\n  const originColor = useMemo(\n    () => (resolvedTheme === \"dark\" ? ORIGIN_COLOR.LIGHT : ORIGIN_COLOR.DARK),\n    [resolvedTheme]\n  );\n\n  // Handle button clicks with proper invalidation for on-demand rendering\n  const handleGridToggle = useCallback(() => {\n    setShowGrid(!showGrid);\n  }, [showGrid]);\n\n  const handlePlayToggle = useCallback(() => {\n    setPlay(!play);\n  }, [play]);\n\n  // Handle pointer events for cursor changes\n  const handlePointerDown = useCallback(() => {\n    setIsDragging(true);\n  }, []);\n\n  const handlePointerUp = useCallback(() => {\n    setIsDragging(false);\n  }, []);\n\n  return (\n    <div\n      className={cn(\n        \"relative grid aspect-square overflow-hidden rounded-md sm:aspect-[1.43/1]\", // IMAX aspect ratio\n        isDragging ? \"cursor-grabbing\" : \"cursor-grab\",\n        className\n      )}\n      onPointerDown={handlePointerDown}\n      onPointerUp={handlePointerUp}\n    >\n      <ThreeCanvas\n        onCreated={() =>\n          setTimeout(() => setSceneReady(true), SCENE_READY_DELAY)\n        }\n        style={{ background: backgroundColor }}\n      >\n        <Suspense fallback={null}>\n          {/* Camera Controls */}\n          <CameraControls autoRotate={play} cameraPosition={cameraPosition} />\n\n          {/* Lighting */}\n          <ambientLight intensity={0.5} />\n          <pointLight castShadow intensity={1} position={[10, 10, 10]} />\n\n          {/* Coordinate System */}\n          <Axes\n            font={font}\n            showLabels={showLabels}\n            showZAxis={showZAxis}\n            size={size}\n            visible={showAxes}\n          />\n\n          {/* Origin */}\n          <Origin color={originColor} visible={showOrigin} />\n\n          {/* Grid */}\n          <Grid\n            args={[gridSize * 2, gridSize * 2, gridDivisions, gridDivisions]}\n            cellColor={gridColors.secondary}\n            fadeDistance={50}\n            fadeStrength={1}\n            position={[0, 0, 0]}\n            rotation={[0, 0, 0]}\n            sectionColor={gridColors.main}\n            visible={showGrid}\n          />\n          <Grid\n            args={[gridSize * 2, gridSize * 2, gridDivisions, gridDivisions]}\n            cellColor={gridColors.secondary}\n            fadeDistance={50}\n            fadeStrength={1}\n            position={[0, 0, 0]}\n            rotation={[Math.PI / 2, 0, 0]}\n            sectionColor={gridColors.main}\n            visible={showGrid}\n          />\n          <Grid\n            args={[gridSize * 2, gridSize * 2, gridDivisions, gridDivisions]}\n            cellColor={gridColors.secondary}\n            fadeDistance={50}\n            fadeStrength={1}\n            position={[0, 0, 0]}\n            rotation={[0, 0, Math.PI / 2]}\n            sectionColor={gridColors.main}\n            visible={showGrid}\n          />\n\n          {/* User Content */}\n          {children}\n\n          {/* Orientation Helper */}\n          <GizmoHelper\n            alignment=\"bottom-right\"\n            margin={[GIZMO_MARGIN, GIZMO_MARGIN]}\n            visible={showGizmo}\n          >\n            <GizmoViewport\n              axisColors={[COLORS.RED, COLORS.GREEN, COLORS.BLUE]}\n              labelColor={ORIGIN_COLOR.LIGHT}\n            />\n          </GizmoHelper>\n        </Suspense>\n      </ThreeCanvas>\n\n      {/* UI Controls */}\n      <div\n        className={cn(\n          \"absolute bottom-3 left-3 flex gap-2 transition-opacity duration-300 ease-out\",\n          sceneReady ? \"opacity-100\" : \"opacity-0\"\n        )}\n      >\n        <Button onClick={handleGridToggle} size=\"icon\" variant=\"secondary\">\n          {showGrid ? (\n            <Grid2x2Icon className=\"size-4\" />\n          ) : (\n            <Grid2X2XIcon className=\"size-4\" />\n          )}\n          <span className=\"sr-only\">Toggle Grid</span>\n        </Button>\n        <Button\n          onClick={handlePlayToggle}\n          size=\"icon\"\n          variant={play ? \"secondary\" : \"default\"}\n        >\n          {play ? (\n            <PauseIcon className=\"size-4\" />\n          ) : (\n            <PlayIcon className=\"size-4\" />\n          )}\n          <span className=\"sr-only\">Toggle Play</span>\n        </Button>\n      </div>\n    </div>\n  );\n}\n"],"names":["c","_c","GizmoHelper","GizmoViewport","Grid","Button","COLORS","cn","Grid2X2XIcon","Grid2x2Icon","PauseIcon","PlayIcon","useTheme","Suspense","useCallback","useMemo","useState","ORIGIN_COLOR","Axes","CameraControls","ThreeCanvas","Origin","GIZMO_MARGIN","SCENE_READY_DELAY","CAMERA_POSITION_X","CAMERA_POSITION_Y","CAMERA_POSITION_Z","CoordinateSystem","t0","$","$i","Symbol","for","showGrid","t1","showAxes","t2","showZAxis","t3","showOrigin","t4","showLabels","t5","showGizmo","t6","gridSize","t7","gridDivisions","t8","size","t9","backgroundColor","t10","cameraPosition","t11","font","t12","children","className","initialShowGrid","undefined","t13","resolvedTheme","setShowGrid","play","setPlay","sceneReady","setSceneReady","isDragging","setIsDragging","t14","bb0","t15","main","secondary","gridColors","originColor","LIGHT","DARK","handleGridToggle","t16","handlePlayToggle","t17","handlePointerDown","t18","handlePointerUp","t19","t20","t21","setTimeout","t22","background","t23","t24","t25","t26","t27","t28","t29","t30","t31","t32","t33","t34","t35","t36","t37","t38","Math","PI","t39","t40","t41","t42","t43","t44","t45","t46","t47","RED","GREEN","BLUE","t48","t49","t50","t51","t52","t53","t54","t55","t56","t57","t58","t59","t60","t61"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 10514, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/three/D%3A/github/nakafa.com-main/packages/design-system/components/three/line-equation.tsx"],"sourcesContent":["\"use client\";\n\nimport { Instance, Instances, Line, Text } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { randomColor } from \"@repo/design-system/lib/color\";\nimport { useMemo, useRef } from \"react\";\nimport {\n  CatmullRomCurve3,\n  Color,\n  ConeGeometry,\n  type Group,\n  MeshBasicMaterial,\n  Quaternion,\n  SphereGeometry,\n  Vector3,\n} from \"three\";\nimport { FONT_PATH, MONO_FONT_PATH } from \"./_data\";\n\nconst SPHERE_GEOMETRY_RADIUS = 0.1;\nconst SPHERE_GEOMETRY_SEGMENTS = 8;\nconst CONE_GEOMETRY_SEGMENTS = 16;\nconst CONE_GEOMETRY_HEIGHT_SEGMENTS = 1;\nconst DEFAULT_ARROW_SIZE = 0.5;\nconst DEFAULT_FONT_SIZE = 0.5;\n\n// Shared geometry cache\nlet sharedSphereGeometry: SphereGeometry | null = null;\nconst sharedConeGeometries = new Map<string, ConeGeometry>();\nconst sharedMaterials = new Map<string, MeshBasicMaterial>();\n\nfunction getSharedSphereGeometry(): SphereGeometry {\n  if (!sharedSphereGeometry) {\n    // Reduced segments for better performance\n    sharedSphereGeometry = new SphereGeometry(\n      SPHERE_GEOMETRY_RADIUS,\n      SPHERE_GEOMETRY_SEGMENTS,\n      SPHERE_GEOMETRY_SEGMENTS\n    );\n  }\n  return sharedSphereGeometry;\n}\n\nfunction getSharedConeGeometry(size: number): ConeGeometry {\n  const key = `cone-${size}`;\n  if (!sharedConeGeometries.has(key)) {\n    // Reduced segments for better performance\n    sharedConeGeometries.set(\n      key,\n      new ConeGeometry(\n        size / 2,\n        size,\n        CONE_GEOMETRY_SEGMENTS,\n        CONE_GEOMETRY_HEIGHT_SEGMENTS\n      )\n    );\n  }\n  const geometry = sharedConeGeometries.get(key);\n  if (!geometry) {\n    throw new Error(`Cone geometry not found for size: ${size}`);\n  }\n  return geometry;\n}\n\nfunction getSharedMaterial(color: string | Color): MeshBasicMaterial {\n  const colorKey = color instanceof Color ? color.getHexString() : color;\n  if (!sharedMaterials.has(colorKey)) {\n    sharedMaterials.set(\n      colorKey,\n      new MeshBasicMaterial({\n        color: color instanceof Color ? color : new Color(color),\n      })\n    );\n  }\n  const material = sharedMaterials.get(colorKey);\n  if (!material) {\n    throw new Error(`Material not found for color: ${colorKey}`);\n  }\n  return material;\n}\n\nexport type Props = {\n  points: {\n    x: number;\n    y: number;\n    z: number;\n  }[];\n  color?: string | Color;\n  lineWidth?: number;\n  /**\n   * Whether to use the mono font for the labels\n   */\n  useMonoFont?: boolean;\n  showPoints?: boolean;\n  /**\n   * Whether to render the line as a smooth curve using CatmullRomCurve3\n   */\n  smooth?: boolean;\n  /**\n   * Number of points to use for the curve when smooth is true\n   * Higher values will create a smoother curve but may impact performance\n   */\n  curvePoints?: number;\n  /**\n   * Optional array of labels to render along the line. Each can specify the index of the point\n   * at which to render (defaults to midpoint), optional offset, and text styling.\n   */\n  labels?: Array<{\n    /** Text to display */\n    text: string;\n    /** Optional index into the `points` array where this label should appear; defaults to midpoint */\n    at?: number;\n    /** Optional [x,y,z] offset applied on top of the base point position */\n    offset?: [number, number, number];\n    /** Color for the label text */\n    color?: string | Color;\n    /** Font size of the label text */\n    fontSize?: number;\n  }>;\n  /**\n   * Optional cone arrowhead configuration.\n   */\n  cone?: {\n    /** Position of the cone arrowhead */\n    position: \"start\" | \"end\" | \"both\";\n    /** Size of the arrowhead */\n    size?: number;\n  };\n};\n\nexport function LineEquation({\n  points,\n  color = randomColor([\"YELLOW\", \"GREEN\", \"BLUE\"]),\n  lineWidth = 2,\n  showPoints = true,\n  smooth = true,\n  curvePoints = 30, // Reduced default from 50 for better performance\n  labels = [],\n  useMonoFont = true,\n  cone,\n}: Props) {\n  const groupRef = useRef<Group>(null);\n\n  const vectorPoints = useMemo(\n    () => points.map((point) => new Vector3(point.x, point.y, point.z)),\n    [points]\n  );\n\n  // Define cone size (default to 0.5 if not provided in cone prop)\n  const arrowSize = cone?.size ?? DEFAULT_ARROW_SIZE;\n\n  // Generate smooth curve points if smooth is true\n  const linePoints = useMemo(() => {\n    if (vectorPoints.length < 2) {\n      return vectorPoints;\n    }\n\n    let basePoints: Vector3[];\n\n    if (smooth) {\n      // Use CatmullRomCurve3 for smooth curves\n      const curve = new CatmullRomCurve3(vectorPoints);\n      basePoints = curve.getPoints(curvePoints);\n    } else {\n      // For non-smooth lines, use the original points directly\n      basePoints = [...vectorPoints];\n    }\n\n    // Adjust line end points to account for the cone size to prevent overlap\n    if (cone) {\n      if (\n        (cone.position === \"start\" || cone.position === \"both\") &&\n        basePoints.length >= 2\n      ) {\n        const startPoint = basePoints[0];\n        const nextPoint = basePoints[1];\n        const direction = new Vector3()\n          .subVectors(nextPoint, startPoint)\n          .normalize();\n        basePoints[0] = startPoint\n          .clone()\n          .add(direction.multiplyScalar(arrowSize)); // Move start point forward\n      }\n\n      if (\n        (cone.position === \"end\" || cone.position === \"both\") &&\n        basePoints.length >= 2\n      ) {\n        const endPoint = basePoints.at(-1);\n        const prevPoint = basePoints.at(-2);\n        // Ensure points exist\n        if (!(endPoint && prevPoint)) {\n          return basePoints; // Return unmodified points if check fails\n        }\n\n        const direction = new Vector3()\n          .subVectors(endPoint, prevPoint)\n          .normalize();\n        // Find the index of the last point to modify it directly\n        const lastIndex = basePoints.length - 1;\n        basePoints[lastIndex] = endPoint\n          .clone()\n          .sub(direction.multiplyScalar(arrowSize)); // Move end point backward\n      }\n    }\n    return basePoints;\n  }, [vectorPoints, smooth, curvePoints, cone, arrowSize]);\n\n  const fontPath = useMonoFont ? MONO_FONT_PATH : FONT_PATH;\n\n  // Use shared geometry and materials\n  const pointGeom = getSharedSphereGeometry();\n  const pointMat = getSharedMaterial(color);\n\n  // Cone geometry and material (reused from ArrowHelper logic)\n  const coneGeometry = useMemo(\n    () => (cone ? getSharedConeGeometry(arrowSize) : null),\n    [cone, arrowSize]\n  );\n  const coneMaterial = useMemo(\n    () => (cone ? getSharedMaterial(color) : null),\n    [cone, color]\n  );\n\n  // Calculate cone position and orientation\n  const coneData = useMemo(() => {\n    if (!cone || vectorPoints.length < 2) {\n      return null;\n    }\n\n    const cones: { position: Vector3; quaternion: Quaternion }[] = [];\n\n    // Add start cone if position is \"start\" or \"both\"\n    if (cone.position === \"start\" || cone.position === \"both\") {\n      const targetPoint = vectorPoints[0];\n      const nextPoint = vectorPoints[1];\n      // Ensure points exist (should always be true here due to length check)\n      if (targetPoint && nextPoint) {\n        const direction = new Vector3()\n          .subVectors(nextPoint, targetPoint)\n          .normalize();\n        // For start cone: position it so its tip is at the original start point\n        // The cone points backwards (opposite to line direction)\n        const conePosition = new Vector3()\n          .copy(targetPoint)\n          .add(direction.clone().multiplyScalar(arrowSize / 2));\n        const quaternion = new Quaternion().setFromUnitVectors(\n          new Vector3(0, 1, 0),\n          direction.clone().negate()\n        );\n        cones.push({ position: conePosition, quaternion });\n      }\n    }\n\n    // Add end cone if position is \"end\" or \"both\"\n    if (cone.position === \"end\" || cone.position === \"both\") {\n      const targetPoint = vectorPoints.at(-1);\n      const prevPoint = vectorPoints.at(-2);\n\n      // Ensure both points exist before proceeding\n      if (targetPoint && prevPoint) {\n        const direction = new Vector3()\n          .subVectors(targetPoint, prevPoint)\n          .normalize();\n        const conePosition = new Vector3()\n          .copy(targetPoint)\n          .sub(direction.clone().multiplyScalar(arrowSize / 2));\n        const quaternion = new Quaternion().setFromUnitVectors(\n          new Vector3(0, 1, 0),\n          direction\n        );\n        cones.push({ position: conePosition, quaternion });\n      }\n    }\n\n    return cones.length > 0 ? cones : null;\n  }, [cone, vectorPoints, arrowSize]);\n\n  // Enable frustum culling for the entire group\n  useFrame(() => {\n    if (groupRef.current) {\n      groupRef.current.frustumCulled = true;\n    }\n  });\n\n  // Pre-calculate label data to avoid recreating in render\n  const labelData = useMemo(\n    () =>\n      labels\n        .map((label, idx) => {\n          const mid = Math.floor(vectorPoints.length / 2);\n          const index = label.at ?? mid;\n          const base = vectorPoints[index];\n          if (!base) {\n            return null;\n          }\n          const [ox = 0, oy = 0, oz = 0] = label.offset || [0, 0, 0];\n          const pos: [number, number, number] = [\n            base.x + ox,\n            base.y + oy,\n            base.z + oz,\n          ];\n          return {\n            key: `label-${idx}`,\n            position: pos,\n            color: label.color ?? color,\n            fontSize: label.fontSize ?? DEFAULT_FONT_SIZE,\n            text: label.text,\n          };\n        })\n        .filter(Boolean),\n    [labels, vectorPoints, color]\n  );\n\n  return (\n    <group ref={groupRef}>\n      {/* Draw a line connecting the provided points */}\n      <Line\n        color={color}\n        frustumCulled\n        lineWidth={lineWidth}\n        points={linePoints}\n      />\n\n      {/* Render the cone(s) if configured */}\n      {coneData &&\n        coneGeometry &&\n        coneMaterial &&\n        coneData.map((data) => (\n          <mesh\n            frustumCulled\n            geometry={coneGeometry}\n            key={`cone-${data.position.x}-${data.position.y}-${data.position.z}`}\n            material={coneMaterial}\n            position={data.position}\n            quaternion={data.quaternion}\n          />\n        ))}\n\n      {/* Optionally render a small sphere at each point */}\n      <Instances\n        count={vectorPoints.length}\n        frustumCulled\n        geometry={pointGeom}\n        material={pointMat}\n        visible={showPoints}\n      >\n        {vectorPoints.map((v, index) => (\n          <Instance\n            key={`point-${index}-${v.x}-${v.y}-${v.z}`}\n            position={[v.x, v.y, v.z]}\n          />\n        ))}\n      </Instances>\n\n      {/* Render custom labels at specified indices */}\n      {labelData.map((data) => {\n        if (!data) {\n          return null;\n        }\n        return (\n          <Text\n            anchorX=\"center\"\n            anchorY=\"middle\"\n            color={data.color}\n            font={fontPath}\n            fontSize={data.fontSize}\n            frustumCulled\n            key={data.key}\n            position={data.position}\n          >\n            {data.text}\n          </Text>\n        );\n      })}\n    </group>\n  );\n}\n"],"names":["Instance","Instances","Line","Text","useFrame","randomColor","useMemo","useRef","CatmullRomCurve3","Color","ConeGeometry","MeshBasicMaterial","Quaternion","SphereGeometry","Vector3","FONT_PATH","MONO_FONT_PATH","SPHERE_GEOMETRY_RADIUS","SPHERE_GEOMETRY_SEGMENTS","CONE_GEOMETRY_SEGMENTS","CONE_GEOMETRY_HEIGHT_SEGMENTS","DEFAULT_ARROW_SIZE","DEFAULT_FONT_SIZE","sharedSphereGeometry","sharedConeGeometries","Map","sharedMaterials","getSharedSphereGeometry","getSharedConeGeometry","size","key","has","set","geometry","get","Error","getSharedMaterial","color","colorKey","getHexString","material","LineEquation","points","lineWidth","showPoints","smooth","curvePoints","labels","useMonoFont","cone","groupRef","vectorPoints","map","point","x","y","z","arrowSize","linePoints","length","basePoints","curve","getPoints","position","startPoint","nextPoint","direction","subVectors","normalize","clone","add","multiplyScalar","endPoint","at","prevPoint","lastIndex","sub","fontPath","pointGeom","pointMat","coneGeometry","coneMaterial","coneData","cones","targetPoint","conePosition","copy","quaternion","setFromUnitVectors","negate","push","current","frustumCulled","labelData","label","idx","mid","Math","floor","index","base","ox","oy","oz","offset","pos","fontSize","text","filter","Boolean","data","v"],"mappings":";;;;;;AAEA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,IAAI,EAAEC,IAAI,QAAQ,mBAAmB;;AACnE,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACvC,SACEC,gBAAgB,EAChBC,KAAK,EACLC,YAAY,EAEZC,iBAAiB,EACjBC,UAAU,EACVC,cAAc,EACdC,OAAO,QACF,OAAO;AACd,SAASC,SAAS,EAAEC,cAAc,QAAQ,SAAS;;;AAhBnD,YAAY;;;;;;;AAkBZ,MAAMC,sBAAsB,GAAG,GAAG;AAClC,MAAMC,wBAAwB,GAAG,CAAC;AAClC,MAAMC,sBAAsB,GAAG,EAAE;AACjC,MAAMC,6BAA6B,GAAG,CAAC;AACvC,MAAMC,kBAAkB,GAAG,GAAG;AAC9B,MAAMC,iBAAiB,GAAG,GAAG;AAE7B,wBAAA;AACA,IAAIC,oBAA2C,GAAG,IAAI;AACtD,MAAMC,oBAAoB,GAAG,IAAIC,GAAG,CAAuB,CAAC;AAC5D,MAAMC,eAAe,GAAG,IAAID,GAAG,CAA4B,CAAC;AAE5D,SAASE,uBAAuBA,CAAA,EAAmB;IACjD,IAAI,CAACJ,oBAAoB,EAAE;QACzB,0CAAA;QACAA,oBAAoB,GAAG,IAAIV,oKAAc,CACvCI,sBAAsB,EACtBC,wBAAwB,EACxBA,wBACF,CAAC;IACH;IACA,OAAOK,oBAAoB;AAC7B;AAEA,SAASK,qBAAqBA,CAACC,IAAY,EAAgB;IACzD,MAAMC,GAAG,GAAG,QAAY,CAAE,MAAND,IAAI;IACxB,IAAI,CAACL,oBAAoB,CAACO,GAAG,CAACD,GAAG,CAAC,EAAE;QAClC,0CAAA;QACAN,oBAAoB,CAACQ,GAAG,CACtBF,GAAG,EACH,IAAIpB,kKAAY,CACdmB,IAAI,GAAG,CAAC,EACRA,IAAI,EACJV,sBAAsB,EACtBC,6BACF,CACF,CAAC;IACH;IACA,MAAMa,QAAQ,GAAGT,oBAAoB,CAACU,GAAG,CAACJ,GAAG,CAAC;IAC9C,IAAI,CAACG,QAAQ,EAAE;QACb,MAAM,IAAIE,KAAK,CAAC,qCAAyC,CAAE,CAAC,KAAPN,IAAI;IAC3D;IACA,OAAOI,QAAQ;AACjB;AAEA,SAASG,iBAAiBA,CAACC,KAAqB,EAAqB;IACnE,MAAMC,QAAQ,GAAGD,KAAK,YAAY5B,2JAAK,GAAG4B,KAAK,CAACE,YAAY,CAAC,CAAC,GAAGF,KAAK;IACtE,IAAI,CAACX,eAAe,CAACK,GAAG,CAACO,QAAQ,CAAC,EAAE;QAClCZ,eAAe,CAACM,GAAG,CACjBM,QAAQ,EACR,IAAI3B,uKAAiB,CAAC;YACpB0B,KAAK,EAAEA,KAAK,YAAY5B,2JAAK,GAAG4B,KAAK,GAAG,IAAI5B,2JAAK,CAAC4B,KAAK;QACzD,CAAC,CACH,CAAC;IACH;IACA,MAAMG,QAAQ,GAAGd,eAAe,CAACQ,GAAG,CAACI,QAAQ,CAAC;IAC9C,IAAI,CAACE,QAAQ,EAAE;QACb,MAAM,IAAIL,KAAK,CAAC,iCAAyC,CAAE,CAAC,KAAXG,QAAQ;IAC3D;IACA,OAAOE,QAAQ;AACjB;AAmDO,2BAUC,EAAE;UATRE,MAAM,EACNL,KAAK,OAAGhC,8JAAW,EAAC;QAAC,QAAQ;QAAE,OAAO;QAAE,MAAM;KAAC,CAAC,EAChDsC,SAAS,GAAG,CAAC,EACbC,UAAU,GAAG,IAAI,EACjBC,MAAM,GAAG,IAAI,EACbC,WAAW,GAAG,EAAE,EAAE,iDAAA;IAClBC,MAAM,GAAG,EAAE,EACXC,WAAW,GAAG,IAAI,EAClBC,IAAAA,KAT2B;;IAW3B,MAAMC,QAAQ,OAAG3C,uKAAM,EAAQ,IAAI,CAAC;IAEpC,MAAM4C,YAAY,OAAG7C,wKAAO;8CAC1B,IAAMoC,MAAM,CAACU,GAAG;uDAAEC,KAAK,GAAK,IAAIvC,6JAAO,CAACuC,KAAK,CAACC,CAAC,EAAED,KAAK,CAACE,CAAC,EAAEF,KAAK,CAACG,CAAC,CAAC,CAAC;;6CACnE;QAACd,MAAM;KACT,CAAC;;IAED,iEAAA;IACA,MAAMe,SAAS,kEAAS5B,IAAI,sCAAVoB,IAAI,SAAU5B,kBAAkB;IAElD,iDAAA;IACA,MAAMqC,UAAU,OAAGpD,wKAAO;4CAAC,MAAM;YAC/B,IAAI6C,YAAY,CAACQ,MAAM,GAAG,CAAC,EAAE;gBAC3B,OAAOR,YAAY;YACrB;YAEA,IAAIS,UAAqB;YAEzB,IAAIf,MAAM,EAAE;gBACV,yCAAA;gBACA,MAAMgB,KAAK,GAAG,IAAIrD,sKAAgB,CAAC2C,YAAY,CAAC;gBAChDS,UAAU,GAAGC,KAAK,CAACC,SAAS,CAAChB,WAAW,CAAC;YAC3C,CAAC,MAAM;gBACL,yDAAA;gBACAc,UAAU,GAAG,CAAC;uBAAGT,YAAY;iBAAC;YAChC;YAEA,yEAAA;YACA,IAAIF,IAAI,EAAE;gBACR,IACE,CAACA,IAAI,CAACc,QAAQ,KAAK,OAAO,IAAId,IAAI,CAACc,QAAQ,KAAK,MAAM,KACtDH,UAAU,CAACD,MAAM,IAAI,CAAC,EACtB;oBACA,MAAMK,UAAU,GAAGJ,UAAU,CAAC,CAAC,CAAC;oBAChC,MAAMK,SAAS,GAAGL,UAAU,CAAC,CAAC,CAAC;oBAC/B,MAAMM,SAAS,GAAG,IAAIpD,6JAAO,CAAC,CAAC,CAC5BqD,UAAU,CAACF,SAAS,EAAED,UAAU,CAAC,CACjCI,SAAS,CAAC,CAAC;oBACdR,UAAU,CAAC,CAAC,CAAC,GAAGI,UAAU,CACvBK,KAAK,CAAC,CAAC,CACPC,GAAG,CAACJ,SAAS,CAACK,cAAc,CAACd,SAAS,CAAC,CAAC,CAAC,CAAC,2BAAA;gBAC/C;gBAEA,IACE,CAACR,IAAI,CAACc,QAAQ,KAAK,KAAK,IAAId,IAAI,CAACc,QAAQ,KAAK,MAAM,KACpDH,UAAU,CAACD,MAAM,IAAI,CAAC,EACtB;oBACA,MAAMa,QAAQ,GAAGZ,UAAU,CAACa,EAAE,CAAC,CAAC,CAAC,CAAC;oBAClC,MAAMC,SAAS,GAAGd,UAAU,CAACa,EAAE,CAAC,CAAC,CAAC,CAAC;oBACnC,sBAAA;oBACA,IAAI,CAAA,CAAED,QAAQ,IAAIE,SAAS,CAAC,EAAE;wBAC5B,OAAOd,UAAU,CAAC,CAAC,0CAAA;oBACrB;oBAEA,MAAMM,WAAS,GAAG,IAAIpD,6JAAO,CAAC,CAAC,CAC5BqD,UAAU,CAACK,QAAQ,EAAEE,SAAS,CAAC,CAC/BN,SAAS,CAAC,CAAC;oBACd,yDAAA;oBACA,MAAMO,SAAS,GAAGf,UAAU,CAACD,MAAM,GAAG,CAAC;oBACvCC,UAAU,CAACe,SAAS,CAAC,GAAGH,QAAQ,CAC7BH,KAAK,CAAC,CAAC,CACPO,GAAG,CAACV,WAAS,CAACK,cAAc,CAACd,SAAS,CAAC,CAAC,CAAC,CAAC,0BAAA;gBAC/C;YACF;YACA,OAAOG,UAAU;QACnB,CAAC;2CAAE;QAACT,YAAY;QAAEN,MAAM;QAAEC,WAAW;QAAEG,IAAI;QAAEQ,SAAS;KAAC,CAAC;IAExD,MAAMoB,QAAQ,GAAG7B,WAAW,GAAGhC,0LAAc,GAAGD,qLAAS;IAEzD,oCAAA;IACA,MAAM+D,SAAS,GAAGnD,uBAAuB,CAAC,CAAC;IAC3C,MAAMoD,QAAQ,GAAG3C,iBAAiB,CAACC,KAAK,CAAC;IAEzC,6DAAA;IACA,MAAM2C,YAAY,OAAG1E,wKAAO;8CAC1B,IAAO2C,IAAI,GAAGrB,qBAAqB,CAAC6B,SAAS,CAAC,GAAG,IAAK;6CACtD;QAACR,IAAI;QAAEQ,SAAS;KAClB,CAAC;IACD,MAAMwB,YAAY,OAAG3E,wKAAO;8CAC1B,IAAO2C,IAAI,GAAGb,iBAAiB,CAACC,KAAK,CAAC,GAAG,IAAK;6CAC9C;QAACY,IAAI;QAAEZ,KAAK;KACd,CAAC;IAED,0CAAA;IACA,MAAM6C,QAAQ,OAAG5E,wKAAO;0CAAC,MAAM;YAC7B,IAAI,CAAC2C,IAAI,IAAIE,YAAY,CAACQ,MAAM,GAAG,CAAC,EAAE;gBACpC,OAAO,IAAI;YACb;YAEA,MAAMwB,KAAsD,GAAG,EAAE;YAEjE,kDAAA;YACA,IAAIlC,IAAI,CAACc,QAAQ,KAAK,OAAO,IAAId,IAAI,CAACc,QAAQ,KAAK,MAAM,EAAE;gBACzD,MAAMqB,WAAW,GAAGjC,YAAY,CAAC,CAAC,CAAC;gBACnC,MAAMc,WAAS,GAAGd,YAAY,CAAC,CAAC,CAAC;gBACjC,uEAAA;gBACA,IAAIiC,WAAW,IAAInB,WAAS,EAAE;oBAC5B,MAAMC,WAAS,GAAG,IAAIpD,6JAAO,CAAC,CAAC,CAC5BqD,UAAU,CAACF,WAAS,EAAEmB,WAAW,CAAC,CAClChB,SAAS,CAAC,CAAC;oBACd,wEAAA;oBACA,yDAAA;oBACA,MAAMiB,YAAY,GAAG,IAAIvE,6JAAO,CAAC,CAAC,CAC/BwE,IAAI,CAACF,WAAW,CAAC,CACjBd,GAAG,CAACJ,WAAS,CAACG,KAAK,CAAC,CAAC,CAACE,cAAc,CAACd,SAAS,GAAG,CAAC,CAAC,CAAC;oBACvD,MAAM8B,UAAU,GAAG,IAAI3E,gKAAU,CAAC,CAAC,CAAC4E,kBAAkB,CACpD,IAAI1E,6JAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACpBoD,WAAS,CAACG,KAAK,CAAC,CAAC,CAACoB,MAAM,CAAC,CAC3B,CAAC;oBACDN,KAAK,CAACO,IAAI,CAAC;wBAAE3B,QAAQ,EAAEsB,YAAY;wBAAEE;oBAAW,CAAC,CAAC;gBACpD;YACF;YAEA,8CAAA;YACA,IAAItC,IAAI,CAACc,QAAQ,KAAK,KAAK,IAAId,IAAI,CAACc,QAAQ,KAAK,MAAM,EAAE;gBACvD,MAAMqB,aAAW,GAAGjC,YAAY,CAACsB,EAAE,CAAC,CAAC,CAAC,CAAC;gBACvC,MAAMC,WAAS,GAAGvB,YAAY,CAACsB,EAAE,CAAC,CAAC,CAAC,CAAC;gBAErC,6CAAA;gBACA,IAAIW,aAAW,IAAIV,WAAS,EAAE;oBAC5B,MAAMR,WAAS,GAAG,IAAIpD,6JAAO,CAAC,CAAC,CAC5BqD,UAAU,CAACiB,aAAW,EAAEV,WAAS,CAAC,CAClCN,SAAS,CAAC,CAAC;oBACd,MAAMiB,cAAY,GAAG,IAAIvE,6JAAO,CAAC,CAAC,CAC/BwE,IAAI,CAACF,aAAW,CAAC,CACjBR,GAAG,CAACV,WAAS,CAACG,KAAK,CAAC,CAAC,CAACE,cAAc,CAACd,SAAS,GAAG,CAAC,CAAC,CAAC;oBACvD,MAAM8B,YAAU,GAAG,IAAI3E,gKAAU,CAAC,CAAC,CAAC4E,kBAAkB,CACpD,IAAI1E,6JAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACpBoD,WACF,CAAC;oBACDiB,KAAK,CAACO,IAAI,CAAC;wBAAE3B,QAAQ,EAAEsB,cAAY;wBAAEE,UAAU,EAAVA;oBAAW,CAAC,CAAC;gBACpD;YACF;YAEA,OAAOJ,KAAK,CAACxB,MAAM,GAAG,CAAC,GAAGwB,KAAK,GAAG,IAAI;QACxC,CAAC;yCAAE;QAAClC,IAAI;QAAEE,YAAY;QAAEM,SAAS;KAAC,CAAC;IAEnC,8CAAA;;iCACS,MAAM;YACb,IAAIP,QAAQ,CAACyC,OAAO,EAAE;gBACpBzC,QAAQ,CAACyC,OAAO,CAACC,aAAa,GAAG,IAAI;YACvC;QACF,CAAC,CAAC;;IAEF,yDAAA;IACA,MAAMC,SAAS,OAAGvF,wKAAO;2CACvB,IACEyC,MAAM,CACHK,GAAG;mDAAC,CAAC0C,KAAK,EAAEC,GAAG,KAAK;oBACnB,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAAC/C,YAAY,CAACQ,MAAM,GAAG,CAAC,CAAC;;oBAC/C,MAAMwC,KAAK,sBAAS1B,EAAE,qCAARqB,KAAK,OAAOE,GAAG;oBAC7B,MAAMI,IAAI,GAAGjD,YAAY,CAACgD,KAAK,CAAC;oBAChC,IAAI,CAACC,IAAI,EAAE;wBACT,OAAO,IAAI;oBACb;oBACA,MAAM,CAACC,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAG,CAAC,CAAC,GAAGT,KAAK,CAACU,MAAM,IAAI;wBAAC,CAAC;wBAAE,CAAC;wBAAE,CAAC;qBAAC;oBAC1D,MAAMC,GAA6B,GAAG;wBACpCL,IAAI,CAAC9C,CAAC,GAAG+C,EAAE;wBACXD,IAAI,CAAC7C,CAAC,GAAG+C,EAAE;wBACXF,IAAI,CAAC5C,CAAC,GAAG+C,EAAE;qBACZ;;oBACD,OAAO;wBACLzE,GAAG,EAAE,SAAY,CAAE,MAALiE,GAAG;wBACjBhC,QAAQ,EAAE0C,GAAG;wBACbpE,KAAK,GAAEyD,KAAK,gBAACzD,KAAK,uDAAIA,KAAK;wBAC3BqE,QAAQ,qBAAEZ,KAAK,CAACY,QAAQ,6DAAIpF,iBAAiB;wBAC7CqF,IAAI,EAAEb,KAAK,CAACa,IAAAA;oBACd,CAAC;gBACH,CAAC,CAAC;kDACDC,MAAM,CAACC,OAAO,CAAC;0CACpB;QAAC9D,MAAM;QAAEI,YAAY;QAAEd,KAAK;KAC9B,CAAC;IAED,qBACE,6LAAC,KAAK;QAAC,GAAG,CAAC,CAACa,QAAQ,CAAC;;0BAEnB,6LAAC,mKAAI;gBACH,KAAK,CAAC,CAACb,KAAK,CAAC;gBACb,aAAa;gBACb,SAAS,CAAC,CAACM,SAAS,CAAC;gBACrB,MAAM,CAAC,CAACe,UAAU,CAAC;;;;;;YAIpBwB,QAAQ,IACPF,YAAY,IACZC,YAAY,IACZC,QAAQ,CAAC9B,GAAG,EAAE0D,IAAI,iBAChB,6LAAC,IAAI;oBACH,aAAa;oBACb,QAAQ,CAAC,CAAC9B,YAAY,CAAC,CACvB,GAAG,CAAC;oBACJ,QAAQ,CAAC,CAACC,YAAY,CAAC;oBACvB,QAAQ,CAAC,CAAC6B,IAAI,CAAC/C,QAAQ,CAAC;oBACxB,UAAU,CAAC,CAAC+C,IAAI,CAACvB,UAAU,CAAC,GAE/B,CAAC;mBALO,eAAQuB,IAAI,CAAC/C,QAAQ,CAACT,CAAC,EAAA,YAAIwD,IAAI,CAAC/C,QAAQ,CAACR,CAAC,EAAA,KAAmB,CAAE,CAAC,KAAlBuD,IAAI,CAAC/C,QAAQ,CAACP,CAAC;;;;;0BAQxE,6LAAC,6KAAS;gBACR,KAAK,CAAC,CAACL,YAAY,CAACQ,MAAM,CAAC;gBAC3B,aAAa;gBACb,QAAQ,CAAC,CAACmB,SAAS,CAAC;gBACpB,QAAQ,CAAC,CAACC,QAAQ,CAAC;gBACnB,OAAO,CAAC,CAACnC,UAAU,CAAC;0BAEnBO,YAAY,CAACC,GAAG,CAAC,CAAC2D,CAAC,EAAEZ,OAAK,iBACzB,6LAAC,4KAAQ,CACP,GAAG,CAAC;wBACJ,QAAQ,CAAC,CAAC;4BAACY,CAAC,CAACzD,CAAC;4BAAEyD,CAAC,CAACxD,CAAC;4BAAEwD,CAAC,CAACvD,CAAC;yBAAC,CAAC,GAE7B,CAAC;uBAHO,SAAkBuD,CAAC,MAAVZ,OAAK,EAAA,cAAM7C,CAAC,EAAA,YAAIyD,CAAC,CAACxD,CAAC,EAAA,KAAO,CAAE,CAAC,KAANwD,CAAC,CAACvD,CAAC;;;;;;;;;;YAO7CqC,SAAS,CAACzC,GAAG,EAAE0D,MAAI,IAAK;gBACvB,IAAI,CAACA,MAAI,EAAE;oBACT,OAAO,IAAI;gBACb;gBACA,qBACE,6LAAC,mKAAI;oBACH,OAAO,EAAC,QAAQ;oBAChB,OAAO,EAAC,QAAQ;oBAChB,KAAK,CAAC,CAACA,MAAI,CAACzE,KAAK,CAAC;oBAClB,IAAI,CAAC,CAACwC,QAAQ,CAAC;oBACf,QAAQ,CAAC,CAACiC,MAAI,CAACJ,QAAQ,CAAC;oBACxB,aAAa,CACb,GAAG,CAAC;oBACJ,QAAQ,CAAC,CAACI,MAAI,CAAC/C,QAAQ,CAAC;8BAEvB+C,MAAI,CAACH,IAAI;mBAHLG,MAAI,CAAChF,GAAG,CAAC;;;;;YAMpB,CAAC,CAAC;;;;;;;AAGR;;;QAlGE1B,8NAAQ;;;KArJMqC,YAAYA","ignoreList":[],"debugId":null}},
    {"offset": {"line": 10838, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/lib/device.ts"],"sourcesContent":["const MOBILE_REGEX =\n  /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\nexport function isMobileDevice(): boolean {\n  return MOBILE_REGEX.test(navigator.userAgent);\n}\n"],"names":[],"mappings":";;;;AAAA,MAAM,eACJ;AACK,SAAS;IACd,OAAO,aAAa,IAAI,CAAC,UAAU,SAAS;AAC9C","debugId":null}},
    {"offset": {"line": 10853, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/three/D%3A/github/nakafa.com-main/packages/design-system/components/three/inequality.tsx"],"sourcesContent":["\"use client\";\n\nimport { Text } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { COLORS } from \"@repo/design-system/lib/color\";\nimport { isMobileDevice } from \"@repo/design-system/lib/device\";\nimport { useMemo, useRef } from \"react\";\nimport {\n  BufferAttribute,\n  BufferGeometry,\n  Color,\n  DoubleSide,\n  Float32BufferAttribute,\n  type Group,\n  MeshBasicMaterial,\n} from \"three\";\nimport { FONT_PATH, MONO_FONT_PATH } from \"./_data\";\n\n// Performance tuning constants\nconst MIN_CORES_FOR_HIGH_RES = 8;\nconst MIN_CORES_FOR_MEDIUM_RES = 4;\nconst MAX_RES_MOBILE_LOW_CORE = 50;\nconst MAX_RES_MEDIUM_CORE = 100;\n\n// Default geometry values\nconst DEFAULT_RANGE_MIN = -5;\nconst DEFAULT_RANGE_MAX = 5;\n\n// Geometry calculation constants\nconst COMPONENTS_PER_VERTEX = 3;\nconst VERTICES_PER_CELL = 36;\nconst INDICES_PER_CELL = 36;\nconst LAST_VERTEX_OFFSET_IN_QUAD = 3;\n\n// 2D inequality cell check thresholds\nconst SATISFIED_CORNERS_THRESHOLD_HIGH = 3;\nconst SATISFIED_CORNERS_THRESHOLD_LOW = 2;\nconst RESOLUTION_THRESHOLD_FOR_CORNERS = 80;\n\n// Boundary line constants\nconst MAX_LINE_RESOLUTION = 50;\nconst EPSILON = 1e-10;\nconst VERTICAL_CONNECTOR_DENSITY_FACTOR = 4;\n\n// Label constants\nconst DEFAULT_LABEL_FONT_SIZE = 0.5;\n\ntype Point = [number, number, number];\n\ntype Props = {\n  /** Function that determines the boundary of the inequality (where the inequality becomes equality) */\n  boundaryFunction?: (x: number, y: number) => number;\n  /** Indicates if this is a 2D inequality (like x + y <= 10) that should be extruded along z-axis */\n  is2D?: boolean;\n  /** For 2D inequalities, specifies the boundary line function where ax + by + c = 0\n   * as [a, b, c]. For example, x + y = 10 would be [1, 1, -10] */\n  boundaryLine2D?: [number, number, number];\n  /** Range for x coordinate to visualize */\n  xRange?: [number, number];\n  /** Range for y coordinate to visualize */\n  yRange?: [number, number];\n  /** Range for z coordinate to visualize */\n  zRange?: [number, number];\n  /** Granularity of the visualization (higher means more detailed) */\n  resolution?: number;\n  /** Color for the inequality region */\n  color?: string | Color;\n  /** Color for the boundary line/plane */\n  boundaryColor?: string | Color;\n  /** Opacity of the region */\n  opacity?: number;\n  /** Width of the boundary line */\n  boundaryLineWidth?: number;\n  /** Show boundary line/plane */\n  showBoundary?: boolean;\n  /** Optional label for the inequality */\n  label?: {\n    /** Text to display */\n    text: string;\n    /** Position for the label */\n    position: [number, number, number];\n    /** Color for the label text */\n    color?: string | Color;\n    /** Font size of the label text */\n    fontSize?: number;\n  };\n  /** Whether to use the mono font for the labels */\n  useMonoFont?: boolean;\n};\n\n// Performance optimization: Adaptive resolution based on device capabilities\nfunction getAdaptiveResolution(requestedResolution: number): number {\n  // Check device capabilities\n  const isMobile = isMobileDevice();\n  const cores = navigator.hardwareConcurrency || MIN_CORES_FOR_MEDIUM_RES;\n\n  if (isMobile || cores < MIN_CORES_FOR_MEDIUM_RES) {\n    return Math.min(requestedResolution, MAX_RES_MOBILE_LOW_CORE);\n  }\n  if (cores >= MIN_CORES_FOR_HIGH_RES) {\n    return requestedResolution;\n  }\n  return Math.min(requestedResolution, MAX_RES_MEDIUM_CORE);\n}\n\nexport function Inequality({\n  boundaryFunction,\n  is2D = false,\n  boundaryLine2D,\n  xRange = [DEFAULT_RANGE_MIN, DEFAULT_RANGE_MAX],\n  yRange = [DEFAULT_RANGE_MIN, DEFAULT_RANGE_MAX],\n  zRange = [DEFAULT_RANGE_MIN, DEFAULT_RANGE_MAX],\n  resolution = 200,\n  color = COLORS.BLUE,\n  boundaryColor,\n  opacity = 0.1,\n  boundaryLineWidth = 2,\n  showBoundary = true,\n  label,\n  useMonoFont = true,\n}: Props) {\n  const fontPath = useMonoFont ? MONO_FONT_PATH : FONT_PATH;\n  const groupRef = useRef<Group>(null);\n\n  // Adaptive resolution for performance\n  const adaptiveResolution = getAdaptiveResolution(resolution);\n\n  // Create optimized buffer geometry for the inequality region\n  // biome-ignore lint/complexity/noExcessiveCognitiveComplexity: This is a complex function, but it's necessary for the inequality visualization\n  const geometry = useMemo(() => {\n    const geo = new BufferGeometry();\n    const vertices: Float32Array = new Float32Array(\n      adaptiveResolution *\n        adaptiveResolution *\n        VERTICES_PER_CELL *\n        COMPONENTS_PER_VERTEX\n    ); // Pre-allocate\n    const indices: Uint32Array = new Uint32Array(\n      adaptiveResolution * adaptiveResolution * INDICES_PER_CELL\n    ); // Pre-allocate\n    let vertexIndex = 0;\n    let indexOffset = 0;\n\n    // Define the step size based on resolution\n    const xStep = (xRange[1] - xRange[0]) / adaptiveResolution;\n    const yStep = (yRange[1] - yRange[0]) / adaptiveResolution;\n\n    // Helper function to add a quad (two triangles) to the geometry - optimized\n    const addQuad = (p1: Point, p2: Point, p3: Point, p4: Point) => {\n      const index = vertexIndex / COMPONENTS_PER_VERTEX;\n\n      // Add vertices directly to array\n      vertices[vertexIndex++] = p1[0];\n      vertices[vertexIndex++] = p1[1];\n      vertices[vertexIndex++] = p1[2];\n      vertices[vertexIndex++] = p2[0];\n      vertices[vertexIndex++] = p2[1];\n      vertices[vertexIndex++] = p2[2];\n      vertices[vertexIndex++] = p3[0];\n      vertices[vertexIndex++] = p3[1];\n      vertices[vertexIndex++] = p3[2];\n      vertices[vertexIndex++] = p4[0];\n      vertices[vertexIndex++] = p4[1];\n      vertices[vertexIndex++] = p4[2];\n\n      // Add indices for two triangles\n      indices[indexOffset++] = index;\n      indices[indexOffset++] = index + 1;\n      indices[indexOffset++] = index + 2;\n      indices[indexOffset++] = index;\n      indices[indexOffset++] = index + 2;\n      indices[indexOffset++] = index + LAST_VERTEX_OFFSET_IN_QUAD;\n    };\n\n    // Helper function to create all faces of a complete cell - optimized\n    const addCompleteCell = ({\n      x1,\n      y1,\n      x2,\n      y2,\n      z1,\n      z2,\n    }: {\n      x1: number;\n      y1: number;\n      x2: number;\n      y2: number;\n      z1: number;\n      z2: number;\n    }) => {\n      // Only add visible faces for performance (basic culling)\n      // Bottom face (at minimum z)\n      addQuad([x1, y1, z1], [x2, y1, z1], [x2, y2, z1], [x1, y2, z1]);\n\n      // Top face (at maximum z)\n      addQuad([x1, y1, z2], [x1, y2, z2], [x2, y2, z2], [x2, y1, z2]);\n\n      // Side faces - only if on boundary\n      if (Math.abs(x1 - xRange[0]) < xStep) {\n        // Left face\n        addQuad([x1, y1, z1], [x1, y1, z2], [x1, y2, z2], [x1, y2, z1]);\n      }\n      if (Math.abs(x2 - xRange[1]) < xStep) {\n        // Right face\n        addQuad([x2, y1, z1], [x2, y2, z1], [x2, y2, z2], [x2, y1, z2]);\n      }\n      if (Math.abs(y1 - yRange[0]) < yStep) {\n        // Front face\n        addQuad([x1, y1, z1], [x2, y1, z1], [x2, y1, z2], [x1, y1, z2]);\n      }\n      if (Math.abs(y2 - yRange[1]) < yStep) {\n        // Back face\n        addQuad([x1, y2, z1], [x1, y2, z2], [x2, y2, z2], [x2, y2, z1]);\n      }\n    };\n\n    if (is2D && boundaryLine2D) {\n      // Handle 2D inequality (like x + y <= 10) visualized as extruded along z-axis\n      const [a, b, c] = boundaryLine2D;\n\n      // Optimized grid traversal with early termination\n      for (let ix = 0; ix < adaptiveResolution; ix++) {\n        for (let iy = 0; iy < adaptiveResolution; iy++) {\n          const x1 = xRange[0] + ix * xStep;\n          const x2 = xRange[0] + (ix + 1) * xStep;\n          const y1 = yRange[0] + iy * yStep;\n          const y2 = yRange[0] + (iy + 1) * yStep;\n\n          // Quick check using center point for better performance\n          const centerX = (x1 + x2) / 2;\n          const centerY = (y1 + y2) / 2;\n          const centerValue = a * centerX + b * centerY + c;\n\n          // If center is far from boundary, we can make a quick decision\n          const cellDiagonal = Math.sqrt(\n            (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n          );\n          const distanceToLine =\n            Math.abs(centerValue) / Math.sqrt(a * a + b * b);\n\n          if (centerValue <= 0 && distanceToLine > cellDiagonal) {\n            // Fully inside - add cell\n            addCompleteCell({ x1, y1, x2, y2, z1: zRange[0], z2: zRange[1] });\n          } else if (centerValue <= 0 || distanceToLine < cellDiagonal * 2) {\n            // Near boundary - check corners\n            const corner1Satisfies = a * x1 + b * y1 + c <= 0;\n            const corner2Satisfies = a * x2 + b * y1 + c <= 0;\n            const corner3Satisfies = a * x2 + b * y2 + c <= 0;\n            const corner4Satisfies = a * x1 + b * y2 + c <= 0;\n\n            const satisfiedCorners =\n              (corner1Satisfies ? 1 : 0) +\n              (corner2Satisfies ? 1 : 0) +\n              (corner3Satisfies ? 1 : 0) +\n              (corner4Satisfies ? 1 : 0);\n\n            if (\n              satisfiedCorners >= SATISFIED_CORNERS_THRESHOLD_HIGH ||\n              (satisfiedCorners >= SATISFIED_CORNERS_THRESHOLD_LOW &&\n                adaptiveResolution < RESOLUTION_THRESHOLD_FOR_CORNERS)\n            ) {\n              addCompleteCell({ x1, y1, x2, y2, z1: zRange[0], z2: zRange[1] });\n            }\n          }\n        }\n      }\n    } else if (boundaryFunction) {\n      // Handle 3D inequality (like z > f(x,y)) - simplified for performance\n      for (let ix = 0; ix < adaptiveResolution; ix += 2) {\n        // Skip every other cell for performance\n        for (let iy = 0; iy < adaptiveResolution; iy += 2) {\n          const x1 = xRange[0] + ix * xStep;\n          const x2 = xRange[0] + (ix + 2) * xStep;\n          const y1 = yRange[0] + iy * yStep;\n          const y2 = yRange[0] + (iy + 2) * yStep;\n\n          // Sample the center point\n          const centerX = (x1 + x2) / 2;\n          const centerY = (y1 + y2) / 2;\n          const zBoundary = boundaryFunction(centerX, centerY);\n\n          if (zBoundary >= zRange[0] && zBoundary <= zRange[1]) {\n            // Create a quad at the boundary\n            addQuad(\n              [x1, y1, zBoundary],\n              [x2, y1, zBoundary],\n              [x2, y2, zBoundary],\n              [x1, y2, zBoundary]\n            );\n          }\n        }\n      }\n    }\n\n    // Trim arrays to actual size used\n    const finalVertices = new Float32Array(vertices.buffer, 0, vertexIndex);\n    const finalIndices = new Uint32Array(indices.buffer, 0, indexOffset);\n\n    geo.setAttribute(\n      \"position\",\n      new Float32BufferAttribute(finalVertices, COMPONENTS_PER_VERTEX)\n    );\n    geo.setIndex(new BufferAttribute(finalIndices, 1));\n    geo.computeVertexNormals();\n\n    return geo;\n  }, [\n    is2D,\n    boundaryLine2D,\n    boundaryFunction,\n    xRange,\n    yRange,\n    zRange,\n    adaptiveResolution,\n  ]);\n\n  // Material for the inequality region with performance optimizations\n  const material = useMemo(() => {\n    return new MeshBasicMaterial({\n      color: color instanceof Color ? color : new Color(color),\n      transparent: true,\n      opacity,\n      side: DoubleSide,\n      depthWrite: false, // Better transparency handling\n    });\n  }, [color, opacity]);\n\n  // Generate boundary lines for rendering - optimized\n  // biome-ignore lint/complexity/noExcessiveCognitiveComplexity: This is a complex function, but it's necessary for the inequality visualization\n  const boundarySegmentsGeometry = useMemo(() => {\n    if (!((boundaryFunction || boundaryLine2D) && showBoundary)) {\n      return;\n    }\n\n    const vertices: number[] = [];\n    const lineResolution = Math.min(adaptiveResolution, MAX_LINE_RESOLUTION); // Lower resolution for lines\n    const xStep = (xRange[1] - xRange[0]) / lineResolution;\n    const yStep = (yRange[1] - yRange[0]) / lineResolution;\n\n    if (is2D && boundaryLine2D) {\n      // For 2D inequalities, create a vertical boundary plane\n      const [a, b, c] = boundaryLine2D;\n\n      // Create boundary lines more efficiently\n      if (Math.abs(b) > EPSILON) {\n        // Express y as a function of x\n        for (let ix = 0; ix <= lineResolution; ix++) {\n          const x = xRange[0] + ix * xStep;\n          const y = (-a * x - c) / b;\n\n          if (y >= yRange[0] && y <= yRange[1] && ix > 0) {\n            const prevX = xRange[0] + (ix - 1) * xStep;\n            const prevY = (-a * prevX - c) / b;\n            if (prevY >= yRange[0] && prevY <= yRange[1]) {\n              // Bottom edge\n              vertices.push(prevX, prevY, zRange[0], x, y, zRange[0]);\n              // Top edge\n              vertices.push(prevX, prevY, zRange[1], x, y, zRange[1]);\n            }\n          }\n        }\n\n        // Add vertical connectors\n        for (\n          let i = 0;\n          i <= lineResolution;\n          i += Math.floor(lineResolution / VERTICAL_CONNECTOR_DENSITY_FACTOR)\n        ) {\n          const x = xRange[0] + i * xStep;\n          const y = (-a * x - c) / b;\n          if (y >= yRange[0] && y <= yRange[1]) {\n            vertices.push(x, y, zRange[0], x, y, zRange[1]);\n          }\n        }\n      } else if (Math.abs(a) > EPSILON) {\n        // Express x as a function of y\n        for (let iy = 0; iy <= lineResolution; iy++) {\n          const y = yRange[0] + iy * yStep;\n          const x = (-b * y - c) / a;\n\n          if (x >= xRange[0] && x <= xRange[1] && iy > 0) {\n            const prevY = yRange[0] + (iy - 1) * yStep;\n            const prevX = (-b * prevY - c) / a;\n            if (prevX >= xRange[0] && prevX <= xRange[1]) {\n              vertices.push(prevX, prevY, zRange[0], x, y, zRange[0]);\n              vertices.push(prevX, prevY, zRange[1], x, y, zRange[1]);\n            }\n          }\n        }\n      }\n    } else if (boundaryFunction) {\n      // For 3D inequalities - create a wireframe grid\n      const gridStep = Math.floor(lineResolution / 10);\n\n      // Lines along x-axis\n      for (let iy = 0; iy <= lineResolution; iy += gridStep) {\n        const y = yRange[0] + iy * yStep;\n        for (let ix = 1; ix <= lineResolution; ix++) {\n          const x = xRange[0] + ix * xStep;\n          const prevX = xRange[0] + (ix - 1) * xStep;\n          const z = boundaryFunction(x, y);\n          const prevZ = boundaryFunction(prevX, y);\n\n          if (\n            z >= zRange[0] &&\n            z <= zRange[1] &&\n            prevZ >= zRange[0] &&\n            prevZ <= zRange[1]\n          ) {\n            vertices.push(prevX, y, prevZ, x, y, z);\n          }\n        }\n      }\n\n      // Lines along y-axis\n      for (let ix = 0; ix <= lineResolution; ix += gridStep) {\n        const x = xRange[0] + ix * xStep;\n        for (let iy = 1; iy <= lineResolution; iy++) {\n          const y = yRange[0] + iy * yStep;\n          const prevY = yRange[0] + (iy - 1) * yStep;\n          const z = boundaryFunction(x, y);\n          const prevZ = boundaryFunction(x, prevY);\n\n          if (\n            z >= zRange[0] &&\n            z <= zRange[1] &&\n            prevZ >= zRange[0] &&\n            prevZ <= zRange[1]\n          ) {\n            vertices.push(x, prevY, prevZ, x, y, z);\n          }\n        }\n      }\n    }\n\n    if (vertices.length === 0) {\n      return;\n    }\n\n    const geom = new BufferGeometry();\n    geom.setAttribute(\n      \"position\",\n      new Float32BufferAttribute(vertices, COMPONENTS_PER_VERTEX)\n    );\n    return geom;\n  }, [\n    showBoundary,\n    adaptiveResolution,\n    boundaryFunction,\n    boundaryLine2D,\n    is2D,\n    xRange,\n    yRange,\n    zRange,\n  ]);\n\n  // Default boundary color is the same as the region color but more opaque\n  const finalBoundaryColor = boundaryColor || color;\n\n  // Use frustum culling\n  useFrame(() => {\n    if (groupRef.current) {\n      groupRef.current.frustumCulled = true;\n    }\n  });\n\n  return (\n    <group ref={groupRef}>\n      {/* Render the shaded region */}\n      <mesh frustumCulled geometry={geometry} material={material} />\n\n      {/* Render the boundary as one lineSegments for better performance */}\n      {showBoundary && boundarySegmentsGeometry && (\n        <lineSegments frustumCulled geometry={boundarySegmentsGeometry}>\n          <lineBasicMaterial\n            color={finalBoundaryColor}\n            linewidth={boundaryLineWidth}\n          />\n        </lineSegments>\n      )}\n\n      {/* Render label if provided */}\n      {label && (\n        <Text\n          anchorX=\"center\"\n          anchorY=\"middle\"\n          color={label.color || finalBoundaryColor}\n          font={fontPath}\n          fontSize={label.fontSize || DEFAULT_LABEL_FONT_SIZE}\n          frustumCulled\n          position={label.position}\n        >\n          {label.text}\n        </Text>\n      )}\n    </group>\n  );\n}\n"],"names":["Text","useFrame","COLORS","isMobileDevice","useMemo","useRef","BufferAttribute","BufferGeometry","Color","DoubleSide","Float32BufferAttribute","MeshBasicMaterial","FONT_PATH","MONO_FONT_PATH","MIN_CORES_FOR_HIGH_RES","MIN_CORES_FOR_MEDIUM_RES","MAX_RES_MOBILE_LOW_CORE","MAX_RES_MEDIUM_CORE","DEFAULT_RANGE_MIN","DEFAULT_RANGE_MAX","COMPONENTS_PER_VERTEX","VERTICES_PER_CELL","INDICES_PER_CELL","LAST_VERTEX_OFFSET_IN_QUAD","SATISFIED_CORNERS_THRESHOLD_HIGH","SATISFIED_CORNERS_THRESHOLD_LOW","RESOLUTION_THRESHOLD_FOR_CORNERS","MAX_LINE_RESOLUTION","EPSILON","VERTICAL_CONNECTOR_DENSITY_FACTOR","DEFAULT_LABEL_FONT_SIZE","getAdaptiveResolution","requestedResolution","isMobile","cores","navigator","hardwareConcurrency","Math","min","Inequality","boundaryFunction","is2D","boundaryLine2D","xRange","yRange","zRange","resolution","color","BLUE","boundaryColor","opacity","boundaryLineWidth","showBoundary","label","useMonoFont","fontPath","groupRef","adaptiveResolution","geometry","geo","vertices","Float32Array","indices","Uint32Array","vertexIndex","indexOffset","xStep","yStep","addQuad","p1","p2","p3","p4","index","addCompleteCell","x1","y1","x2","y2","z1","z2","abs","a","b","c","ix","iy","centerX","centerY","centerValue","cellDiagonal","sqrt","distanceToLine","corner1Satisfies","corner2Satisfies","corner3Satisfies","corner4Satisfies","satisfiedCorners","zBoundary","finalVertices","buffer","finalIndices","setAttribute","setIndex","computeVertexNormals","material","transparent","side","depthWrite","boundarySegmentsGeometry","lineResolution","x","y","prevX","prevY","push","i","floor","gridStep","z","prevZ","length","geom","finalBoundaryColor","current","frustumCulled","fontSize","position","text"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 11379, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/contents/subject/high-school/10/mathematics/sequence-series/sequence-concept/D%3A/github/nakafa.com-main/packages/contents/subject/high-school/10/mathematics/sequence-series/sequence-concept/animation-table.tsx"],"sourcesContent":["\"use client\";\n\nimport { useIntersection, useMediaQuery } from \"@mantine/hooks\";\nimport { Button } from \"@repo/design-system/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport { PauseIcon, PlayIcon, TimerResetIcon } from \"lucide-react\";\nimport { AnimatePresence, LayoutGroup, motion } from \"motion/react\";\nimport {\n  useCallback,\n  useDeferredValue,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\n\n// Constants for animation and layout\nconst MAX_TABLES_MOBILE = 2;\nconst MAX_TABLES_DESKTOP = 3;\nconst ANIMATION_INTERVAL_MS = 2000;\nconst INITIAL_SIDE_CHAIRS = 2;\nconst STAGGER_DELAY = 0.01;\nconst SPEED_HALF = 0.5;\nconst SPEED_NORMAL = 1;\nconst SPEED_FAST = 1.5;\nconst SPEED_VERY_FAST = 2;\nconst SPEED_VALUES = [SPEED_HALF, SPEED_NORMAL, SPEED_FAST, SPEED_VERY_FAST];\nconst CHAIR_SIZE = 24;\nconst Z_INDEX_TABLE = 10;\nconst Z_INDEX_CHAIR = 20;\n\ntype TableChairsProps = {\n  labels?: {\n    title?: string;\n    table?: string;\n    chair?: string;\n  };\n};\n\ntype TableItem = {\n  id: number;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n};\n\ntype ChairItem = {\n  id: number;\n  x: number;\n  y: number;\n  side: \"left\" | \"right\" | \"top\" | \"bottom\";\n};\n\nexport default function TableChairsAnimation({\n  labels = {\n    title: \"Table and Chair Sequence Pattern\",\n    table: \"Table\",\n    chair: \"Chair\",\n  },\n}: TableChairsProps) {\n  const [tableCount, setTableCount] = useState(1);\n  const [speed, setSpeed] = useState(1);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const deferredPlaying = useDeferredValue(isPlaying);\n  const deferredTableCount = useDeferredValue(tableCount);\n\n  const isMobile = useMediaQuery(\"(max-width: 640px)\");\n\n  const { ref, entry } = useIntersection({\n    threshold: 0.1,\n  });\n\n  useEffect(() => {\n    if (entry) {\n      setIsPlaying(entry.isIntersecting);\n    }\n  }, [entry]);\n\n  const maxTables = isMobile ? MAX_TABLES_MOBILE : MAX_TABLES_DESKTOP;\n\n  // Calculate chair count based on the formula U_n = 2n + 2\n  const chairCount = useMemo(\n    () => 2 * deferredTableCount + 2,\n    [deferredTableCount]\n  );\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n\n    // Stop playing when maximum table count is reached\n    if (deferredTableCount >= maxTables) {\n      setIsPlaying(false);\n      return;\n    }\n\n    if (deferredPlaying) {\n      interval = setInterval(() => {\n        setTableCount((prev) => {\n          if (prev < maxTables) {\n            return prev + 1;\n          }\n          return prev;\n        });\n      }, ANIMATION_INTERVAL_MS / speed);\n    }\n\n    return () => clearInterval(interval);\n  }, [deferredPlaying, deferredTableCount, maxTables, speed]);\n\n  const resetAnimation = useCallback(() => {\n    setTableCount(1);\n    setIsPlaying(true);\n  }, []);\n\n  const togglePlayPause = useCallback(() => {\n    if (!isPlaying && tableCount >= maxTables) {\n      // If at max table count and trying to play, restart from beginning\n      setTableCount(1);\n      setIsPlaying(true);\n    } else {\n      setIsPlaying(!isPlaying);\n    }\n  }, [isPlaying, tableCount, maxTables]);\n\n  // Constants for sizing and spacing\n  const tableWidth = 100;\n  const tableHeight = 80;\n  const tableSpacing = 4; // Gap between tables\n  const chairOffset = 8; // Distance of chair from table edge\n\n  // Generate arrangement of tables and chairs\n  const arrangement = useMemo(() => {\n    const tables: TableItem[] = [];\n    const chairs: ChairItem[] = [];\n\n    // Calculate total width of all tables\n    const totalWidth = deferredTableCount * tableWidth;\n\n    // For single table\n    if (deferredTableCount === 1) {\n      tables.push({\n        id: 1,\n        x: 0,\n        y: 0,\n        width: tableWidth,\n        height: tableHeight,\n      });\n\n      // Add 4 chairs around the table (positioned at midpoints of each side)\n      chairs.push(\n        {\n          id: 1,\n          x: -CHAIR_SIZE - chairOffset,\n          y: tableHeight / 2 - CHAIR_SIZE / 2,\n          side: \"left\",\n        },\n        {\n          id: 2,\n          x: tableWidth + chairOffset,\n          y: tableHeight / 2 - CHAIR_SIZE / 2,\n          side: \"right\",\n        },\n        {\n          id: 3,\n          x: tableWidth / 2 - CHAIR_SIZE / 2,\n          y: -CHAIR_SIZE - chairOffset,\n          side: \"top\",\n        },\n        {\n          id: 4,\n          x: tableWidth / 2 - CHAIR_SIZE / 2,\n          y: tableHeight + chairOffset,\n          side: \"bottom\",\n        }\n      );\n    } else {\n      // For multiple tables\n      for (let i = 0; i < deferredTableCount; i++) {\n        tables.push({\n          id: i + 1,\n          x: i * (tableWidth + tableSpacing),\n          y: 0,\n          width: tableWidth,\n          height: tableHeight,\n        });\n      }\n\n      // Add chairs on the left side of the leftmost table\n      chairs.push({\n        id: 1,\n        x: -CHAIR_SIZE - chairOffset, // No need to add spacing between tables for the first chair\n        y: tableHeight / 2 - CHAIR_SIZE / 2,\n        side: \"left\",\n      });\n\n      // Add chairs on the right side of the rightmost table\n      chairs.push({\n        id: 2,\n        x: totalWidth + chairOffset + (deferredTableCount - 1) * tableSpacing, // Add spacing between tables\n        y: tableHeight / 2 - CHAIR_SIZE / 2,\n        side: \"right\",\n      });\n\n      // Add chairs on the top of each table\n      for (let i = 0; i < deferredTableCount; i++) {\n        chairs.push({\n          id: INITIAL_SIDE_CHAIRS + 1 + i,\n          x:\n            i * tableWidth + tableWidth / 2 - CHAIR_SIZE / 2 + i * tableSpacing, // Add spacing between tables\n          y: -CHAIR_SIZE - chairOffset,\n          side: \"top\",\n        });\n      }\n\n      // Add chairs on the bottom of each table\n      for (let i = 0; i < deferredTableCount; i++) {\n        chairs.push({\n          id: INITIAL_SIDE_CHAIRS + 1 + deferredTableCount + i,\n          x:\n            i * tableWidth + tableWidth / 2 - CHAIR_SIZE / 2 + i * tableSpacing, // Add spacing between tables\n          y: tableHeight + chairOffset,\n          side: \"bottom\",\n        });\n      }\n    }\n\n    return { tables, chairs };\n  }, [deferredTableCount]);\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{labels.title}</CardTitle>\n        <CardDescription>\n          {deferredTableCount} {labels.table} & {chairCount} {labels.chair}\n        </CardDescription>\n      </CardHeader>\n\n      <CardContent>\n        <div\n          className=\"relative aspect-square w-full overflow-hidden rounded-lg border border-cyan-100 bg-cyan-50 p-4 sm:aspect-video dark:border-cyan-900 dark:bg-cyan-950\"\n          ref={ref}\n        >\n          <div className=\"flex h-full flex-col items-center justify-center gap-8\">\n            {/* Table and chairs visualization */}\n            <div className=\"relative flex w-full items-center justify-center\">\n              <div\n                className=\"relative\"\n                style={{\n                  width:\n                    deferredTableCount * tableWidth +\n                    (deferredTableCount - 1) * tableSpacing,\n                  height: tableHeight,\n                }}\n              >\n                <LayoutGroup>\n                  {/* Tables */}\n                  <AnimatePresence mode=\"popLayout\">\n                    {arrangement.tables.map((table) => (\n                      <motion.div\n                        animate={{ opacity: 1, scale: 1 }}\n                        className=\"absolute rounded-md bg-teal-300 shadow-sm transition-colors hover:bg-teal-400 dark:bg-teal-500\"\n                        exit={{ opacity: 0, scale: 0 }}\n                        initial={{ opacity: 0, scale: 0 }}\n                        key={`table-${table.id}`}\n                        layout\n                        style={{\n                          left: table.x,\n                          top: table.y,\n                          width: table.width,\n                          height: table.height,\n                          zIndex: Z_INDEX_TABLE,\n                        }}\n                        transition={{\n                          type: \"spring\",\n                          stiffness: 500,\n                          damping: 30,\n                          delay: (table.id - 1) * STAGGER_DELAY, // Stagger effect\n                        }}\n                      />\n                    ))}\n                  </AnimatePresence>\n\n                  {/* Chairs */}\n                  <AnimatePresence mode=\"popLayout\">\n                    {arrangement.chairs.map((chair) => (\n                      <motion.div\n                        animate={{ opacity: 1, scale: 1 }}\n                        className=\"absolute rounded-full bg-cyan-300 shadow-sm transition-colors hover:bg-cyan-400 dark:bg-cyan-500\"\n                        exit={{ opacity: 0, scale: 0 }}\n                        initial={{ opacity: 0, scale: 0 }}\n                        key={`chair-${chair.id}`}\n                        layout\n                        style={{\n                          left: chair.x,\n                          top: chair.y,\n                          width: CHAIR_SIZE,\n                          height: CHAIR_SIZE,\n                          zIndex: Z_INDEX_CHAIR,\n                        }}\n                        transition={{\n                          type: \"spring\",\n                          stiffness: 500,\n                          damping: 30,\n                          delay: chair.id * STAGGER_DELAY, // Stagger effect\n                        }}\n                      />\n                    ))}\n                  </AnimatePresence>\n                </LayoutGroup>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n\n      <CardFooter className=\"flex flex-col gap-4 px-0\">\n        <div className=\"flex w-full flex-col items-center justify-between gap-4 px-6 sm:flex-row\">\n          <div className=\"flex justify-between gap-2\">\n            <Button\n              aria-label=\"Reset\"\n              onClick={resetAnimation}\n              size=\"icon\"\n              variant=\"outline\"\n            >\n              <TimerResetIcon className=\"size-4 shrink-0\" />\n              <span className=\"sr-only\">Reset</span>\n            </Button>\n            <Button\n              aria-label={isPlaying ? \"Pause\" : \"Play\"}\n              onClick={togglePlayPause}\n              size=\"icon\"\n              variant={isPlaying ? \"outline\" : \"default\"}\n            >\n              {isPlaying ? (\n                <PauseIcon className=\"size-4 shrink-0\" />\n              ) : (\n                <PlayIcon className=\"size-4 shrink-0\" />\n              )}\n              <span className=\"sr-only\">{isPlaying ? \"Pause\" : \"Play\"}</span>\n            </Button>\n          </div>\n\n          <div className=\"flex flex-wrap justify-center gap-2\">\n            {SPEED_VALUES.map((speedValue) => (\n              <Button\n                aria-label={`Set speed to ${speedValue}x`}\n                key={speedValue}\n                onClick={() => setSpeed(speedValue)}\n                size=\"sm\"\n                variant={speed === speedValue ? \"default\" : \"outline\"}\n              >\n                {speedValue}x\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"w-full border-t px-6 pt-4\">\n          <div className=\"flex flex-wrap justify-center gap-2\">\n            {Array.from({ length: maxTables }).map((_, i) => (\n              <Button\n                aria-label={`Set table count to ${i + 1}`}\n                key={`table-count-${i + 1}`}\n                onClick={() => {\n                  setTableCount(i + 1);\n                  setIsPlaying(false);\n                }}\n                size=\"sm\"\n                variant={tableCount === i + 1 ? \"default\" : \"outline\"}\n              >\n                {i + 1} {labels.table}\n              </Button>\n            ))}\n          </div>\n        </div>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":["useIntersection","useMediaQuery","Button","Card","CardContent","CardDescription","CardFooter","CardHeader","CardTitle","PauseIcon","PlayIcon","TimerResetIcon","AnimatePresence","LayoutGroup","motion","useCallback","useDeferredValue","useEffect","useMemo","useState","MAX_TABLES_MOBILE","MAX_TABLES_DESKTOP","ANIMATION_INTERVAL_MS","INITIAL_SIDE_CHAIRS","STAGGER_DELAY","SPEED_HALF","SPEED_NORMAL","SPEED_FAST","SPEED_VERY_FAST","SPEED_VALUES","CHAIR_SIZE","Z_INDEX_TABLE","Z_INDEX_CHAIR","TableChairsAnimation","labels","title","table","chair","tableCount","setTableCount","speed","setSpeed","isPlaying","setIsPlaying","deferredPlaying","deferredTableCount","isMobile","ref","entry","threshold","isIntersecting","maxTables","chairCount","interval","setInterval","prev","clearInterval","resetAnimation","togglePlayPause","tableWidth","tableHeight","tableSpacing","chairOffset","arrangement","tables","chairs","totalWidth","push","id","x","y","width","height","side","i","map","opacity","scale","left","top","zIndex","type","stiffness","damping","delay","speedValue","Array","from","length","_"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 11933, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/contents/D%3A/github/nakafa.com-main/packages/design-system/components/contents/bar-chart.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport type { ChartConfig } from \"@repo/design-system/components/ui/chart\";\nimport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@repo/design-system/components/ui/chart\";\nimport {\n  CartesianGrid,\n  Bar as RechartsBar,\n  BarChart as RechartsBarChart,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\ntype Props = {\n  title: string;\n  description: string;\n  data: {\n    name: string;\n    value: number;\n  }[];\n  chartConfig: ChartConfig;\n  yAxisLabel: string;\n};\n\nexport function HistogramChart({\n  title,\n  description,\n  data,\n  chartConfig,\n  yAxisLabel,\n}: Props) {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer className=\"aspect-square\" config={chartConfig}>\n          <RechartsBarChart\n            accessibilityLayer\n            barCategoryGap={0}\n            barGap={0}\n            data={data}\n          >\n            <CartesianGrid vertical={false} />\n\n            <XAxis\n              axisLine={false}\n              dataKey=\"name\"\n              tickLine={false}\n              tickMargin={10}\n            />\n            <YAxis\n              axisLine={false}\n              dataKey=\"value\"\n              label={{\n                value: yAxisLabel,\n                angle: -90,\n                position: \"insideLeft\",\n                style: { textAnchor: \"middle\" },\n              }}\n              tickLine={false}\n              tickMargin={10}\n            />\n            <ChartTooltip\n              content={<ChartTooltipContent indicator=\"line\" />}\n              cursor={false}\n            />\n            <RechartsBar dataKey=\"value\" radius={0} />\n          </RechartsBarChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function BarChart({\n  title,\n  description,\n  data,\n  chartConfig,\n  yAxisLabel,\n}: Props) {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer className=\"aspect-square\" config={chartConfig}>\n          <RechartsBarChart accessibilityLayer data={data}>\n            <CartesianGrid vertical={false} />\n            <XAxis\n              axisLine={false}\n              dataKey=\"name\"\n              tickLine={false}\n              tickMargin={10}\n            />\n            <YAxis\n              axisLine={false}\n              dataKey=\"value\"\n              label={{\n                value: yAxisLabel,\n                angle: -90,\n                position: \"insideLeft\",\n                style: { textAnchor: \"middle\" },\n              }}\n              tickLine={false}\n              tickMargin={10}\n            />\n            <ChartTooltip\n              content={<ChartTooltipContent indicator=\"line\" />}\n              cursor={false}\n            />\n            <RechartsBar dataKey=\"value\" radius={8} />\n          </RechartsBarChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":["c","_c","Card","CardContent","CardDescription","CardHeader","CardTitle","ChartContainer","ChartTooltip","ChartTooltipContent","CartesianGrid","Bar","RechartsBar","BarChart","RechartsBarChart","XAxis","YAxis","HistogramChart","t0","$","$i","Symbol","for","title","description","data","chartConfig","yAxisLabel","t1","t2","t3","t4","t5","t6","textAnchor","t7","value","angle","position","style","t8","t9","t10","t11","t12"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 12388, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/three/D%3A/github/nakafa.com-main/packages/design-system/components/three/triangle.tsx"],"sourcesContent":["\"use client\";\n\nimport { Instance, Instances, Line, Text } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { COLORS } from \"@repo/design-system/lib/color\";\nimport { useTheme } from \"next-themes\";\nimport { useMemo, useRef } from \"react\";\nimport { type Group, MeshBasicMaterial, SphereGeometry, Vector3 } from \"three\";\nimport { FONT_PATH, MONO_FONT_PATH, ORIGIN_COLOR } from \"./_data\";\n\n// Pre-calculate common values\nconst SPHERE_SEGMENTS = 8; // Reduced from 16\nconst ARC_SEGMENTS = 20; // Reduced from 30\n\n// Angle and Quadrant constants\nconst DEGREES_IN_HALF_CIRCLE = 180;\nconst DEGREES_TO_RADIANS = Math.PI / DEGREES_IN_HALF_CIRCLE;\nconst DEGREES_IN_QUADRANT = 90;\nconst QUADRANTS_IN_CIRCLE = 4;\n\n// Sizing and scaling constants\nconst BASE_FONT_SIZE = 0.12;\nconst FONT_SIZE_SCALE_FACTOR = 0.12;\nconst BASE_VERTEX_SIZE = 0.05;\nconst VERTEX_SIZE_SCALE_FACTOR = 0.05;\nconst ARC_RADIUS_SCALE_FACTOR = 0.2;\nconst ANGLE_LABEL_DISTANCE_SCALE_FACTOR = 0.3;\nconst MIN_SCALE_FACTOR = 1;\n\n// Label offset multipliers\nconst LABEL_OFFSET_ADJACENT_Y = 1.5;\nconst LABEL_OFFSET_OPPOSITE_X = 4;\nconst LABEL_OFFSET_HYPOTENUSE_Y = 2;\nconst ANGLE_LABEL_POSITION_ADJUSTMENT = 0.5;\n\n// Quadrant identifiers\nconst Q1 = 1;\nconst Q2 = 2;\nconst Q3 = 3;\nconst Q4 = 4;\n\ntype Props = {\n  /** Angle in degrees */\n  angle?: number;\n  /** Size of the triangle (scale factor) */\n  size?: number;\n  /** Labels for the triangle */\n  labels?: {\n    opposite: string;\n    adjacent: string;\n    hypotenuse: string;\n  };\n  /** Use mono font for the labels */\n  useMonoFont?: boolean;\n  /** Additional props */\n  [key: string]: unknown;\n};\n\n// Singleton geometry instances for reuse\nlet sharedSphereGeometry: SphereGeometry | null = null;\nconst sharedMaterials: Map<string, MeshBasicMaterial> = new Map();\n\nfunction getSharedSphereGeometry() {\n  if (!sharedSphereGeometry) {\n    sharedSphereGeometry = new SphereGeometry(\n      1,\n      SPHERE_SEGMENTS,\n      SPHERE_SEGMENTS\n    );\n  }\n  return sharedSphereGeometry;\n}\n\nfunction getSharedMaterial(color: string) {\n  if (!sharedMaterials.has(color)) {\n    sharedMaterials.set(color, new MeshBasicMaterial({ color }));\n  }\n  const material = sharedMaterials.get(color);\n  if (!material) {\n    throw new Error(`Material not found for color: ${color}`);\n  }\n  return material;\n}\n\nexport function Triangle({\n  angle = 45,\n  size = 1,\n  labels = {\n    opposite: \"Opposite\",\n    adjacent: \"Adjacent\",\n    hypotenuse: \"Hypotenuse\",\n  },\n  useMonoFont = true,\n  ...props\n}: Props) {\n  const { resolvedTheme } = useTheme();\n  const groupRef = useRef<Group>(null);\n\n  // Convert angle to radians and calculate the points\n  const angleInRadians = angle * DEGREES_TO_RADIANS;\n\n  // Identify which quadrant the angle is in\n  const quadrant =\n    (Math.floor(angle / DEGREES_IN_QUADRANT) % QUADRANTS_IN_CIRCLE) + Q1;\n\n  // Create a right triangle with sides of variable length based on the angle\n  const hypotenuse = size; // Scale the hypotenuse by the size parameter\n  const adjacent = Math.cos(angleInRadians) * hypotenuse;\n  const opposite = Math.sin(angleInRadians) * hypotenuse;\n\n  // Font path based on the useMonoFont setting\n  const fontPath = useMonoFont ? MONO_FONT_PATH : FONT_PATH;\n\n  // Scale the font size based on the triangle size\n  const fontSize =\n    BASE_FONT_SIZE * Math.max(MIN_SCALE_FACTOR, size * FONT_SIZE_SCALE_FACTOR);\n\n  // Colors based on theme\n  const baseColor =\n    resolvedTheme === \"dark\" ? ORIGIN_COLOR.LIGHT : ORIGIN_COLOR.DARK;\n\n  // Scale the vertex points based on triangle size\n  const vertexSize =\n    BASE_VERTEX_SIZE *\n    Math.max(MIN_SCALE_FACTOR, size * VERTEX_SIZE_SCALE_FACTOR);\n\n  // Scale the angle arc radius based on triangle size - make it more proportional\n  const arcRadius = ARC_RADIUS_SCALE_FACTOR * Math.sqrt(size);\n  const angleLabelDistance =\n    ANGLE_LABEL_DISTANCE_SCALE_FACTOR * Math.sqrt(size);\n\n  // Memoize triangle side segments\n  const triangleSideLines = useMemo(() => {\n    const origin = new Vector3(0, 0, 0);\n    const adj = new Vector3(adjacent, 0, 0);\n    const opp = new Vector3(adjacent, opposite, 0);\n    return [\n      [origin, adj],\n      [adj, opp],\n      [opp, origin],\n    ];\n  }, [adjacent, opposite]);\n\n  // Memoize the angle arc points with fewer segments for performance\n  const triangleArcPoints = useMemo(() => {\n    const pts: Vector3[] = [];\n    for (let i = 0; i <= ARC_SEGMENTS; i++) {\n      const a = (i / ARC_SEGMENTS) * angleInRadians;\n      pts.push(\n        new Vector3(Math.cos(a) * arcRadius, Math.sin(a) * arcRadius, 0)\n      );\n    }\n    return pts;\n  }, [angleInRadians, arcRadius]);\n\n  // Vertices for instancing with semantic labels\n  const triangleVertices = useMemo(() => {\n    const vertices = triangleSideLines.map((pts) => pts[0]);\n    return [\n      { position: vertices[0], key: \"origin\" },\n      { position: vertices[1], key: \"adjacent\" },\n      { position: vertices[2], key: \"opposite\" },\n    ];\n  }, [triangleSideLines]);\n\n  // Use shared geometry and material\n  const sphereGeo = getSharedSphereGeometry();\n  const sphereMat = getSharedMaterial(baseColor);\n\n  // Determine label positions based on quadrant and angle\n  const labelPositions = useMemo(() => {\n    // Calculate midpoints for labels\n    const adjacentMidpoint = new Vector3(adjacent / 2, 0, 0);\n    const oppositeMidpoint = new Vector3(adjacent, opposite / 2, 0);\n    const hypotenuseMidpoint = new Vector3(adjacent / 2, opposite / 2, 0);\n\n    const adjacentLabelPos = new Vector3();\n    const oppositeLabelPos = new Vector3();\n    const hypotenuseLabelPos = new Vector3();\n\n    // Combined switch statement for all label positions based on quadrant\n    switch (quadrant) {\n      case Q1: {\n        // 0-90 degrees\n        adjacentLabelPos\n          .copy(adjacentMidpoint)\n          .add(new Vector3(0, -fontSize * LABEL_OFFSET_ADJACENT_Y, 0));\n        oppositeLabelPos\n          .copy(oppositeMidpoint)\n          .add(new Vector3(fontSize * LABEL_OFFSET_OPPOSITE_X, 0, 0));\n        hypotenuseLabelPos\n          .copy(hypotenuseMidpoint)\n          .add(new Vector3(0, fontSize * LABEL_OFFSET_HYPOTENUSE_Y, 0));\n        break;\n      }\n\n      case Q2: {\n        // 90-180 degrees\n        adjacentLabelPos\n          .copy(adjacentMidpoint)\n          .add(new Vector3(0, -fontSize * LABEL_OFFSET_ADJACENT_Y, 0));\n        oppositeLabelPos\n          .copy(oppositeMidpoint)\n          .add(new Vector3(-fontSize * LABEL_OFFSET_OPPOSITE_X, 0, 0));\n        hypotenuseLabelPos\n          .copy(hypotenuseMidpoint)\n          .add(new Vector3(0, fontSize * LABEL_OFFSET_HYPOTENUSE_Y, 0));\n        break;\n      }\n\n      case Q3: {\n        // 180-270 degrees\n        adjacentLabelPos\n          .copy(adjacentMidpoint)\n          .add(new Vector3(0, fontSize * LABEL_OFFSET_ADJACENT_Y, 0));\n        oppositeLabelPos\n          .copy(oppositeMidpoint)\n          .add(new Vector3(-fontSize * LABEL_OFFSET_OPPOSITE_X, 0, 0));\n        hypotenuseLabelPos\n          .copy(hypotenuseMidpoint)\n          .add(new Vector3(0, -fontSize * LABEL_OFFSET_HYPOTENUSE_Y, 0));\n        break;\n      }\n\n      case Q4: {\n        // 270-360 degrees\n        adjacentLabelPos\n          .copy(adjacentMidpoint)\n          .add(new Vector3(0, fontSize * LABEL_OFFSET_ADJACENT_Y, 0));\n        oppositeLabelPos\n          .copy(oppositeMidpoint)\n          .add(new Vector3(fontSize * LABEL_OFFSET_OPPOSITE_X, 0, 0));\n        hypotenuseLabelPos\n          .copy(hypotenuseMidpoint)\n          .add(new Vector3(0, -fontSize * LABEL_OFFSET_HYPOTENUSE_Y, 0));\n        break;\n      }\n\n      default:\n        break;\n    }\n\n    return { adjacentLabelPos, oppositeLabelPos, hypotenuseLabelPos };\n  }, [quadrant, adjacent, opposite, fontSize]);\n\n  // Calculate hypotenuse rotation once\n  const hypotenuseLabelRotation = useMemo(() => {\n    switch (quadrant) {\n      case Q1:\n        return Math.atan2(opposite, adjacent);\n      case Q2:\n      case Q3:\n        return Math.atan2(opposite, adjacent) + Math.PI;\n      default:\n        return Math.atan2(opposite, adjacent);\n    }\n  }, [quadrant, opposite, adjacent]);\n\n  // Use frustum culling\n  useFrame(() => {\n    if (groupRef.current) {\n      groupRef.current.frustumCulled = true;\n    }\n  });\n\n  // Line colors and semantic keys for triangle sides\n  const sideConfig = [\n    { color: COLORS.CYAN, key: \"adjacent\" },\n    { color: COLORS.ORANGE, key: \"opposite\" },\n    { color: COLORS.ROSE, key: \"hypotenuse\" },\n  ];\n\n  return (\n    <group ref={groupRef} {...props}>\n      {/* Draw the triangle sides - optimized with single color array access */}\n      {triangleSideLines.map((pts, i) => (\n        <Line\n          color={sideConfig[i].color}\n          frustumCulled\n          key={sideConfig[i].key}\n          lineWidth={2}\n          points={pts}\n        />\n      ))}\n\n      {/* Angle arc */}\n      <Line\n        color={COLORS.VIOLET}\n        frustumCulled\n        lineWidth={2}\n        points={triangleArcPoints}\n      />\n\n      {/* Angle label */}\n      <Text\n        anchorX=\"center\"\n        anchorY=\"middle\"\n        color={COLORS.VIOLET}\n        font={fontPath}\n        fontSize={fontSize}\n        frustumCulled\n        position={[\n          Math.cos(angleInRadians / 2) * angleLabelDistance +\n            (angle > DEGREES_IN_HALF_CIRCLE ? -1 : 1) *\n              fontSize *\n              ANGLE_LABEL_POSITION_ADJUSTMENT,\n          Math.sin(angleInRadians / 2) * angleLabelDistance,\n          0,\n        ]}\n      >\n        {`${angle}°`}\n      </Text>\n\n      {/* Side labels */}\n      <Text\n        anchorX=\"center\"\n        color={COLORS.CYAN}\n        font={fontPath}\n        fontSize={fontSize}\n        frustumCulled\n        position={labelPositions.adjacentLabelPos}\n      >\n        {labels.adjacent}\n      </Text>\n\n      <Text\n        anchorY=\"middle\"\n        color={COLORS.ORANGE}\n        font={fontPath}\n        fontSize={fontSize}\n        frustumCulled\n        position={labelPositions.oppositeLabelPos}\n      >\n        {labels.opposite}\n      </Text>\n\n      <Text\n        anchorX=\"center\"\n        anchorY=\"middle\"\n        color={COLORS.ROSE}\n        font={fontPath}\n        fontSize={fontSize}\n        frustumCulled\n        position={labelPositions.hypotenuseLabelPos}\n        rotation={[0, 0, hypotenuseLabelRotation]}\n      >\n        {labels.hypotenuse}\n      </Text>\n\n      {/* Points at vertices - using instanced rendering */}\n      <Instances\n        count={triangleVertices.length}\n        frustumCulled\n        geometry={sphereGeo}\n        material={sphereMat}\n        visible\n      >\n        {triangleVertices.map((vertex) => (\n          <Instance\n            key={vertex.key}\n            position={[vertex.position.x, vertex.position.y, vertex.position.z]}\n            scale={vertexSize}\n          />\n        ))}\n      </Instances>\n    </group>\n  );\n}\n"],"names":["c","_c","Instance","Instances","Line","Text","useFrame","COLORS","useTheme","useMemo","useRef","MeshBasicMaterial","SphereGeometry","Vector3","FONT_PATH","MONO_FONT_PATH","ORIGIN_COLOR","SPHERE_SEGMENTS","ARC_SEGMENTS","DEGREES_IN_HALF_CIRCLE","DEGREES_TO_RADIANS","Math","PI","DEGREES_IN_QUADRANT","QUADRANTS_IN_CIRCLE","BASE_FONT_SIZE","FONT_SIZE_SCALE_FACTOR","BASE_VERTEX_SIZE","VERTEX_SIZE_SCALE_FACTOR","ARC_RADIUS_SCALE_FACTOR","ANGLE_LABEL_DISTANCE_SCALE_FACTOR","MIN_SCALE_FACTOR","LABEL_OFFSET_ADJACENT_Y","LABEL_OFFSET_OPPOSITE_X","LABEL_OFFSET_HYPOTENUSE_Y","ANGLE_LABEL_POSITION_ADJUSTMENT","Q1","Q2","Q3","Q4","sharedSphereGeometry","sharedMaterials","Map","getSharedSphereGeometry","getSharedMaterial","color","has","set","material","get","Error","Triangle","t0","$","$i","Symbol","for","props","t1","t2","t3","t4","angle","size","labels","useMonoFont","undefined","t5","opposite","adjacent","hypotenuse","resolvedTheme","groupRef","angleInRadians","quadrant","floor","cos","sin","fontPath","fontSize","max","baseColor","LIGHT","DARK","vertexSize","arcRadius","sqrt","angleLabelDistance","t6","origin","t7","adj","t8","opp","t9","t10","t11","t12","triangleSideLines","pts","i","a","push","triangleArcPoints","t13","map","_temp","vertices","t14","position","key","t15","t16","t17","triangleVertices","t18","sphereGeo","t19","sphereMat","t20","adjacentLabelPos","hypotenuseLabelPos","oppositeLabelPos","adjacentMidpoint","oppositeMidpoint","hypotenuseMidpoint","bb0","copy","add","t21","labelPositions","t22","bb1","t23","atan2","hypotenuseLabelRotation","current","frustumCulled","t24","CYAN","ORANGE","ROSE","sideConfig","t25","pts_1","i_0","t26","VIOLET","t27","t28","t29","t30","t31","t32","t33","t34","t35","t36","length","t37","vertex","x","y","z","t38","t39","pts_0"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 13075, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/lib/math.ts"],"sourcesContent":["const DEGREES_IN_HALF_CIRCLE = 180;\nconst DEGREES_TO_RADIANS = Math.PI / DEGREES_IN_HALF_CIRCLE;\nconst EPSILON = 1e-10;\n\nexport function getRadians(angle: number) {\n  return angle * DEGREES_TO_RADIANS;\n}\n\nexport function getDegrees(angle: number) {\n  return angle / DEGREES_TO_RADIANS;\n}\n\nexport function getSin(angle: number) {\n  return Math.sin(getRadians(angle));\n}\n\nexport function getCos(angle: number) {\n  return Math.cos(getRadians(angle));\n}\n\n/**\n * Get the tangent of an angle\n * @param angle - The angle in degrees\n * @returns The tangent of the angle or positive infinity if the angle is 90° or 270°\n */\nexport function getTan(angle: number) {\n  // Check if cos is close to zero to handle tan(90°), tan(270°), etc.\n  return Math.abs(Math.cos(getRadians(angle))) < EPSILON\n    ? Number.POSITIVE_INFINITY\n    : Math.tan(getRadians(angle));\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA,MAAM,yBAAyB;AAC/B,MAAM,qBAAqB,KAAK,EAAE,GAAG;AACrC,MAAM,UAAU;AAET,SAAS,WAAW,KAAa;IACtC,OAAO,QAAQ;AACjB;AAEO,SAAS,WAAW,KAAa;IACtC,OAAO,QAAQ;AACjB;AAEO,SAAS,OAAO,KAAa;IAClC,OAAO,KAAK,GAAG,CAAC,WAAW;AAC7B;AAEO,SAAS,OAAO,KAAa;IAClC,OAAO,KAAK,GAAG,CAAC,WAAW;AAC7B;AAOO,SAAS,OAAO,KAAa;IAClC,oEAAoE;IACpE,OAAO,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,WAAW,WAAW,UAC3C,OAAO,iBAAiB,GACxB,KAAK,GAAG,CAAC,WAAW;AAC1B","debugId":null}},
    {"offset": {"line": 13113, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/contents/D%3A/github/nakafa.com-main/packages/design-system/components/contents/triangle.tsx"],"sourcesContent":["\"use client\";\n\nimport { CoordinateSystem } from \"@repo/design-system/components/three/coordinate-system\";\nimport { Triangle as Triangle3D } from \"@repo/design-system/components/three/triangle\";\nimport { Badge } from \"@repo/design-system/components/ui/badge\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport { Label as LabelUi } from \"@repo/design-system/components/ui/label\";\nimport { Separator } from \"@repo/design-system/components/ui/separator\";\nimport {\n  getCos,\n  getRadians,\n  getSin,\n  getTan,\n} from \"@repo/design-system/lib/math\";\nimport { MinusIcon, PlusIcon } from \"lucide-react\";\nimport { useTranslations } from \"next-intl\";\nimport type { ReactNode } from \"react\";\nimport { useState } from \"react\";\nimport {\n  Button,\n  Group,\n  Input,\n  Label,\n  NumberField,\n} from \"react-aria-components\";\n\nconst CAMERA_Z_POSITION = 4;\n\ntype Props = {\n  title: ReactNode;\n  description: ReactNode;\n  angle?: number;\n  size?: number;\n  labels?: {\n    opposite: string;\n    adjacent: string;\n    hypotenuse: string;\n  };\n};\n\nexport function Triangle({\n  title,\n  description,\n  angle = 45,\n  size = 2,\n  labels,\n}: Props) {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <Content angle={angle} labels={labels} size={size} />\n    </Card>\n  );\n}\n\nfunction Content({\n  angle,\n  size,\n  labels,\n}: {\n  angle: number;\n  size: number;\n  labels?: Props[\"labels\"];\n}) {\n  const t = useTranslations(\"Common\");\n  const [angleValue, setAngleValue] = useState(angle);\n\n  return (\n    <>\n      <CardContent>\n        <CoordinateSystem\n          cameraPosition={[0, 0, CAMERA_Z_POSITION]}\n          showOrigin={false}\n          showZAxis={false}\n        >\n          <Triangle3D angle={angleValue} labels={labels} size={size} />\n        </CoordinateSystem>\n      </CardContent>\n      <CardFooter className=\"border-t px-0\">\n        <div className=\"flex w-full flex-col gap-4\">\n          <div className=\"flex flex-wrap items-center justify-center gap-2 px-6\">\n            <Badge className=\"font-mono\" variant=\"outline\">\n              Sin ({angleValue}°) = {getSin(angleValue).toFixed(2)}\n            </Badge>\n            <Badge className=\"font-mono\" variant=\"outline\">\n              Cos ({angleValue}°) = {getCos(angleValue).toFixed(2)}\n            </Badge>\n            <Badge className=\"font-mono\" variant=\"outline\">\n              Tan ({angleValue}°) ={\" \"}\n              {Number.isFinite(getTan(angleValue))\n                ? getTan(angleValue).toFixed(2)\n                : t(\"undefined\")}\n            </Badge>\n          </div>\n\n          <Separator />\n\n          <div className=\"mx-auto flex w-full max-w-md flex-col gap-4 px-6\">\n            <div className=\"flex items-center gap-2\">\n              <LabelUi htmlFor=\"angle\">\n                <Badge className=\"font-mono\" variant=\"outline\">\n                  {angleValue}°\n                </Badge>\n              </LabelUi>\n              <Badge className=\"font-mono\" variant=\"outline\">\n                {getRadians(angleValue).toFixed(2)} {t(\"radian\")}\n              </Badge>\n            </div>\n\n            <NumberField\n              formatOptions={{\n                localeMatcher: \"best fit\",\n              }}\n              onChange={setAngleValue}\n              value={angleValue}\n            >\n              <Label className=\"sr-only\">Angle</Label>\n              <Group className=\"relative inline-flex h-9 w-full items-center overflow-hidden whitespace-nowrap rounded-md border border-input text-sm shadow-xs outline-none transition-[color,box-shadow] data-focus-within:border-ring data-disabled:opacity-50 data-focus-within:ring-[3px] data-focus-within:ring-ring/50 data-focus-within:has-aria-invalid:border-destructive data-focus-within:has-aria-invalid:ring-destructive/20 dark:data-focus-within:has-aria-invalid:ring-destructive/40\">\n                <Button\n                  className=\"-ms-px flex aspect-square h-[inherit] cursor-pointer items-center justify-center rounded-s-md border border-input bg-background text-muted-foreground/80 text-sm transition-[color,box-shadow] hover:bg-accent hover:text-foreground disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50\"\n                  slot=\"decrement\"\n                >\n                  <MinusIcon aria-hidden=\"true\" className=\"size-4\" />\n                </Button>\n                <Input className=\"w-full grow bg-background px-3 py-2 text-center font-mono text-foreground tabular-nums\" />\n                <Button\n                  className=\"-me-px flex aspect-square h-[inherit] cursor-pointer items-center justify-center rounded-e-md border border-input bg-background text-muted-foreground/80 text-sm transition-[color,box-shadow] hover:bg-accent hover:text-foreground disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50\"\n                  slot=\"increment\"\n                >\n                  <PlusIcon aria-hidden=\"true\" className=\"size-4\" />\n                </Button>\n              </Group>\n            </NumberField>\n          </div>\n        </div>\n      </CardFooter>\n    </>\n  );\n}\n"],"names":["c","_c","CoordinateSystem","Triangle","Triangle3D","Badge","Card","CardContent","CardDescription","CardFooter","CardHeader","CardTitle","Label","LabelUi","Separator","getCos","getRadians","getSin","getTan","MinusIcon","PlusIcon","useTranslations","useState","Button","Group","Input","NumberField","CAMERA_Z_POSITION","t0","$","$i","Symbol","for","title","description","angle","t1","size","t2","labels","undefined","t3","t4","t5","t6","t7","Content","t","angleValue","setAngleValue","toFixed","Number","isFinite","t8","t9","t10","t11","t12","t13","t14","t15","t16","localeMatcher","t17","t18","t19","t20","t21","t22","t23","t24"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 13695, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/three/D%3A/github/nakafa.com-main/packages/design-system/components/three/unit-circle.tsx"],"sourcesContent":["\"use client\";\n\nimport { Line, Text } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { COLORS } from \"@repo/design-system/lib/color\";\nimport {\n  getCos,\n  getRadians,\n  getSin,\n  getTan,\n} from \"@repo/design-system/lib/math\";\nimport { useTranslations } from \"next-intl\";\nimport { useTheme } from \"next-themes\";\nimport { useMemo, useRef } from \"react\";\nimport { type Group, MeshBasicMaterial, SphereGeometry, Vector3 } from \"three\";\nimport { FONT_PATH, MONO_FONT_PATH, ORIGIN_COLOR } from \"./_data\";\n\ntype Props = {\n  /** Angle in degrees */\n  angle?: number;\n  /** Show labels for trig functions */\n  showLabels?: boolean;\n  /** Display mode for values */\n  displayMode?: \"decimal\" | \"exact\";\n  /** Precision for decimal values */\n  precision?: number;\n  /** Use mono font for the labels */\n  useMonoFont?: boolean;\n  /** Additional props */\n  [key: string]: unknown;\n};\n\n// Optimized settings for performance\nconst UNIT_CIRCLE_SEGMENTS = 48; // Reduced from 64\nconst UNIT_ARC_SEGMENTS = 16; // Reduced from 24\nconst SPHERE_SEGMENTS = 8; // Low poly sphere\nconst SPHERE_RADIUS = 0.05;\nconst ARC_RADIUS = 0.3;\nconst LABEL_FONT_SIZE = 0.12;\nconst EPSILON = 1e-10;\n\n// Label positioning constants\nconst ANGLE_LABEL_X_FACTOR = 0.5;\nconst ANGLE_LABEL_Y_FACTOR = 0.4;\nconst COS_LABEL_Y_OFFSET = -0.2;\nconst SIN_LABEL_X_OFFSET = 0.2;\nconst TAN_LABEL_POSITION = 1.1;\nconst THREE = 3;\nconst SQRT_3 = Math.sqrt(THREE);\nconst TWO = 2;\nconst FOUR = 4;\nconst ONE = 1;\n\n// Pre-calculate static circle points once\nconst STATIC_CIRCLE_POINTS: Vector3[] = (() => {\n  const pts: Vector3[] = [];\n  for (let i = 0; i <= UNIT_CIRCLE_SEGMENTS; i++) {\n    const a = (i / UNIT_CIRCLE_SEGMENTS) * Math.PI * 2;\n    pts.push(new Vector3(Math.cos(a), Math.sin(a), 0));\n  }\n  return pts;\n})();\n\n// Shared geometry instances\nlet sharedSphereGeometry: SphereGeometry | null = null;\nconst sharedMaterials: Map<string, MeshBasicMaterial> = new Map();\n\nfunction getSharedSphereGeometry() {\n  if (!sharedSphereGeometry) {\n    sharedSphereGeometry = new SphereGeometry(\n      SPHERE_RADIUS,\n      SPHERE_SEGMENTS,\n      SPHERE_SEGMENTS\n    );\n  }\n  return sharedSphereGeometry;\n}\n\nfunction getSharedMaterial(color: string) {\n  if (!sharedMaterials.has(color)) {\n    sharedMaterials.set(color, new MeshBasicMaterial({ color }));\n  }\n  const material = sharedMaterials.get(color);\n  if (!material) {\n    throw new Error(`Material not found for color: ${color}`);\n  }\n  return material;\n}\n\nexport function UnitCircle({\n  angle = 45,\n  showLabels = true,\n  displayMode = \"exact\",\n  precision = 2,\n  useMonoFont = true,\n  ...props\n}: Props) {\n  const t = useTranslations(\"Common\");\n  const { resolvedTheme } = useTheme();\n  const groupRef = useRef<Group>(null);\n\n  const angleInRadians = getRadians(angle);\n  const sin = getSin(angle);\n  const cos = getCos(angle);\n  const tan = getTan(angle);\n\n  // Use precomputed circle outline points (static)\n  const circlePoints = STATIC_CIRCLE_POINTS;\n\n  // Memoize angle arc points with reduced segments\n  const arcPoints = useMemo(() => {\n    const pts: Vector3[] = [];\n    for (let i = 0; i <= UNIT_ARC_SEGMENTS; i++) {\n      const a = (i / UNIT_ARC_SEGMENTS) * angleInRadians;\n      pts.push(\n        new Vector3(Math.cos(a) * ARC_RADIUS, Math.sin(a) * ARC_RADIUS, 0)\n      );\n    }\n    return pts;\n  }, [angleInRadians]);\n\n  // Format values according to display mode - memoize the function\n  const formatValue = useMemo(() => {\n    return (value: number) => {\n      if (!Number.isFinite(value)) {\n        return t(\"undefined\");\n      }\n      if (Math.abs(value) < EPSILON) {\n        return \"0\";\n      }\n\n      if (displayMode === \"decimal\") {\n        return value.toFixed(precision);\n      }\n\n      const absValue = Math.abs(value);\n      const sign = value < 0 ? \"-\" : \"\";\n\n      // Common trig values lookup table for performance\n      const commonValues = [\n        { value: ONE / TWO, display: \"1/2\" },\n        { value: Math.SQRT1_2, display: \"√2/2\" },\n        { value: SQRT_3 / TWO, display: \"√3/2\" },\n        { value: ONE, display: \"1\" },\n        { value: SQRT_3, display: \"√3\" },\n        { value: SQRT_3 / THREE, display: \"√3/3\" },\n        { value: Math.SQRT2, display: \"√2\" },\n        { value: ONE / FOUR, display: \"1/4\" },\n        { value: THREE / FOUR, display: \"3/4\" },\n      ];\n\n      for (const { value: v, display } of commonValues) {\n        if (Math.abs(absValue - v) < EPSILON) {\n          return `${sign}${display}`;\n        }\n      }\n\n      return value.toFixed(precision);\n    };\n  }, [displayMode, precision, t]);\n\n  // Memoize labels\n  const labels = useMemo(\n    () => ({\n      sin: `sin(${angle}°) = ${formatValue(sin)}`,\n      cos: `cos(${angle}°) = ${formatValue(cos)}`,\n      tan: `tan(${angle}°) = ${formatValue(tan)}`,\n    }),\n    [angle, sin, cos, tan, formatValue]\n  );\n\n  const fontPath = useMonoFont ? MONO_FONT_PATH : FONT_PATH;\n\n  // Colors based on theme\n  const circleColor =\n    resolvedTheme === \"dark\" ? ORIGIN_COLOR.LIGHT : ORIGIN_COLOR.DARK;\n\n  // Pre-calculate positions\n  const pointPosition = useMemo(() => new Vector3(cos, sin, 0), [cos, sin]);\n  const origin = useMemo(() => new Vector3(0, 0, 0), []);\n  const cosPoint = useMemo(() => new Vector3(cos, 0, 0), [cos]);\n\n  // Line segments for better performance\n  const lineSegments = useMemo(\n    () => ({\n      radius: [origin, pointPosition],\n      sine: [cosPoint, pointPosition],\n      cosine: [origin, cosPoint],\n    }),\n    [origin, pointPosition, cosPoint]\n  );\n\n  // Use frustum culling\n  useFrame(() => {\n    if (groupRef.current) {\n      groupRef.current.frustumCulled = true;\n    }\n  });\n\n  // Get shared geometry and material\n  const sphereGeometry = getSharedSphereGeometry();\n  const sphereMaterial = getSharedMaterial(circleColor);\n\n  return (\n    <group ref={groupRef} {...props}>\n      {/* Unit Circle (XY plane) */}\n      <group rotation={[0, 0, 0]}>\n        {/* Circle outline */}\n        <Line\n          color={circleColor}\n          frustumCulled\n          lineWidth={2}\n          points={circlePoints}\n        />\n\n        {/* Angle arc */}\n        <Line\n          color={COLORS.VIOLET}\n          frustumCulled\n          lineWidth={2}\n          points={arcPoints}\n        />\n\n        {/* Angle label */}\n        <Text\n          anchorX=\"center\"\n          anchorY=\"middle\"\n          color={COLORS.VIOLET}\n          font={fontPath}\n          fontSize={LABEL_FONT_SIZE}\n          frustumCulled\n          position={[\n            Math.cos(angleInRadians / 2) * ANGLE_LABEL_X_FACTOR,\n            Math.sin(angleInRadians / 2) * ANGLE_LABEL_Y_FACTOR,\n            0,\n          ]}\n          visible={showLabels}\n        >\n          {`${angle}°`}\n        </Text>\n\n        {/* Point on circle - using shared geometry */}\n        <mesh\n          frustumCulled\n          geometry={sphereGeometry}\n          material={sphereMaterial}\n          position={pointPosition}\n        />\n\n        {/* Line from origin to point */}\n        <Line\n          color={COLORS.ROSE}\n          frustumCulled\n          lineWidth={2}\n          points={lineSegments.radius}\n        />\n\n        {/* Sine line (vertical) */}\n        <Line\n          color={COLORS.ORANGE}\n          frustumCulled\n          lineWidth={2}\n          points={lineSegments.sine}\n        />\n\n        {/* Cosine line (horizontal) */}\n        <Line\n          color={COLORS.CYAN}\n          frustumCulled\n          lineWidth={2}\n          points={lineSegments.cosine}\n        />\n\n        {/* Trig value labels - only render if visible */}\n        {showLabels && (\n          <>\n            <Text\n              anchorX=\"center\"\n              color={COLORS.CYAN}\n              font={fontPath}\n              fontSize={LABEL_FONT_SIZE}\n              frustumCulled\n              position={[cos / 2, COS_LABEL_Y_OFFSET, 0]}\n            >\n              {labels.cos}\n            </Text>\n            <Text\n              anchorX=\"left\"\n              anchorY=\"middle\"\n              color={COLORS.ORANGE}\n              font={fontPath}\n              fontSize={LABEL_FONT_SIZE}\n              frustumCulled\n              position={[cos + SIN_LABEL_X_OFFSET, sin / 2, 0]}\n            >\n              {labels.sin}\n            </Text>\n            <Text\n              color={COLORS.ROSE}\n              font={fontPath}\n              fontSize={LABEL_FONT_SIZE}\n              frustumCulled\n              position={[TAN_LABEL_POSITION, TAN_LABEL_POSITION, 0]}\n            >\n              {labels.tan}\n            </Text>\n          </>\n        )}\n      </group>\n    </group>\n  );\n}\n"],"names":["Line","Text","useFrame","COLORS","getCos","getRadians","getSin","getTan","useTranslations","useTheme","useMemo","useRef","MeshBasicMaterial","SphereGeometry","Vector3","FONT_PATH","MONO_FONT_PATH","ORIGIN_COLOR","UNIT_CIRCLE_SEGMENTS","UNIT_ARC_SEGMENTS","SPHERE_SEGMENTS","SPHERE_RADIUS","ARC_RADIUS","LABEL_FONT_SIZE","EPSILON","ANGLE_LABEL_X_FACTOR","ANGLE_LABEL_Y_FACTOR","COS_LABEL_Y_OFFSET","SIN_LABEL_X_OFFSET","TAN_LABEL_POSITION","THREE","SQRT_3","Math","sqrt","TWO","FOUR","ONE","STATIC_CIRCLE_POINTS","pts","i","a","PI","push","cos","sin","sharedSphereGeometry","sharedMaterials","Map","getSharedSphereGeometry","getSharedMaterial","color","has","set","material","get","Error","UnitCircle","angle","showLabels","displayMode","precision","useMonoFont","props","t","resolvedTheme","groupRef","angleInRadians","tan","circlePoints","arcPoints","formatValue","value","Number","isFinite","abs","toFixed","absValue","sign","commonValues","display","SQRT1_2","SQRT2","v","labels","fontPath","circleColor","LIGHT","DARK","pointPosition","origin","cosPoint","lineSegments","radius","sine","cosine","current","frustumCulled","sphereGeometry","sphereMaterial","VIOLET","ROSE","ORANGE","CYAN"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 14104, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/contents/D%3A/github/nakafa.com-main/packages/design-system/components/contents/unit-circle.tsx"],"sourcesContent":["\"use client\";\n\nimport { CoordinateSystem } from \"@repo/design-system/components/three/coordinate-system\";\nimport { UnitCircle as UnitCircle3D } from \"@repo/design-system/components/three/unit-circle\";\nimport { Badge } from \"@repo/design-system/components/ui/badge\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport { Label as LabelUi } from \"@repo/design-system/components/ui/label\";\nimport { Separator } from \"@repo/design-system/components/ui/separator\";\nimport {\n  getCos,\n  getRadians,\n  getSin,\n  getTan,\n} from \"@repo/design-system/lib/math\";\nimport { MinusIcon, PlusIcon } from \"lucide-react\";\nimport { useTranslations } from \"next-intl\";\nimport { type ReactNode, useState } from \"react\";\nimport {\n  Button,\n  Group,\n  Input,\n  Label,\n  NumberField,\n} from \"react-aria-components\";\n\nconst CAMERA_Z_POSITION = 4;\n\ntype Props = {\n  title: ReactNode;\n  description: ReactNode;\n  angle?: number;\n};\n\nexport function UnitCircle({ title, description, angle = 45 }: Props) {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <Content angle={angle} />\n    </Card>\n  );\n}\n\nfunction Content({ angle }: { angle: number }) {\n  const t = useTranslations(\"Common\");\n  const [angleValue, setAngleValue] = useState(angle);\n\n  return (\n    <>\n      <CardContent>\n        <CoordinateSystem\n          cameraPosition={[0, 0, CAMERA_Z_POSITION]}\n          showOrigin={false}\n          showZAxis={false}\n        >\n          <UnitCircle3D angle={angleValue} />\n        </CoordinateSystem>\n      </CardContent>\n      <CardFooter className=\"border-t px-0\">\n        <div className=\"flex w-full flex-col gap-4\">\n          <div className=\"flex flex-wrap items-center justify-center gap-2 px-6\">\n            <Badge className=\"font-mono\" variant=\"outline\">\n              Sin ({angleValue}°) = {getSin(angleValue).toFixed(2)}\n            </Badge>\n            <Badge className=\"font-mono\" variant=\"outline\">\n              Cos ({angleValue}°) = {getCos(angleValue).toFixed(2)}\n            </Badge>\n            <Badge className=\"font-mono\" variant=\"outline\">\n              Tan ({angleValue}°) ={\" \"}\n              {Number.isFinite(getTan(angleValue))\n                ? getTan(angleValue).toFixed(2)\n                : t(\"undefined\")}\n            </Badge>\n          </div>\n\n          <Separator />\n\n          <div className=\"mx-auto flex w-full max-w-md flex-col gap-4 px-6\">\n            <div className=\"flex items-center gap-2\">\n              <LabelUi htmlFor=\"angle\">\n                <Badge className=\"font-mono\" variant=\"outline\">\n                  {angleValue}°\n                </Badge>\n              </LabelUi>\n              <Badge className=\"font-mono\" variant=\"outline\">\n                {getRadians(angleValue).toFixed(2)} {t(\"radian\")}\n              </Badge>\n            </div>\n\n            <NumberField\n              formatOptions={{\n                localeMatcher: \"best fit\",\n              }}\n              onChange={setAngleValue}\n              value={angleValue}\n            >\n              <Label className=\"sr-only\">Angle</Label>\n              <Group className=\"relative inline-flex h-9 w-full items-center overflow-hidden whitespace-nowrap rounded-md border border-input text-sm shadow-xs outline-none transition-[color,box-shadow] data-focus-within:border-ring data-disabled:opacity-50 data-focus-within:ring-[3px] data-focus-within:ring-ring/50 data-focus-within:has-aria-invalid:border-destructive data-focus-within:has-aria-invalid:ring-destructive/20 dark:data-focus-within:has-aria-invalid:ring-destructive/40\">\n                <Button\n                  className=\"-ms-px flex aspect-square h-[inherit] cursor-pointer items-center justify-center rounded-s-md border border-input bg-background text-muted-foreground/80 text-sm transition-[color,box-shadow] hover:bg-accent hover:text-foreground disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50\"\n                  slot=\"decrement\"\n                >\n                  <MinusIcon aria-hidden=\"true\" className=\"size-4\" />\n                </Button>\n                <Input className=\"w-full grow bg-background px-3 py-2 text-center font-mono text-foreground tabular-nums\" />\n                <Button\n                  className=\"-me-px flex aspect-square h-[inherit] cursor-pointer items-center justify-center rounded-e-md border border-input bg-background text-muted-foreground/80 text-sm transition-[color,box-shadow] hover:bg-accent hover:text-foreground disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50\"\n                  slot=\"increment\"\n                >\n                  <PlusIcon aria-hidden=\"true\" className=\"size-4\" />\n                </Button>\n              </Group>\n            </NumberField>\n          </div>\n        </div>\n      </CardFooter>\n    </>\n  );\n}\n"],"names":["c","_c","CoordinateSystem","UnitCircle","UnitCircle3D","Badge","Card","CardContent","CardDescription","CardFooter","CardHeader","CardTitle","Label","LabelUi","Separator","getCos","getRadians","getSin","getTan","MinusIcon","PlusIcon","useTranslations","useState","Button","Group","Input","NumberField","CAMERA_Z_POSITION","t0","$","$i","Symbol","for","title","description","angle","t1","undefined","t2","t3","t4","t5","t6","Content","t","angleValue","setAngleValue","toFixed","t7","Number","isFinite","t8","t9","t10","t11","t12","t13","t14","t15","t16","localeMatcher","t17","t18","t19","t20","t21","t22","t23","t24"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 14677, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/three/D%3A/github/nakafa.com-main/packages/design-system/components/three/arrow-helper.tsx"],"sourcesContent":["\"use client\";\n\nimport { Line, Text } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { COLORS } from \"@repo/design-system/lib/color\";\nimport { useMemo, useRef } from \"react\";\nimport {\n  Color,\n  ConeGeometry,\n  type Group,\n  MeshBasicMaterial,\n  Quaternion,\n  Vector3,\n} from \"three\";\nimport { FONT_PATH, MONO_FONT_PATH } from \"./_data\";\n\nconst ARROW_SEGMENTS = 16;\nconst ARROW_SEGMENT_OFFSET = 0.2;\n\n// Shared geometry and material caches\nconst coneGeometryCache = new Map<string, ConeGeometry>();\nconst materialCache = new Map<string, MeshBasicMaterial>();\n\nfunction getSharedConeGeometry(size: number): ConeGeometry {\n  const key = `cone-${size}`;\n  if (!coneGeometryCache.has(key)) {\n    // Reduced segments from 32 to 16 for better performance\n    coneGeometryCache.set(\n      key,\n      new ConeGeometry(size / 2, size, ARROW_SEGMENTS, 1)\n    );\n  }\n  const geometry = coneGeometryCache.get(key);\n  if (!geometry) {\n    throw new Error(`Cone geometry not found for size: ${size}`);\n  }\n  return geometry;\n}\n\nfunction getSharedMaterial(color: string | Color): MeshBasicMaterial {\n  const colorKey = color instanceof Color ? color.getHexString() : color;\n  if (!materialCache.has(colorKey)) {\n    materialCache.set(\n      colorKey,\n      new MeshBasicMaterial({\n        color: color instanceof Color ? color : new Color(color),\n      })\n    );\n  }\n  const material = materialCache.get(colorKey);\n  if (!material) {\n    throw new Error(`Material not found for color: ${colorKey}`);\n  }\n  return material;\n}\n\ntype Props = {\n  /** Starting point of the vector [x, y, z] */\n  from?: [number, number, number];\n  /** End point of the vector [x, y, z] */\n  to: [number, number, number];\n  /** Color of the vector */\n  color?: string | Color;\n  /** Width of the vector line */\n  lineWidth?: number;\n  /** Show arrowhead */\n  showArrow?: boolean;\n  /** Size of the arrowhead */\n  arrowSize?: number;\n  /** Label for the vector */\n  label?: string;\n  /** Position of the label */\n  labelPosition?: \"start\" | \"middle\" | \"end\";\n  /** Use mono font for the label */\n  useMonoFont?: boolean;\n  /** Additional props */\n  [key: string]: unknown;\n};\n\nexport function ArrowHelper({\n  from = [0, 0, 0],\n  to,\n  color = COLORS.YELLOW,\n  lineWidth = 2,\n  showArrow = true,\n  arrowSize = 0.5,\n  label,\n  labelPosition = \"end\",\n  useMonoFont = true,\n  ...props\n}: Props) {\n  const groupRef = useRef<Group>(null);\n\n  // Memoize vector calculations\n  const vectors = useMemo(() => {\n    const fromVec = new Vector3(...from);\n    const toVec = new Vector3(...to);\n    const direction = new Vector3().subVectors(toVec, fromVec).normalize();\n    const length = fromVec.distanceTo(toVec);\n    return { fromVec, toVec, direction, length };\n  }, [from, to]);\n\n  // Memoize label position calculation\n  const labelPos = useMemo(() => {\n    const midPoint = new Vector3().addVectors(\n      vectors.fromVec,\n      new Vector3().copy(vectors.direction).multiplyScalar(vectors.length / 2)\n    );\n    const endPoint = new Vector3().copy(vectors.toVec);\n\n    switch (labelPosition) {\n      case \"start\":\n        return vectors.fromVec.clone();\n      case \"middle\":\n        return midPoint;\n      default:\n        // Add slight offset for end position\n        return endPoint\n          .clone()\n          .add(\n            new Vector3(\n              ARROW_SEGMENT_OFFSET,\n              ARROW_SEGMENT_OFFSET,\n              ARROW_SEGMENT_OFFSET\n            )\n          );\n    }\n  }, [vectors, labelPosition]);\n\n  // Use shared geometry and material\n  const coneGeometry = useMemo(\n    () => (showArrow ? getSharedConeGeometry(arrowSize) : null),\n    [showArrow, arrowSize]\n  );\n\n  const material = useMemo(\n    () => (showArrow ? getSharedMaterial(color) : null),\n    [showArrow, color]\n  );\n\n  // Define the shaft points - from the start point to just before the cone\n  const shaftPoints = useMemo(\n    () => [\n      vectors.fromVec,\n      new Vector3(\n        vectors.toVec.x - vectors.direction.x * arrowSize,\n        vectors.toVec.y - vectors.direction.y * arrowSize,\n        vectors.toVec.z - vectors.direction.z * arrowSize\n      ),\n    ],\n    [vectors, arrowSize]\n  );\n\n  // Memoize cone position and quaternion\n  const coneTransform = useMemo(() => {\n    if (!showArrow) {\n      return null;\n    }\n\n    const position = new Vector3(\n      vectors.toVec.x - (vectors.direction.x * arrowSize) / 2,\n      vectors.toVec.y - (vectors.direction.y * arrowSize) / 2,\n      vectors.toVec.z - (vectors.direction.z * arrowSize) / 2\n    );\n\n    const quaternion = new Quaternion().setFromUnitVectors(\n      new Vector3(0, 1, 0),\n      vectors.direction\n    );\n\n    return { position, quaternion };\n  }, [showArrow, vectors, arrowSize]);\n\n  // Memoize font path\n  const fontPath = useMemo(\n    () => (useMonoFont ? MONO_FONT_PATH : FONT_PATH),\n    [useMonoFont]\n  );\n\n  // Enable frustum culling for the entire group\n  useFrame(() => {\n    if (groupRef.current) {\n      groupRef.current.frustumCulled = true;\n    }\n  });\n\n  return (\n    <group ref={groupRef} {...props}>\n      {/* Shaft of the arrow */}\n      <Line\n        color={color}\n        frustumCulled\n        lineWidth={lineWidth}\n        points={shaftPoints}\n      />\n\n      {/* Cone arrowhead with optimized segments */}\n      {showArrow && coneGeometry && material && coneTransform && (\n        <mesh\n          frustumCulled\n          geometry={coneGeometry}\n          material={material}\n          position={coneTransform.position}\n          quaternion={coneTransform.quaternion}\n        />\n      )}\n\n      {/* Label text */}\n      <Text\n        anchorX=\"left\"\n        color={color instanceof Color ? color.getStyle() : color}\n        font={fontPath}\n        fontSize={0.5}\n        frustumCulled\n        position={labelPos}\n        visible={Boolean(label)}\n      >\n        {label}\n      </Text>\n    </group>\n  );\n}\n"],"names":["Line","Text","useFrame","COLORS","useMemo","useRef","Color","ConeGeometry","MeshBasicMaterial","Quaternion","Vector3","FONT_PATH","MONO_FONT_PATH","ARROW_SEGMENTS","ARROW_SEGMENT_OFFSET","coneGeometryCache","Map","materialCache","getSharedConeGeometry","size","key","has","set","geometry","get","Error","getSharedMaterial","color","colorKey","getHexString","material","ArrowHelper","from","to","YELLOW","lineWidth","showArrow","arrowSize","label","labelPosition","useMonoFont","props","groupRef","vectors","fromVec","toVec","direction","subVectors","normalize","length","distanceTo","labelPos","midPoint","addVectors","copy","multiplyScalar","endPoint","clone","add","coneGeometry","shaftPoints","x","y","z","coneTransform","position","quaternion","setFromUnitVectors","fontPath","current","frustumCulled","getStyle","Boolean"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 14889, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/three/D%3A/github/nakafa.com-main/packages/design-system/components/three/vector.tsx"],"sourcesContent":["\"use client\";\n\nimport type * as Three from \"three\";\nimport { ArrowHelper } from \"./arrow-helper\";\n\ntype VectorProps = {\n  /** Starting point of the vector [x, y, z] */\n  from?: [number, number, number];\n  /** End point of the vector [x, y, z] */\n  to: [number, number, number];\n  /** Color of the vector */\n  color?: string | Three.Color;\n  /** Width of the vector line */\n  lineWidth?: number;\n  /** Show arrowhead */\n  showArrow?: boolean;\n  /** Size of the arrowhead */\n  arrowSize?: number;\n  /** Label for the vector */\n  label?: string;\n  /** Position of the label */\n  labelPosition?: \"start\" | \"middle\" | \"end\";\n  /** Use mono font for the label */\n  useMonoFont?: boolean;\n  /** Additional props */\n  [key: string]: unknown;\n};\n\nexport function Vector(props: VectorProps) {\n  return <ArrowHelper {...props} />;\n}\n"],"names":["c","_c","ArrowHelper","Vector","props","$","$i","Symbol","for","t0"],"mappings":";;;;;AAAa,SAAAA,CAAA,IAAAC,EAAA;AAGb,SAASC,WAAW,QAAQ,gBAAgB;AAH5C,YAAY;;;;AA4BL,gBAAAE,KAAA;IAAA,MAAAC,CAAA,OAAAJ,gLAAA,EAAA;IAAA,IAAAI,CAAA,CAAA,EAAA,KAAA,oEAAA;QAAA,IAAA,IAAAC,EAAA,GAAA,GAAAA,EAAA,GAAA,GAAAA,EAAA,IAAA,EAAA;YAAAD,CAAA,CAAAC,EAAA,CAAA,GAAAC,MAAA,CAAAC,GAAA,CAAA;QAAA;QAAAH,CAAA,CAAA,EAAA,GAAA;IAAA;IAAA,IAAAI,EAAA;IAAA,IAAAJ,CAAA,CAAA,EAAA,KAAAD,KAAA,EAAA;QACEK,EAAA,iBAAA,6LAAC,yLAAW;YAAA,GAAKL,KAAK,IAAI;;;;;;QAAAC,CAAA,CAAA,EAAA,GAAAD,KAAA;QAAAC,CAAA,CAAA,EAAA,GAAAI,EAAA;IAAA,OAAA;QAAAA,EAAA,GAAAJ,CAAA,CAAA,EAAA;IAAA;IAAA,OAA1BI,EAA0B;AAAA;KAD5BN","ignoreList":[],"debugId":null}},
    {"offset": {"line": 14934, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/contents/D%3A/github/nakafa.com-main/packages/design-system/components/contents/vector-chart.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport {\n  type ChartConfig,\n  ChartContainer,\n  ChartLegend,\n  ChartLegendContent,\n  ChartTooltip,\n} from \"@repo/design-system/components/ui/chart\";\nimport { Fragment, type ReactNode, useMemo } from \"react\";\nimport { CartesianGrid, Line, LineChart, XAxis, YAxis } from \"recharts\";\n\ntype Vector = {\n  /**\n   * Unique identifier for the vector\n   */\n  id: string;\n  /**\n   * Name of the vector\n   */\n  name: string;\n  /**\n   * Color of the vector\n   */\n  color?: string;\n  /**\n   * Points of the vector\n   */\n  points: {\n    x: number;\n    y: number;\n  }[];\n  /**\n   * Direction of the vector arrow\n   */\n  direction?: \"forward\" | \"backward\" | \"both\" | \"none\";\n  /**\n   * Type of the vector\n   * @default \"monotone\"\n   */\n  type?: \"monotone\" | \"step\" | \"linear\";\n};\n\ntype Props = {\n  /**\n   * Title of the chart\n   */\n  title: ReactNode;\n  /**\n   * Description of the chart\n   */\n  description: ReactNode;\n  /**\n   * Vectors to display in the chart\n   */\n  vectors: Vector[];\n  /**\n   * Labels for the x and y axes\n   */\n  labels?: {\n    /**\n     * Label for the x axis\n     * @default \"x\"\n     */\n    xAxis: string;\n    /**\n     * Label for the y axis\n     * @default \"y\"\n     */\n    yAxis: string;\n  };\n};\n\nexport function VectorChart({\n  title,\n  description,\n  vectors,\n  labels = { xAxis: \"x\", yAxis: \"y\" },\n}: Props) {\n  // Transform the vectors data for the chart\n  const data = useMemo(() => {\n    // Find all unique x values from all vectors\n    const allXValues = new Set<number>();\n    for (const vector of vectors) {\n      for (const point of vector.points) {\n        allXValues.add(point.x);\n      }\n    }\n\n    // Sort the x values\n    const sortedXValues = [...allXValues].sort((a, b) => a - b);\n\n    // Create data points for each x value\n    return sortedXValues.map((x) => {\n      const dataPoint: Record<string, number | null> = { x };\n\n      // Add the y value for each vector at this x point if it exists\n      for (const vector of vectors) {\n        const point = vector.points.find((p) => p.x === x);\n        dataPoint[vector.id] = point?.y ?? null;\n      }\n\n      return dataPoint;\n    });\n  }, [vectors]);\n\n  // Create chart config with colors for each vector\n  const chartConfig = useMemo(() => {\n    const config: ChartConfig = {};\n\n    vectors.forEach((vector, index) => {\n      config[vector.id] = {\n        label: vector.name,\n        color: vector.color || `var(--chart-${index + 1})`,\n      };\n    });\n\n    return config;\n  }, [vectors]);\n\n  // Process vectors to determine which points need arrow markers\n  const processedVectors = useMemo(() => {\n    return vectors.map((vector) => {\n      // Need at least 2 points to determine direction\n      if (vector.points.length < 2) {\n        return {\n          ...vector,\n          startPoint: null,\n          endPoint: null,\n          arrowAtEnd: false,\n          arrowAtStart: false,\n        };\n      }\n\n      const direction = vector.direction || \"forward\";\n\n      // Determine which points get the arrow markers based on direction\n      if (direction === \"forward\") {\n        // Arrow at the last point (default)\n        return {\n          ...vector,\n          startPoint: vector.points[0],\n          endPoint: vector.points.at(-1),\n          arrowAtEnd: true,\n          arrowAtStart: false,\n        };\n      }\n\n      if (direction === \"both\") {\n        // Arrows at both ends\n        return {\n          ...vector,\n          startPoint: vector.points[0],\n          endPoint: vector.points.at(-1),\n          arrowAtEnd: true,\n          arrowAtStart: true,\n        };\n      }\n\n      if (direction === \"none\") {\n        // No arrows at any end\n        return {\n          ...vector,\n          startPoint: vector.points[0],\n          endPoint: vector.points.at(-1),\n          arrowAtEnd: false,\n          arrowAtStart: false,\n        };\n      }\n\n      // Arrow at the first point (backward direction)\n      return {\n        ...vector,\n        startPoint: vector.points.at(-1),\n        endPoint: vector.points[0],\n        arrowAtEnd: false,\n        arrowAtStart: true,\n      };\n    });\n  }, [vectors]);\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <LineChart accessibilityLayer data={data}>\n            <CartesianGrid />\n            <defs>\n              {/* Vector arrows for both directions */}\n              {processedVectors.map((vector, index) => {\n                const color = vector.color || `var(--chart-${index + 1})`;\n                return (\n                  <Fragment key={`arrows-${vector.id}`}>\n                    {/* Forward arrow marker (end of line) */}\n                    <marker\n                      id={`arrow-end-${vector.id}`}\n                      markerHeight=\"8\"\n                      markerWidth=\"8\"\n                      orient=\"auto\"\n                      refX=\"10\"\n                      refY=\"5\"\n                      viewBox=\"0 0 10 10\"\n                    >\n                      <path d=\"M 0 0 L 10 5 L 0 10 Z\" fill={color} />\n                    </marker>\n                    {/* Backward arrow marker (start of line) */}\n                    <marker\n                      id={`arrow-start-${vector.id}`}\n                      markerHeight=\"8\"\n                      markerWidth=\"8\"\n                      orient=\"auto-start-reverse\"\n                      refX=\"10\"\n                      refY=\"5\"\n                      viewBox=\"0 0 10 10\"\n                    >\n                      <path d=\"M 0 0 L 10 5 L 0 10 Z\" fill={color} />\n                    </marker>\n                  </Fragment>\n                );\n              })}\n            </defs>\n            <XAxis\n              dataKey=\"x\"\n              tickFormatter={(value) => {\n                if (typeof value === \"number\") {\n                  return Number.isInteger(value)\n                    ? value.toString()\n                    : value.toFixed(2);\n                }\n                return value;\n              }}\n              tickMargin={8}\n            />\n            <YAxis\n              label={{\n                value: labels.yAxis,\n                angle: -90,\n                position: \"insideLeft\",\n                style: { textAnchor: \"middle\" },\n              }}\n              tickFormatter={(value) => {\n                if (typeof value === \"number\") {\n                  return Number.isInteger(value)\n                    ? value.toString()\n                    : value.toFixed(2);\n                }\n                return value;\n              }}\n              tickMargin={8}\n            />\n\n            <ChartTooltip\n              content={({ active, payload }) => {\n                if (active && payload && payload.length) {\n                  const xValue = payload[0]?.payload.x;\n\n                  return (\n                    <div className=\"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\">\n                      {payload.map((entry) => {\n                        if (entry.value === null) {\n                          return null;\n                        }\n\n                        const vectorName = entry.name;\n                        const yValue = entry.value;\n                        const color = entry.color;\n\n                        return (\n                          <div\n                            className=\"flex items-center gap-2\"\n                            key={`tooltip-${entry.name}-${entry.value}`}\n                          >\n                            <div\n                              className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                              style={{ backgroundColor: color }}\n                            />\n                            <span className=\"font-medium\">{vectorName}</span>\n                            <span className=\"ml-auto font-mono tracking-tight\">\n                              ({xValue}, {yValue})\n                            </span>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  );\n                }\n                return null;\n              }}\n            />\n\n            {processedVectors.map((vector, index) => {\n              const color = vector.color || `var(--chart-${index + 1})`;\n\n              // Set marker properties based on direction\n              const markerProps: Record<string, string> = {};\n\n              if (vector.arrowAtEnd) {\n                markerProps.markerEnd = `url(#arrow-end-${vector.id})`;\n              }\n\n              if (vector.arrowAtStart) {\n                markerProps.markerStart = `url(#arrow-start-${vector.id})`;\n              }\n\n              return (\n                <Line\n                  connectNulls\n                  dataKey={vector.id}\n                  dot\n                  key={vector.id}\n                  name={vector.name}\n                  stroke={color}\n                  strokeWidth={2}\n                  style={{\n                    stroke: color,\n                    ...markerProps,\n                  }}\n                  type={vector.type || \"monotone\"}\n                />\n              );\n            })}\n\n            <ChartLegend\n              content={<ChartLegendContent verticalAlign=\"bottom\" />}\n            />\n          </LineChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":["Card","CardContent","CardDescription","CardHeader","CardTitle","ChartContainer","ChartLegend","ChartLegendContent","ChartTooltip","Fragment","useMemo","CartesianGrid","Line","LineChart","XAxis","YAxis","VectorChart","title","description","vectors","labels","xAxis","yAxis","data","allXValues","Set","vector","point","points","add","x","sortedXValues","sort","a","b","map","dataPoint","find","p","id","y","chartConfig","config","forEach","index","label","name","color","processedVectors","length","startPoint","endPoint","arrowAtEnd","arrowAtStart","direction","at","value","Number","isInteger","toString","toFixed","angle","position","style","textAnchor","active","payload","xValue","entry","vectorName","yValue","backgroundColor","markerProps","markerEnd","markerStart","stroke","type"],"mappings":";;;;;AAEA,SACEA,IAAI,EACJC,WAAW,EACXC,eAAe,EACfC,UAAU,EACVC,SAAS,QACJ,wCAAwC;AAC/C,SAEEC,cAAc,EACdC,WAAW,EACXC,kBAAkB,EAClBC,YAAY,QACP,yCAAyC;AAChD,SAASC,QAAQ,EAAkBC,OAAO,QAAQ,OAAO;AACzD,SAASC,aAAa,EAAEC,IAAI,EAAEC,SAAS,EAAEC,KAAK,EAAEC,KAAK,QAAQ,UAAU;;;;;;;AAjBvE,YAAY;;;;;AAgFL,0BAKC,EAAE;QALkB,EAC1BE,KAAK,EACLC,WAAW,EACXC,OAAO,EACPC,MAAM,GAAG;QAAEC,KAAK,EAAE,GAAG;QAAEC,KAAK,EAAE;IAAI,CAAA;;IAElC,2CAAA;IACA,MAAMC,IAAI,GAAGb,4KAAO;qCAAC,MAAM;YACzB,4CAAA;YACA,MAAMc,UAAU,GAAG,IAAIC,GAAG,CAAS,CAAC;YACpC,KAAK,MAAMC,MAAM,IAAIP,OAAO,CAAE;gBAC5B,KAAK,MAAMQ,KAAK,IAAID,MAAM,CAACE,MAAM,CAAE;oBACjCJ,UAAU,CAACK,GAAG,CAACF,KAAK,CAACG,CAAC,CAAC;gBACzB;YACF;YAEA,oBAAA;YACA,MAAMC,aAAa,GAAG,CAAC;mBAAGP,UAAU;aAAC,CAACQ,IAAI;2DAAC,CAACC,CAAC,EAAEC,CAAC,GAAKD,CAAC,GAAGC,CAAC,CAAC;;YAE3D,sCAAA;YACA,OAAOH,aAAa,CAACI,GAAG;6CAAEL,CAAC,IAAK;oBAC9B,MAAMM,SAAwC,GAAG;wBAAEN;oBAAE,CAAC;oBAEtD,+DAAA;oBACA,KAAK,MAAMJ,QAAM,IAAIP,OAAO,CAAE;wBAC5B,MAAMQ,OAAK,GAAGD,QAAM,CAACE,MAAM,CAACS,IAAI;kEAAEC,CAAC,GAAKA,CAAC,CAACR,CAAC,KAAKA,CAAC,CAAC;;4BAC3BH,OAAK;wBAA5BS,SAAS,CAACV,QAAM,CAACa,EAAE,CAAC,2EAAUC,CAAC,mDAAI,IAAI;oBACzC;oBAEA,OAAOJ,SAAS;gBAClB,CAAC,CAAC;;QACJ,CAAC;oCAAE;QAACjB,OAAO;KAAC,CAAC;IAEb,kDAAA;IACA,MAAMsB,WAAW,GAAG/B,4KAAO;4CAAC,MAAM;YAChC,MAAMgC,MAAmB,GAAG,CAAC,CAAC;YAE9BvB,OAAO,CAACwB,OAAO;oDAAC,CAACjB,QAAM,EAAEkB,KAAK,KAAK;oBACjCF,MAAM,CAAChB,QAAM,CAACa,EAAE,CAAC,GAAG;wBAClBM,KAAK,EAAEnB,QAAM,CAACoB,IAAI;wBAClBC,KAAK,EAAErB,QAAM,CAACqB,KAAK,IAAI,eAAwB,OAATH,KAAK,GAAG,CAAC,EAAA;oBACjD,CAAC;gBACH,CAAC,CAAC;;YAEF,OAAOF,MAAM;QACf,CAAC;2CAAE;QAACvB,OAAO;KAAC,CAAC;IAEb,+DAAA;IACA,MAAM6B,gBAAgB,OAAGtC,wKAAO;iDAAC,MAAM;YACrC,OAAOS,OAAO,CAACgB,GAAG;0DAAET,QAAM,IAAK;oBAC7B,gDAAA;oBACA,IAAIA,QAAM,CAACE,MAAM,CAACqB,MAAM,GAAG,CAAC,EAAE;wBAC5B,OAAO;4BACL,GAAGvB,QAAM;4BACTwB,UAAU,EAAE,IAAI;4BAChBC,QAAQ,EAAE,IAAI;4BACdC,UAAU,EAAE,KAAK;4BACjBC,YAAY,EAAE;wBAChB,CAAC;oBACH;oBAEA,MAAMC,SAAS,GAAG5B,QAAM,CAAC4B,SAAS,IAAI,SAAS;oBAE/C,kEAAA;oBACA,IAAIA,SAAS,KAAK,SAAS,EAAE;wBAC3B,oCAAA;wBACA,OAAO;4BACL,GAAG5B,QAAM;4BACTwB,UAAU,EAAExB,QAAM,CAACE,MAAM,CAAC,CAAC,CAAC;4BAC5BuB,QAAQ,EAAEzB,QAAM,CAACE,MAAM,CAAC2B,EAAE,CAAC,CAAC,CAAC,CAAC;4BAC9BH,UAAU,EAAE,IAAI;4BAChBC,YAAY,EAAE;wBAChB,CAAC;oBACH;oBAEA,IAAIC,SAAS,KAAK,MAAM,EAAE;wBACxB,sBAAA;wBACA,OAAO;4BACL,GAAG5B,QAAM;4BACTwB,UAAU,EAAExB,QAAM,CAACE,MAAM,CAAC,CAAC,CAAC;4BAC5BuB,QAAQ,EAAEzB,QAAM,CAACE,MAAM,CAAC2B,EAAE,CAAC,CAAC,CAAC,CAAC;4BAC9BH,UAAU,EAAE,IAAI;4BAChBC,YAAY,EAAE;wBAChB,CAAC;oBACH;oBAEA,IAAIC,SAAS,KAAK,MAAM,EAAE;wBACxB,uBAAA;wBACA,OAAO;4BACL,GAAG5B,QAAM;4BACTwB,UAAU,EAAExB,QAAM,CAACE,MAAM,CAAC,CAAC,CAAC;4BAC5BuB,QAAQ,EAAEzB,QAAM,CAACE,MAAM,CAAC2B,EAAE,CAAC,CAAC,CAAC,CAAC;4BAC9BH,UAAU,EAAE,KAAK;4BACjBC,YAAY,EAAE;wBAChB,CAAC;oBACH;oBAEA,gDAAA;oBACA,OAAO;wBACL,GAAG3B,QAAM;wBACTwB,UAAU,EAAExB,QAAM,CAACE,MAAM,CAAC2B,EAAE,CAAC,CAAC,CAAC,CAAC;wBAChCJ,QAAQ,EAAEzB,QAAM,CAACE,MAAM,CAAC,CAAC,CAAC;wBAC1BwB,UAAU,EAAE,KAAK;wBACjBC,YAAY,EAAE;oBAChB,CAAC;gBACH,CAAC,CAAC;;QACJ,CAAC;gDAAE;QAAClC,OAAO;KAAC,CAAC;IAEb,qBACE,6LAAC,oKAAI;;0BACH,6LAAC,0KAAU;;kCACT,6LAAC,yKAAS,CAAC;kCAACF,KAAK,CAAC,EAAE,SAAS;;;;;;kCAC7B,6LAAC,+KAAe,CAAC;kCAACC,WAAW,CAAC,EAAE,eAAe;;;;;;;;;;;;0BAEjD,6LAAC,2KAAW;wCACV,6LAAC,+KAAc;oBAAC,MAAM,CAAC,CAACuB,WAAW,CAAC;4CAClC,6LAAC,qKAAS;wBAAC,kBAAkB;wBAAC,IAAI,CAAC,CAAClB,IAAI,CAAC;;0CACvC,6LAAC,iLAAa;;;;;0CACd,6LAAC,IAAI;0CAEFyB,gBAAgB,CAACb,GAAG,CAAC,CAACT,QAAM,EAAEkB,OAAK,KAAK;oCACvC,MAAMG,KAAK,GAAGrB,QAAM,CAACqB,KAAK,IAAI,eAAwB,EAAG,KAAZH,OAAK,GAAG,CAAC,EAAA;oCACtD,qBACE,6LAAC,yKAAQ,CAAC,GAAG,CAAC;;0DAEZ,6LAAC,MAAM;gDACL,EAAE,CAAC,CAAC,aAAsB,CAAE,CAAC,KAAZlB,QAAM,CAACa,EAAE;gDAC1B,YAAY,EAAC,GAAG;gDAChB,WAAW,EAAC,GAAG;gDACf,MAAM,EAAC,MAAM;gDACb,IAAI,EAAC,IAAI;gDACT,IAAI,EAAC,GAAG;gDACR,OAAO,EAAC,WAAW;wEAEnB,6LAAC,IAAI;oDAAC,CAAC,EAAC,uBAAuB;oDAAC,IAAI,CAAC,CAACQ,KAAK,CAAC;;;;;;;;;;;0DAG9C,6LAAC,MAAM;gDACL,EAAE,CAAC,CAAC,eAAwB,CAAE,CAAC,KAAZrB,QAAM,CAACa,EAAE;gDAC5B,YAAY,EAAC,GAAG;gDAChB,WAAW,EAAC,GAAG;gDACf,MAAM,EAAC,oBAAoB;gDAC3B,IAAI,EAAC,IAAI;gDACT,IAAI,EAAC,GAAG;gDACR,OAAO,EAAC,WAAW;wEAEnB,6LAAC,IAAI;oDAAC,CAAC,EAAC,uBAAuB;oDAAC,IAAI,CAAC,CAACQ,KAAK,CAAC;;;;;;;;;;;;uCAvBjC,UAAmB,CAAE,CAAC,KAAZrB,QAAM,CAACa,EAAE;;;;;gCA2BtC,CAAC,CAAC;;;;;;0CAEJ,6LAAC,iKAAK;gCACJ,OAAO,EAAC,GAAG;gCACX,aAAa,CAAC,EAAEiB,KAAK,IAAK;oCACxB,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;wCAC7B,OAAOC,MAAM,CAACC,SAAS,CAACF,KAAK,CAAC,GAC1BA,KAAK,CAACG,QAAQ,CAAC,CAAC,GAChBH,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC;oCACtB;oCACA,OAAOJ,KAAK;gCACd,CAAC,CAAC;gCACF,UAAU,CAAC,CAAC,CAAC,CAAC;;;;;;0CAEhB,6LAAC,iKAAK;gCACJ,KAAK,CAAC,CAAC;oCACLA,KAAK,EAAEpC,MAAM,CAACE,KAAK;oCACnBuC,KAAK,EAAE,CAAC,EAAE;oCACVC,QAAQ,EAAE,YAAY;oCACtBC,KAAK,EAAE;wCAAEC,UAAU,EAAE;oCAAS;gCAChC,CAAC,CAAC;gCACF,aAAa,CAAC,EAAER,OAAK,IAAK;oCACxB,IAAI,OAAOA,OAAK,KAAK,QAAQ,EAAE;wCAC7B,OAAOC,MAAM,CAACC,SAAS,CAACF,OAAK,CAAC,GAC1BA,OAAK,CAACG,QAAQ,CAAC,CAAC,GAChBH,OAAK,CAACI,OAAO,CAAC,CAAC,CAAC;oCACtB;oCACA,OAAOJ,OAAK;gCACd,CAAC,CAAC;gCACF,UAAU,CAAC,CAAC,CAAC,CAAC;;;;;;0CAGhB,6LAAC,6KAAY;gCACX,OAAO,CAAC,CAAC;wCAAC,EAAES,MAAM,EAAEC,OAAAA,EAAS,KAAK;oCAChC,IAAID,MAAM,IAAIC,OAAO,IAAIA,OAAO,CAACjB,MAAM,EAAE;;wCACvC,MAAMkB,MAAM,uBAAU,CAAC,CAAC,CAAC,8CAAVD,UAAYA,OAAO,CAACpC,CAAC;wCAEpC,qBACE,6LAAC,GAAG;4CAAC,SAAS,EAAC,wHAAwH;sDACpIoC,OAAO,CAAC/B,GAAG,EAAEiC,KAAK,IAAK;gDACtB,IAAIA,KAAK,CAACZ,KAAK,KAAK,IAAI,EAAE;oDACxB,OAAO,IAAI;gDACb;gDAEA,MAAMa,UAAU,GAAGD,KAAK,CAACtB,IAAI;gDAC7B,MAAMwB,MAAM,GAAGF,KAAK,CAACZ,KAAK;gDAC1B,MAAMT,OAAK,GAAGqB,KAAK,CAACrB,KAAK;gDAEzB,qBACE,6LAAC,GAAG;oDACF,SAAS,EAAC,yBAAyB,CACnC,GAAG,CAAC;;sEAEJ,6LAAC,GAAG;4DACF,SAAS,EAAC,gCAAgC;4DAC1C,KAAK,CAAC,CAAC;gEAAEwB,eAAe,EAAExB;4DAAM,CAAC,CAAC;;;;;;sEAEpC,6LAAC,IAAI;4DAAC,SAAS,EAAC,aAAa,CAAC;sEAACsB,UAAU,CAAC,EAAE,IAAI;;;;;;sEAChD,6LAAC,IAAI;4DAAC,SAAS,EAAC,kCAAkC;;gEAAA;gEAC9CF,MAAM;gEAAC,EAAE;gEAACG,MAAM;gEAAC;;;;;;;;mDARhB,kBAAWF,KAAK,CAACtB,IAAI,EAAA,KAAe,CAAE,CAAC,KAAdsB,KAAK,CAACZ,KAAK;;;;;4CAY/C,CAAC,CAAC;;;;;;oCAGR;oCACA,OAAO,IAAI;gCACb,CAAC,CAAC;;;;;;4BAGHR,gBAAgB,CAACb,GAAG,CAAC,CAACT,QAAM,EAAEkB,OAAK,KAAK;gCACvC,MAAMG,OAAK,GAAGrB,QAAM,CAACqB,KAAK,IAAI,eAAwB,OAATH,OAAK,GAAG,CAAC,EAAA,EAAG;gCAEzD,2CAAA;gCACA,MAAM4B,WAAmC,GAAG,CAAC,CAAC;gCAE9C,IAAI9C,QAAM,CAAC0B,UAAU,EAAE;oCACrBoB,WAAW,CAACC,SAAS,GAAG,kBAA2B,OAAT/C,QAAM,CAACa,EAAE,EAAA,EAAG;gCACxD;gCAEA,IAAIb,QAAM,CAAC2B,YAAY,EAAE;oCACvBmB,WAAW,CAACE,WAAW,GAAG,oBAA6B,OAAThD,QAAM,CAACa,EAAE,EAAA,EAAG;gCAC5D;gCAEA,qBACE,6LAAC,+JAAI;oCACH,YAAY;oCACZ,OAAO,CAAC,CAACb,QAAM,CAACa,EAAE,CAAC;oCACnB,GAAG,CACH,GAAG,CAAC;oCACJ,IAAI,CAAC,CAACb,QAAM,CAACoB,IAAI,CAAC;oCAClB,MAAM,CAAC,CAACC,OAAK,CAAC;oCACd,WAAW,CAAC,CAAC,CAAC,CAAC;oCACf,KAAK,CAAC,CAAC;wCACL4B,MAAM,EAAE5B,OAAK;wCACb,GAAGyB,WAAAA;oCACL,CAAC,CAAC;oCACF,IAAI,CAAC,CAAC9C,QAAM,CAACkD,IAAI,IAAI,UAAU,CAAC,GAChC;mCATKlD,QAAM,CAACa,EAAE,CAAC;;;;;4BAWrB,CAAC,CAAC;0CAEF,6LAAC,4KAAW;gCACV,OAAO,CAAC,eAAC,6LAAC,mLAAkB;oCAAC,aAAa,EAAC,QAAQ,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOrE;;KArQgBvB,WAAWA","ignoreList":[],"debugId":null}},
    {"offset": {"line": 15350, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/contents/subject/high-school/11/mathematics/function-composition-inverse-function/function-and-non-function/D%3A/github/nakafa.com-main/packages/contents/subject/high-school/11/mathematics/function-composition-inverse-function/function-and-non-function/diagram.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport type React from \"react\";\nimport { useMemo } from \"react\";\n\nconst SVG_PADDING = 20;\nconst ELLIPSE_RX = 50;\nconst ELLIPSE_RY = 90;\nconst ELLIPSE_GAP = 100;\nconst TEXT_PADDING = 15;\nconst LINE_OFFSET = 0.3;\nconst SLOT_CENTER_OFFSET = 0.5;\n\ntype DiagramProps = {\n  title: string;\n  description: string;\n  children: React.ReactNode;\n};\n\nexport function Diagram({ title, description, children }: DiagramProps) {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>{children}</CardContent>\n    </Card>\n  );\n}\n\ntype Element = {\n  id: string;\n  label: string;\n};\n\ntype Mapping = {\n  from: string; // Corresponds to Element id in domain\n  to: string; // Corresponds to Element id in codomain\n};\n\ntype RelationVisualizerProps = {\n  domain: Element[];\n  codomain: Element[];\n  mappings: Mapping[];\n  domainLabel?: string;\n  codomainLabel?: string;\n};\n\n// --- SVG Configuration ---\nconst svgWidth = 2 * ELLIPSE_RX * 2 + ELLIPSE_GAP + 2 * SVG_PADDING;\nconst svgHeight = 2 * ELLIPSE_RY + 2 * SVG_PADDING;\n\n// Center X coordinates for the ellipses\nconst domainEllipseCx = SVG_PADDING + ELLIPSE_RX;\nconst codomainEllipseCx = domainEllipseCx + 2 * ELLIPSE_RX + ELLIPSE_GAP;\nconst ellipseCy = SVG_PADDING + ELLIPSE_RY; // Y center for both ellipses\n\n// Calculate X coordinate for text within ellipses\nconst domainTextX = domainEllipseCx;\nconst codomainTextX = codomainEllipseCx;\n\n// Helper to calculate Text Y position dynamically within an ellipse\nconst calculateTextY = (\n  index: number,\n  total: number,\n  ry: number,\n  cy: number\n): number => {\n  // Calculate the effective height available for text\n  const textHeightArea = ry * 2 - TEXT_PADDING * 2;\n  // Calculate the height of each slot\n  const slotHeight = textHeightArea / total;\n  // Calculate the center Y of the slot, offset by top padding and ellipse center\n  return cy - ry + TEXT_PADDING + slotHeight * (index + SLOT_CENTER_OFFSET);\n};\n\nexport function RelationVisualizer({\n  domain,\n  codomain,\n  mappings,\n  domainLabel = \"X\",\n  codomainLabel = \"Y\",\n}: RelationVisualizerProps) {\n  // Calculate Text Y coordinates dynamically for domain and codomain\n  const elementCoords = useMemo(() => {\n    const coords: Record<string, { x: number; y: number }> = {};\n    // Domain elements\n    domain.forEach((el, index) => {\n      coords[el.id] = {\n        x: domainTextX,\n        y: calculateTextY(index, domain.length, ELLIPSE_RY, ellipseCy),\n      };\n    });\n    // Codomain elements\n    codomain.forEach((el, index) => {\n      coords[el.id] = {\n        x: codomainTextX,\n        y: calculateTextY(index, codomain.length, ELLIPSE_RY, ellipseCy),\n      };\n    });\n    return coords;\n  }, [domain, codomain]);\n\n  return (\n    <div className=\"flex justify-center py-4\">\n      <svg\n        aria-labelledby=\"svgTitle\" // Make SVG responsive\n        height={svgHeight} // Fixed height based on ellipse Ry\n        preserveAspectRatio=\"xMidYMid meet\"\n        viewBox={`0 0 ${svgWidth} ${svgHeight}`}\n        width=\"100%\"\n      >\n        <title id=\"svgTitle\">Arrow diagram of relation between sets</title>\n        <defs>\n          <marker\n            id=\"arrowhead-visualizer\" // Unique ID for this component's marker\n            markerHeight=\"6\" // Use viewBox for scaling\n            markerWidth=\"8\"\n            orient=\"auto-start-reverse\"\n            refX=\"7\" // Adjust refX so the tip is at the coordinate, line stops just before\n            refY=\"3\"\n            viewBox=\"0 0 8 6\" // Orients correctly\n          >\n            {/* Use foreground color */}\n            <polygon className=\"fill-foreground/80\" points=\"0 0, 8 3, 0 6\" />\n          </marker>\n        </defs>\n\n        {/* Domain Ellipse and Label */}\n        <text\n          className=\"fill-foreground font-semibold text-sm\"\n          textAnchor=\"middle\" // Position label above ellipse\n          x={domainEllipseCx}\n          y={SVG_PADDING - 10}\n        >\n          {domainLabel}\n        </text>\n        <ellipse\n          className=\"fill-muted stroke-border\"\n          cx={domainEllipseCx}\n          cy={ellipseCy}\n          rx={ELLIPSE_RX}\n          ry={ELLIPSE_RY}\n          strokeWidth=\"1\"\n        />\n\n        {/* Codomain Ellipse and Label */}\n        <text\n          className=\"fill-foreground font-semibold text-sm\"\n          textAnchor=\"middle\" // Position label above ellipse\n          x={codomainEllipseCx}\n          y={SVG_PADDING - 10}\n        >\n          {codomainLabel}\n        </text>\n        <ellipse\n          className=\"fill-muted stroke-border\"\n          cx={codomainEllipseCx}\n          cy={ellipseCy}\n          rx={ELLIPSE_RX}\n          ry={ELLIPSE_RY}\n          strokeWidth=\"1\"\n        />\n\n        {/* Domain Elements (Text) */}\n        {domain.map((el) => (\n          <text\n            className=\"fill-foreground font-medium text-sm\"\n            dominantBaseline=\"middle\"\n            key={`domain-${el.id}`}\n            textAnchor=\"middle\"\n            x={elementCoords[el.id]?.x}\n            y={elementCoords[el.id]?.y}\n          >\n            {el.label}\n          </text>\n        ))}\n\n        {/* Codomain Elements (Text) */}\n        {codomain.map((el) => (\n          <text\n            className=\"fill-foreground font-medium text-sm\"\n            dominantBaseline=\"middle\"\n            key={`codomain-${el.id}`}\n            textAnchor=\"middle\"\n            x={elementCoords[el.id]?.x}\n            y={elementCoords[el.id]?.y}\n          >\n            {el.label}\n          </text>\n        ))}\n\n        {/* Mappings (Arrows/Lines) */}\n        {mappings.map((mapping, index) => {\n          const startCoords = elementCoords[mapping.from];\n          const endCoords = elementCoords[mapping.to];\n\n          // Check if coordinates exist before drawing\n          if (!(startCoords && endCoords)) {\n            return null;\n          }\n\n          // Calculate start/end points for the line, slightly offset from text center\n          const lineStartX = startCoords.x + ELLIPSE_RX * LINE_OFFSET; // Start near edge of domain ellipse\n          const lineEndX = endCoords.x - ELLIPSE_RX * LINE_OFFSET; // End near edge of codomain ellipse\n\n          return (\n            <line\n              className=\"stroke-foreground/50\"\n              key={`mapping-${mapping.from}-${mapping.to}-${index}`}\n              markerEnd=\"url(#arrowhead-visualizer)\"\n              strokeWidth=\"1.5\" // Adjusted end point for marker\n              x1={lineStartX}\n              x2={lineEndX}\n              y1={startCoords.y}\n              y2={endCoords.y}\n            />\n          );\n        })}\n      </svg>\n    </div>\n  );\n}\n"],"names":["c","_c","Card","CardContent","CardDescription","CardHeader","CardTitle","useMemo","SVG_PADDING","ELLIPSE_RX","ELLIPSE_RY","ELLIPSE_GAP","TEXT_PADDING","LINE_OFFSET","SLOT_CENTER_OFFSET","Diagram","t0","$","$i","Symbol","for","title","description","children","t1","t2","t3","t4","t5","svgWidth","svgHeight","domainEllipseCx","codomainEllipseCx","ellipseCy","domainTextX","codomainTextX","calculateTextY","index","total","ry","cy","textHeightArea","slotHeight","RelationVisualizer","domain","codomain","mappings","domainLabel","codomainLabel","undefined","coords","forEach","el","id","x","y","length","el_0","index_0","elementCoords","t6","t7","t8","t9","t10","el_1","label","map","t11","el_2","t12","mapping","index_1","startCoords","from","endCoords","to","lineStartX","lineEndX"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 15784, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/contents/subject/high-school/11/mathematics/function-composition-inverse-function/function-concept/D%3A/github/nakafa.com-main/packages/contents/subject/high-school/11/mathematics/function-composition-inverse-function/function-concept/analogy.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button as UiButton } from \"@repo/design-system/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport {\n  ArrowDownIcon,\n  ArrowRightIcon,\n  MinusIcon,\n  PlusIcon,\n} from \"lucide-react\";\nimport { useMemo, useState } from \"react\";\nimport {\n  Button,\n  Group,\n  Input,\n  Label,\n  NumberField,\n} from \"react-aria-components\";\nimport { InlineMath } from \"react-katex\";\n\nconst DEFAULT_INPUT = 5;\n\ntype Props = {\n  title: string;\n  description: string;\n};\n\nexport function FunctionAnalogy({ title, description }: Props) {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <Machine />\n    </Card>\n  );\n}\n\nfunction Machine() {\n  const [input, setInput] = useState<number>(DEFAULT_INPUT);\n\n  const output = useMemo(() => {\n    // y = 2x + 1\n    return 2 * input + 1;\n  }, [input]);\n\n  return (\n    <>\n      <CardContent>\n        <div className=\"flex flex-col items-center justify-center gap-8 py-8 sm:flex-row\">\n          <UiButton className=\"pointer-events-none\" variant=\"default\">\n            <InlineMath math={`x = ${input}`} />\n          </UiButton>\n\n          <ArrowRightIcon className=\"hidden size-4 sm:block\" />\n          <ArrowDownIcon className=\"block size-4 sm:hidden\" />\n\n          <div className=\"flex items-center justify-center rounded-md bg-accent p-8 text-accent-foreground shadow-xs\">\n            <InlineMath math=\"f(x) = 2x + 1\" />\n          </div>\n\n          <ArrowDownIcon className=\"block size-4 sm:hidden\" />\n          <ArrowRightIcon className=\"hidden size-4 sm:block\" />\n\n          <UiButton className=\"pointer-events-none\" variant=\"secondary\">\n            <InlineMath math={`f(x) = ${output}`} />\n          </UiButton>\n        </div>\n      </CardContent>\n      <CardFooter className=\"justify-center border-t\">\n        <NumberField\n          formatOptions={{\n            localeMatcher: \"best fit\",\n          }}\n          onChange={setInput}\n          value={input}\n        >\n          <Label className=\"sr-only\">Machine function</Label>\n          <Group className=\"relative inline-flex h-9 w-full items-center overflow-hidden whitespace-nowrap rounded-md border border-input text-sm shadow-xs outline-none transition-[color,box-shadow] data-focus-within:border-ring data-disabled:opacity-50 data-focus-within:ring-[3px] data-focus-within:ring-ring/50 data-focus-within:has-aria-invalid:border-destructive data-focus-within:has-aria-invalid:ring-destructive/20 dark:data-focus-within:has-aria-invalid:ring-destructive/40\">\n            <Button\n              className=\"-ms-px flex aspect-square h-[inherit] cursor-pointer items-center justify-center rounded-s-md border border-input bg-background text-muted-foreground/80 text-sm transition-[color,box-shadow] hover:bg-accent hover:text-foreground disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50\"\n              slot=\"decrement\"\n            >\n              <MinusIcon aria-hidden=\"true\" className=\"size-4\" />\n            </Button>\n            <Input className=\"w-full grow bg-background px-3 py-2 text-center font-mono text-foreground tabular-nums\" />\n            <Button\n              className=\"-me-px flex aspect-square h-[inherit] cursor-pointer items-center justify-center rounded-e-md border border-input bg-background text-muted-foreground/80 text-sm transition-[color,box-shadow] hover:bg-accent hover:text-foreground disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50\"\n              slot=\"increment\"\n            >\n              <PlusIcon aria-hidden=\"true\" className=\"size-4\" />\n            </Button>\n          </Group>\n        </NumberField>\n      </CardFooter>\n    </>\n  );\n}\n"],"names":["c","_c","Button","UiButton","Card","CardContent","CardDescription","CardFooter","CardHeader","CardTitle","ArrowDownIcon","ArrowRightIcon","MinusIcon","PlusIcon","useMemo","useState","Group","Input","Label","NumberField","InlineMath","DEFAULT_INPUT","FunctionAnalogy","t0","$","$i","Symbol","for","title","description","t1","t2","t3","t4","t5","Machine","input","setInput","output","t6","t7","t8","t9","t10","localeMatcher","t11","t12","t13","t14","t15","t16"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 16193, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/contents/subject/high-school/11/mathematics/function-composition-inverse-function/inverse-function/D%3A/github/nakafa.com-main/packages/contents/subject/high-school/11/mathematics/function-composition-inverse-function/inverse-function/illustration.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@repo/design-system/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport { ArrowDownIcon, ArrowRightIcon } from \"lucide-react\";\nimport type { ReactNode } from \"react\";\n\ntype Props = {\n  title: ReactNode;\n  description: ReactNode;\n  machineLabel: string;\n  content: {\n    input: string;\n    output: string;\n  };\n};\n\nexport function FunctionIllustration({\n  title,\n  description,\n  machineLabel,\n  content,\n}: Props) {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"flex flex-col items-center justify-center gap-8 py-8 sm:flex-row\">\n          <Button className=\"pointer-events-none\">{content.input}</Button>\n\n          <ArrowRightIcon className=\"hidden size-4 sm:block\" />\n          <ArrowDownIcon className=\"block size-4 sm:hidden\" />\n\n          <div className=\"flex items-center justify-center rounded-md bg-accent p-8 text-accent-foreground\">\n            {machineLabel}\n          </div>\n\n          <ArrowDownIcon className=\"block size-4 sm:hidden\" />\n          <ArrowRightIcon className=\"hidden size-4 sm:block\" />\n\n          <Button className=\"pointer-events-none\" variant=\"destructive\">\n            {content.output}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":["c","_c","Button","Card","CardContent","CardDescription","CardHeader","CardTitle","ArrowDownIcon","ArrowRightIcon","FunctionIllustration","t0","$","$i","Symbol","for","title","description","machineLabel","content","t1","t2","t3","t4","input","t5","t6","t7","t8","t9","t10","output","t11","t12"],"mappings":"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","ignoreList":[],"debugId":null}},
    {"offset": {"line": 16417, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/packages/design-system/components/contents/D%3A/github/nakafa.com-main/packages/design-system/components/contents/scatter-diagram.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@repo/design-system/components/ui/card\";\nimport {\n  type ChartConfig,\n  ChartContainer,\n  ChartLegend,\n  ChartLegendContent,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@repo/design-system/components/ui/chart\";\nimport type { ReactNode } from \"react\";\nimport {\n  CartesianGrid,\n  ComposedChart,\n  Line,\n  ReferenceLine,\n  Scatter,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\ntype Point = { x: number; y: number };\n\ntype Dataset = {\n  name: string;\n  color: string;\n  points: Point[];\n};\n\ntype RegressionLineStyle = {\n  color?: string;\n  strokeDasharray?: string;\n};\n\ntype Props = {\n  title: ReactNode;\n  description: ReactNode;\n  xAxisLabel?: string;\n  yAxisLabel?: string;\n  xAxisDomain?: \"min-max\";\n  datasets: Dataset[];\n  calculateRegressionLine?: boolean;\n  regressionLineStyle?: RegressionLineStyle;\n  showResiduals?: boolean;\n};\n\nexport function ScatterDiagram({\n  title,\n  description,\n  xAxisLabel,\n  yAxisLabel,\n  xAxisDomain,\n  datasets,\n  calculateRegressionLine,\n  regressionLineStyle,\n  showResiduals,\n}: Props) {\n  const chartConfig = datasets.reduce<ChartConfig>(\n    (acc, dataset) => {\n      acc[dataset.name] = {\n        label: dataset.name,\n        color: dataset.color,\n      };\n      return acc;\n    },\n    {\n      x: { label: xAxisLabel || \"X\" },\n      y: { label: yAxisLabel || \"Y\" },\n    }\n  );\n\n  let regressionLineData: { x: number; y: number }[] | undefined;\n  let regressionParams: { m: number; b: number } | null = null;\n\n  if (calculateRegressionLine) {\n    const allPoints = datasets.flatMap((d) => d.points);\n    regressionParams = calculateLeastSquares(allPoints);\n\n    if (regressionParams && allPoints.length > 0) {\n      const xValues = allPoints.map((p) => p.x);\n      const xMin = Math.min(...xValues);\n      const xMax = Math.max(...xValues);\n      const { m, b } = regressionParams;\n      regressionLineData = [\n        { x: xMin, y: m * xMin + b },\n        { x: xMax, y: m * xMax + b },\n      ];\n    }\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <ComposedChart accessibilityLayer>\n            <CartesianGrid vertical={false} />\n            <XAxis\n              dataKey=\"x\"\n              domain={\n                xAxisDomain === \"min-max\" ? [\"dataMin\", \"dataMax\"] : undefined\n              }\n              label={{\n                value: xAxisLabel || \"X\",\n                position: \"bottom\",\n                offset: 10,\n                style: { textAnchor: \"middle\" },\n              }}\n              tickFormatter={(value) => value.toString()}\n              tickMargin={8}\n              type=\"number\"\n            />\n            <YAxis\n              dataKey=\"y\"\n              label={{\n                value: yAxisLabel || \"Y\",\n                angle: -90,\n                position: \"insideLeft\",\n                style: { textAnchor: \"middle\" },\n              }}\n              tickMargin={8}\n              type=\"number\"\n            />\n            <ChartTooltip content={<ChartTooltipContent hideLabel={true} />} />\n            {datasets.map((dataset) => (\n              <Scatter\n                data={dataset.points}\n                fill={dataset.color}\n                key={dataset.name}\n                name={dataset.name}\n              />\n            ))}\n            {regressionLineData && calculateRegressionLine && (\n              <Line\n                activeDot={false}\n                data={regressionLineData}\n                dataKey=\"y\"\n                dot={false}\n                stroke={regressionLineStyle?.color || \"var(--chart-5)\"}\n                strokeDasharray={regressionLineStyle?.strokeDasharray}\n                strokeWidth={2}\n                type=\"linear\"\n              />\n            )}\n            {showResiduals &&\n              regressionParams &&\n              datasets.flatMap((dataset) =>\n                dataset.points.map((point, index) => {\n                  const yPredicted =\n                    regressionParams.m * point.x + regressionParams.b;\n                  return (\n                    <ReferenceLine\n                      ifOverflow=\"visible\"\n                      key={`${dataset.name}-residual-${index}`}\n                      segment={[\n                        { x: point.x, y: point.y },\n                        { x: point.x, y: yPredicted },\n                      ]}\n                      stroke={dataset.color}\n                      strokeDasharray=\"2 2\"\n                    />\n                  );\n                })\n              )}\n            <ChartLegend content={<ChartLegendContent className=\"mt-6\" />} />\n          </ComposedChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction calculateLeastSquares(\n  points: Point[]\n): { m: number; b: number } | null {\n  const n = points.length;\n  if (n < 2) {\n    return null;\n  }\n\n  let sumX = 0;\n  let sumY = 0;\n  let sumXy = 0;\n  let sumX2 = 0;\n\n  for (const p of points) {\n    sumX += p.x;\n    sumY += p.y;\n    sumXy += p.x * p.y;\n    sumX2 += p.x * p.x;\n  }\n\n  const denominator = n * sumX2 - sumX * sumX;\n  if (denominator === 0) {\n    return null;\n  }\n\n  const m = (n * sumXy - sumX * sumY) / denominator;\n  const b = (sumY - m * sumX) / n;\n\n  return { m, b };\n}\n"],"names":["c","_c","Card","CardContent","CardDescription","CardHeader","CardTitle","ChartContainer","ChartLegend","ChartLegendContent","ChartTooltip","ChartTooltipContent","CartesianGrid","ComposedChart","Line","ReferenceLine","Scatter","XAxis","YAxis","ScatterDiagram","t0","$","$i","Symbol","for","title","description","xAxisLabel","yAxisLabel","xAxisDomain","datasets","calculateRegressionLine","regressionLineStyle","showResiduals","t1","reduce","_temp","x","label","y","chartConfig","regressionLineData","regressionParams","allPoints","flatMap","_temp2","length","xValues","map","_temp3","xMin","Math","min","xMax","max","m","b","t2","t3","t4","t5","t6","undefined","t7","t8","textAnchor","t9","value","position","offset","style","t10","_temp4","t11","t12","t13","angle","t14","t15","_temp5","t16","color","strokeDasharray","t17","dataset_1","dataset","points","point","index","yPredicted","name","t18","t19","t20","t21","dataset_0","toString","p","d","acc","calculateLeastSquares","n","sumX","sumY","sumXy","sumX2","denominator"],"mappings":"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","ignoreList":[],"debugId":null}}]
}