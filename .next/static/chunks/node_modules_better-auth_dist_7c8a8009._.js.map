{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/crypto/index.mjs"],"sourcesContent":["import { createHash } from '@better-auth/utils/hash';\nimport { xchacha20poly1305 } from '@noble/ciphers/chacha';\nimport { utf8ToBytes, bytesToHex, hexToBytes as hexToBytes$1 } from '@noble/ciphers/utils';\nimport { managedNonce } from '@noble/ciphers/webcrypto';\nimport { base64 } from '@better-auth/utils/base64';\nimport { SignJWT } from 'jose';\nimport { scryptAsync } from '@noble/hashes/scrypt';\nimport { getRandomValues } from '@better-auth/utils';\nimport { hex } from '@better-auth/utils/hex';\nimport { hexToBytes } from '@noble/hashes/utils';\nimport { B as BetterAuthError } from '../shared/better-auth.DdzSJf-n.mjs';\nexport { g as generateRandomString } from '../shared/better-auth.B4Qoxdgc.mjs';\nimport '@better-auth/utils/random';\n\nasync function signJWT(payload, secret, expiresIn = 3600) {\n  const jwt = await new SignJWT(payload).setProtectedHeader({ alg: \"HS256\" }).setIssuedAt().setExpirationTime(Math.floor(Date.now() / 1e3) + expiresIn).sign(new TextEncoder().encode(secret));\n  return jwt;\n}\n\nfunction constantTimeEqual(a, b) {\n  const aBuffer = new Uint8Array(a);\n  const bBuffer = new Uint8Array(b);\n  let c = aBuffer.length ^ bBuffer.length;\n  const length = Math.max(aBuffer.length, bBuffer.length);\n  for (let i = 0; i < length; i++) {\n    c |= (i < aBuffer.length ? aBuffer[i] : 0) ^ (i < bBuffer.length ? bBuffer[i] : 0);\n  }\n  return c === 0;\n}\n\nasync function hashToBase64(data) {\n  const buffer = await createHash(\"SHA-256\").digest(data);\n  return base64.encode(buffer);\n}\nasync function compareHash(data, hash) {\n  const buffer = await createHash(\"SHA-256\").digest(\n    typeof data === \"string\" ? new TextEncoder().encode(data) : data\n  );\n  const hashBuffer = base64.decode(hash);\n  return constantTimeEqual(buffer, hashBuffer);\n}\n\nconst config = {\n  N: 16384,\n  r: 16,\n  p: 1,\n  dkLen: 64\n};\nasync function generateKey(password, salt) {\n  return await scryptAsync(password.normalize(\"NFKC\"), salt, {\n    N: config.N,\n    p: config.p,\n    r: config.r,\n    dkLen: config.dkLen,\n    maxmem: 128 * config.N * config.r * 2\n  });\n}\nconst hashPassword = async (password) => {\n  const salt = hex.encode(getRandomValues(new Uint8Array(16)));\n  const key = await generateKey(password, salt);\n  return `${salt}:${hex.encode(key)}`;\n};\nconst verifyPassword = async ({\n  hash,\n  password\n}) => {\n  const [salt, key] = hash.split(\":\");\n  if (!salt || !key) {\n    throw new BetterAuthError(\"Invalid password hash\");\n  }\n  const targetKey = await generateKey(password, salt);\n  return constantTimeEqual(targetKey, hexToBytes(key));\n};\n\nconst symmetricEncrypt = async ({\n  key,\n  data\n}) => {\n  const keyAsBytes = await createHash(\"SHA-256\").digest(key);\n  const dataAsBytes = utf8ToBytes(data);\n  const chacha = managedNonce(xchacha20poly1305)(new Uint8Array(keyAsBytes));\n  return bytesToHex(chacha.encrypt(dataAsBytes));\n};\nconst symmetricDecrypt = async ({\n  key,\n  data\n}) => {\n  const keyAsBytes = await createHash(\"SHA-256\").digest(key);\n  const dataAsBytes = hexToBytes$1(data);\n  const chacha = managedNonce(xchacha20poly1305)(new Uint8Array(keyAsBytes));\n  return new TextDecoder().decode(chacha.decrypt(dataAsBytes));\n};\n\nexport { compareHash, constantTimeEqual, hashPassword, hashToBase64, signJWT, symmetricDecrypt, symmetricEncrypt, verifyPassword };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/client/plugins/index.mjs"],"sourcesContent":["import { atom } from 'nanostores';\nimport '@better-fetch/fetch';\nimport '../../shared/better-auth.CMQ3rA-I.mjs';\nimport { u as useAuthQuery } from '../../shared/better-auth.CkGsgrvv.mjs';\nimport { ownerAc, memberAc, adminAc } from '../../plugins/organization/access/index.mjs';\nimport { c as clientSideHasPermission } from '../../shared/better-auth.DQunmJlF.mjs';\nimport { startRegistration, WebAuthnError, startAuthentication } from '@simplewebauthn/browser';\nexport { t as twoFactorClient } from '../../shared/better-auth.Ddw8bVyV.mjs';\nimport { userAc, adminAc as adminAc$1 } from '../../plugins/admin/access/index.mjs';\nimport { h as hasPermission } from '../../shared/better-auth.bkwPl2G4.mjs';\nimport 'zod/v4';\nimport 'better-call';\nimport '../../shared/better-auth.nqWf7zUe.mjs';\nimport '../../shared/better-auth.DV5EHeYG.mjs';\nimport '@better-auth/utils/base64';\nimport '@better-auth/utils/hmac';\nimport '../../shared/better-auth.BjBlybv-.mjs';\nimport '@better-auth/utils/binary';\nimport '../../shared/better-auth.Dcv8PS7T.mjs';\nexport { d as deviceAuthorizationClient } from '../../shared/better-auth.BpA03GIs.mjs';\nimport '../../plugins/access/index.mjs';\nimport '../../shared/better-auth.DdzSJf-n.mjs';\nimport '../../shared/better-auth.CW6D9eSx.mjs';\nimport '@better-auth/utils/hash';\nimport '../../crypto/index.mjs';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport '../../shared/better-auth.B4Qoxdgc.mjs';\nimport '@better-auth/utils/random';\nimport '../../shared/better-auth.CuS_eDdK.mjs';\nimport '../../shared/better-auth.UfVWArIB.mjs';\nimport '../../shared/better-auth.BZZKN1g7.mjs';\nimport 'jose/errors';\nimport '../../shared/better-auth.BUPPRXfK.mjs';\nimport 'defu';\n\nconst organizationClient = (options) => {\n  const $listOrg = atom(false);\n  const $activeOrgSignal = atom(false);\n  const $activeMemberSignal = atom(false);\n  const roles = {\n    admin: adminAc,\n    member: memberAc,\n    owner: ownerAc,\n    ...options?.roles\n  };\n  return {\n    id: \"organization\",\n    $InferServerPlugin: {},\n    getActions: ($fetch, _$store, co) => ({\n      $Infer: {\n        ActiveOrganization: {},\n        Organization: {},\n        Invitation: {},\n        Member: {},\n        Team: {}\n      },\n      organization: {\n        checkRolePermission: (data) => {\n          const isAuthorized = clientSideHasPermission({\n            role: data.role,\n            options: {\n              ac: options?.ac,\n              roles\n            },\n            permissions: data.permissions ?? data.permission\n          });\n          return isAuthorized;\n        }\n      }\n    }),\n    getAtoms: ($fetch) => {\n      const listOrganizations = useAuthQuery(\n        $listOrg,\n        \"/organization/list\",\n        $fetch,\n        {\n          method: \"GET\"\n        }\n      );\n      const activeOrganization = useAuthQuery(\n        [$activeOrgSignal],\n        \"/organization/get-full-organization\",\n        $fetch,\n        () => ({\n          method: \"GET\"\n        })\n      );\n      const activeMember = useAuthQuery(\n        [$activeMemberSignal],\n        \"/organization/get-active-member\",\n        $fetch,\n        {\n          method: \"GET\"\n        }\n      );\n      return {\n        $listOrg,\n        $activeOrgSignal,\n        $activeMemberSignal,\n        activeOrganization,\n        listOrganizations,\n        activeMember\n      };\n    },\n    pathMethods: {\n      \"/organization/get-full-organization\": \"GET\"\n    },\n    atomListeners: [\n      {\n        matcher(path) {\n          return path === \"/organization/create\" || path === \"/organization/delete\" || path === \"/organization/update\";\n        },\n        signal: \"$listOrg\"\n      },\n      {\n        matcher(path) {\n          return path.startsWith(\"/organization\");\n        },\n        signal: \"$activeOrgSignal\"\n      },\n      {\n        matcher(path) {\n          return path.startsWith(\"/organization/set-active\");\n        },\n        signal: \"$sessionSignal\"\n      },\n      {\n        matcher(path) {\n          return path.includes(\"/organization/update-member-role\");\n        },\n        signal: \"$activeMemberSignal\"\n      }\n    ]\n  };\n};\nconst inferOrgAdditionalFields = (schema) => {\n  return {};\n};\n\nconst usernameClient = () => {\n  return {\n    id: \"username\",\n    $InferServerPlugin: {}\n  };\n};\n\nconst getPasskeyActions = ($fetch, {\n  $listPasskeys\n}) => {\n  const signInPasskey = async (opts, options) => {\n    const response = await $fetch(\n      \"/passkey/generate-authenticate-options\",\n      {\n        method: \"POST\",\n        body: {\n          email: opts?.email\n        }\n      }\n    );\n    if (!response.data) {\n      return response;\n    }\n    try {\n      const res = await startAuthentication({\n        optionsJSON: response.data,\n        useBrowserAutofill: opts?.autoFill\n      });\n      const verified = await $fetch(\"/passkey/verify-authentication\", {\n        body: {\n          response: res\n        },\n        ...opts?.fetchOptions,\n        ...options,\n        method: \"POST\"\n      });\n      return verified;\n    } catch (e) {\n      return {\n        data: null,\n        error: {\n          message: \"auth cancelled\",\n          status: 400,\n          statusText: \"BAD_REQUEST\"\n        }\n      };\n    }\n  };\n  const registerPasskey = async (opts, fetchOpts) => {\n    const options = await $fetch(\n      \"/passkey/generate-register-options\",\n      {\n        method: \"GET\",\n        query: {\n          ...opts?.authenticatorAttachment && {\n            authenticatorAttachment: opts.authenticatorAttachment\n          },\n          ...opts?.name && {\n            name: opts.name\n          }\n        }\n      }\n    );\n    if (!options.data) {\n      return options;\n    }\n    try {\n      const res = await startRegistration({\n        optionsJSON: options.data,\n        useAutoRegister: opts?.useAutoRegister\n      });\n      const verified = await $fetch(\"/passkey/verify-registration\", {\n        ...opts?.fetchOptions,\n        ...fetchOpts,\n        body: {\n          response: res,\n          name: opts?.name\n        },\n        method: \"POST\"\n      });\n      if (!verified.data) {\n        return verified;\n      }\n      $listPasskeys.set(Math.random());\n    } catch (e) {\n      if (e instanceof WebAuthnError) {\n        if (e.code === \"ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED\") {\n          return {\n            data: null,\n            error: {\n              message: \"previously registered\",\n              status: 400,\n              statusText: \"BAD_REQUEST\"\n            }\n          };\n        }\n        if (e.code === \"ERROR_CEREMONY_ABORTED\") {\n          return {\n            data: null,\n            error: {\n              message: \"registration cancelled\",\n              status: 400,\n              statusText: \"BAD_REQUEST\"\n            }\n          };\n        }\n        return {\n          data: null,\n          error: {\n            message: e.message,\n            status: 400,\n            statusText: \"BAD_REQUEST\"\n          }\n        };\n      }\n      return {\n        data: null,\n        error: {\n          message: e instanceof Error ? e.message : \"unknown error\",\n          status: 500,\n          statusText: \"INTERNAL_SERVER_ERROR\"\n        }\n      };\n    }\n  };\n  return {\n    signIn: {\n      /**\n       * Sign in with a registered passkey\n       */\n      passkey: signInPasskey\n    },\n    passkey: {\n      /**\n       * Add a passkey to the user account\n       */\n      addPasskey: registerPasskey\n    },\n    /**\n     * Inferred Internal Types\n     */\n    $Infer: {}\n  };\n};\nconst passkeyClient = () => {\n  const $listPasskeys = atom();\n  return {\n    id: \"passkey\",\n    $InferServerPlugin: {},\n    getActions: ($fetch) => getPasskeyActions($fetch, {\n      $listPasskeys\n    }),\n    getAtoms($fetch) {\n      const listPasskeys = useAuthQuery(\n        $listPasskeys,\n        \"/passkey/list-user-passkeys\",\n        $fetch,\n        {\n          method: \"GET\"\n        }\n      );\n      return {\n        listPasskeys,\n        $listPasskeys\n      };\n    },\n    pathMethods: {\n      \"/passkey/register\": \"POST\",\n      \"/passkey/authenticate\": \"POST\"\n    },\n    atomListeners: [\n      {\n        matcher(path) {\n          return path === \"/passkey/verify-registration\" || path === \"/passkey/delete-passkey\" || path === \"/passkey/update-passkey\";\n        },\n        signal: \"_listPasskeys\"\n      }\n    ]\n  };\n};\n\nconst magicLinkClient = () => {\n  return {\n    id: \"magic-link\",\n    $InferServerPlugin: {}\n  };\n};\n\nconst phoneNumberClient = () => {\n  return {\n    id: \"phoneNumber\",\n    $InferServerPlugin: {},\n    atomListeners: [\n      {\n        matcher(path) {\n          return path === \"/phone-number/update\" || path === \"/phone-number/verify\";\n        },\n        signal: \"$sessionSignal\"\n      }\n    ]\n  };\n};\n\nconst anonymousClient = () => {\n  return {\n    id: \"anonymous\",\n    $InferServerPlugin: {},\n    pathMethods: {\n      \"/sign-in/anonymous\": \"POST\"\n    }\n  };\n};\n\nconst inferAdditionalFields = (schema) => {\n  return {\n    id: \"additional-fields-client\",\n    $InferServerPlugin: {}\n  };\n};\n\nconst adminClient = (options) => {\n  const roles = {\n    admin: adminAc$1,\n    user: userAc,\n    ...options?.roles\n  };\n  return {\n    id: \"admin-client\",\n    $InferServerPlugin: {},\n    getActions: () => ({\n      admin: {\n        checkRolePermission: (data) => {\n          const isAuthorized = hasPermission({\n            role: data.role,\n            options: {\n              ac: options?.ac,\n              roles\n            },\n            permissions: data.permissions ?? data.permission\n          });\n          return isAuthorized;\n        }\n      }\n    }),\n    pathMethods: {\n      \"/admin/list-users\": \"GET\",\n      \"/admin/stop-impersonating\": \"POST\"\n    }\n  };\n};\n\nconst genericOAuthClient = () => {\n  return {\n    id: \"generic-oauth-client\",\n    $InferServerPlugin: {}\n  };\n};\n\nconst jwtClient = () => {\n  return {\n    id: \"better-auth-client\",\n    $InferServerPlugin: {}\n  };\n};\n\nconst multiSessionClient = () => {\n  return {\n    id: \"multi-session\",\n    $InferServerPlugin: {},\n    atomListeners: [\n      {\n        matcher(path) {\n          return path === \"/multi-session/set-active\";\n        },\n        signal: \"$sessionSignal\"\n      }\n    ]\n  };\n};\n\nconst emailOTPClient = () => {\n  return {\n    id: \"email-otp\",\n    $InferServerPlugin: {}\n  };\n};\n\nlet isRequestInProgress = false;\nconst oneTapClient = (options) => {\n  return {\n    id: \"one-tap\",\n    getActions: ($fetch, _) => ({\n      oneTap: async (opts, fetchOptions) => {\n        if (isRequestInProgress) {\n          console.warn(\n            \"A Google One Tap request is already in progress. Please wait.\"\n          );\n          return;\n        }\n        isRequestInProgress = true;\n        try {\n          if (typeof window === \"undefined\" || !window.document) {\n            console.warn(\n              \"Google One Tap is only available in browser environments\"\n            );\n            return;\n          }\n          const { autoSelect, cancelOnTapOutside, context } = opts ?? {};\n          const contextValue = context ?? options.context ?? \"signin\";\n          await loadGoogleScript();\n          await new Promise((resolve, reject) => {\n            let isResolved = false;\n            const baseDelay = options.promptOptions?.baseDelay ?? 1e3;\n            const maxAttempts = options.promptOptions?.maxAttempts ?? 5;\n            window.google?.accounts.id.initialize({\n              client_id: options.clientId,\n              callback: async (response) => {\n                isResolved = true;\n                try {\n                  await $fetch(\"/one-tap/callback\", {\n                    method: \"POST\",\n                    body: { idToken: response.credential },\n                    ...opts?.fetchOptions,\n                    ...fetchOptions\n                  });\n                  if (!opts?.fetchOptions && !fetchOptions || opts?.callbackURL) {\n                    window.location.href = opts?.callbackURL ?? \"/\";\n                  }\n                  resolve();\n                } catch (error) {\n                  console.error(\"Error during One Tap callback:\", error);\n                  reject(error);\n                }\n              },\n              auto_select: autoSelect,\n              cancel_on_tap_outside: cancelOnTapOutside,\n              context: contextValue,\n              ...options.additionalOptions\n            });\n            const handlePrompt = (attempt) => {\n              if (isResolved) return;\n              window.google?.accounts.id.prompt((notification) => {\n                if (isResolved) return;\n                if (notification.isDismissedMoment && notification.isDismissedMoment()) {\n                  if (attempt < maxAttempts) {\n                    const delay = Math.pow(2, attempt) * baseDelay;\n                    setTimeout(() => handlePrompt(attempt + 1), delay);\n                  } else {\n                    opts?.onPromptNotification?.(notification);\n                  }\n                } else if (notification.isSkippedMoment && notification.isSkippedMoment()) {\n                  if (attempt < maxAttempts) {\n                    const delay = Math.pow(2, attempt) * baseDelay;\n                    setTimeout(() => handlePrompt(attempt + 1), delay);\n                  } else {\n                    opts?.onPromptNotification?.(notification);\n                  }\n                }\n              });\n            };\n            handlePrompt(0);\n          });\n        } catch (error) {\n          console.error(\"Error during Google One Tap flow:\", error);\n          throw error;\n        } finally {\n          isRequestInProgress = false;\n        }\n      }\n    }),\n    getAtoms($fetch) {\n      return {};\n    }\n  };\n};\nconst loadGoogleScript = () => {\n  return new Promise((resolve) => {\n    if (window.googleScriptInitialized) {\n      resolve();\n      return;\n    }\n    const script = document.createElement(\"script\");\n    script.src = \"https://accounts.google.com/gsi/client\";\n    script.async = true;\n    script.defer = true;\n    script.onload = () => {\n      window.googleScriptInitialized = true;\n      resolve();\n    };\n    document.head.appendChild(script);\n  });\n};\n\nconst customSessionClient = () => {\n  return InferServerPlugin();\n};\n\nconst InferServerPlugin = () => {\n  return {\n    id: \"infer-server-plugin\",\n    $InferServerPlugin: {}\n  };\n};\n\nconst ssoClient = () => {\n  return {\n    id: \"sso-client\",\n    $InferServerPlugin: {}\n  };\n};\n\nconst oidcClient = () => {\n  return {\n    id: \"oidc-client\",\n    $InferServerPlugin: {}\n  };\n};\n\nconst apiKeyClient = () => {\n  return {\n    id: \"api-key\",\n    $InferServerPlugin: {},\n    pathMethods: {\n      \"/api-key/create\": \"POST\",\n      \"/api-key/delete\": \"POST\",\n      \"/api-key/delete-all-expired-api-keys\": \"POST\"\n    }\n  };\n};\n\nconst oneTimeTokenClient = () => {\n  return {\n    id: \"one-time-token\",\n    $InferServerPlugin: {}\n  };\n};\n\nconst siweClient = () => {\n  return {\n    id: \"siwe\",\n    $InferServerPlugin: {}\n  };\n};\n\nfunction getCookieValue(name) {\n  if (typeof document === \"undefined\") {\n    return null;\n  }\n  const cookie = document.cookie.split(\"; \").find((row) => row.startsWith(`${name}=`));\n  return cookie ? cookie.split(\"=\")[1] : null;\n}\nconst lastLoginMethodClient = (config = {}) => {\n  const cookieName = config.cookieName || \"better-auth.last_used_login_method\";\n  return {\n    id: \"last-login-method-client\",\n    getActions() {\n      return {\n        /**\n         * Get the last used login method from cookies\n         * @returns The last used login method or null if not found\n         */\n        getLastUsedLoginMethod: () => {\n          return getCookieValue(cookieName);\n        },\n        /**\n         * Clear the last used login method cookie\n         * This sets the cookie with an expiration date in the past\n         */\n        clearLastUsedLoginMethod: () => {\n          if (typeof document !== \"undefined\") {\n            document.cookie = `${cookieName}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;\n          }\n        },\n        /**\n         * Check if a specific login method was the last used\n         * @param method The method to check\n         * @returns True if the method was the last used, false otherwise\n         */\n        isLastUsedLoginMethod: (method) => {\n          const lastMethod = getCookieValue(cookieName);\n          return lastMethod === method;\n        }\n      };\n    }\n  };\n};\n\nexport { InferServerPlugin, adminClient, anonymousClient, apiKeyClient, customSessionClient, emailOTPClient, genericOAuthClient, getPasskeyActions, inferAdditionalFields, inferOrgAdditionalFields, jwtClient, lastLoginMethodClient, magicLinkClient, multiSessionClient, oidcClient, oneTapClient, oneTimeTokenClient, organizationClient, passkeyClient, phoneNumberClient, siweClient, ssoClient, usernameClient };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 806, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/client/react/index.mjs"],"sourcesContent":["import { g as getClientConfig, c as createDynamicPathProxy } from '../../shared/better-auth.D7Ni8r_z.mjs';\nimport { listenKeys } from 'nanostores';\nimport { useRef, useCallback, useSyncExternalStore } from 'react';\nimport '@better-fetch/fetch';\nimport '../../shared/better-auth.CuS_eDdK.mjs';\nimport '../../shared/better-auth.CMQ3rA-I.mjs';\nimport '../../shared/better-auth.DdzSJf-n.mjs';\nimport '../../shared/better-auth.CkGsgrvv.mjs';\nimport '../../shared/better-auth.ffWeg50w.mjs';\n\nfunction useStore(store, options = {}) {\n  let snapshotRef = useRef(store.get());\n  const { keys, deps = [store, keys] } = options;\n  let subscribe = useCallback((onChange) => {\n    const emitChange = (value) => {\n      if (snapshotRef.current === value) return;\n      snapshotRef.current = value;\n      onChange();\n    };\n    emitChange(store.value);\n    if (keys?.length) {\n      return listenKeys(store, keys, emitChange);\n    }\n    return store.listen(emitChange);\n  }, deps);\n  let get = () => snapshotRef.current;\n  return useSyncExternalStore(subscribe, get, get);\n}\n\nfunction getAtomKey(str) {\n  return `use${capitalizeFirstLetter(str)}`;\n}\nfunction capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction createAuthClient(options) {\n  const {\n    pluginPathMethods,\n    pluginsActions,\n    pluginsAtoms,\n    $fetch,\n    $store,\n    atomListeners\n  } = getClientConfig(options);\n  let resolvedHooks = {};\n  for (const [key, value] of Object.entries(pluginsAtoms)) {\n    resolvedHooks[getAtomKey(key)] = () => useStore(value);\n  }\n  const routes = {\n    ...pluginsActions,\n    ...resolvedHooks,\n    $fetch,\n    $store\n  };\n  const proxy = createDynamicPathProxy(\n    routes,\n    $fetch,\n    pluginPathMethods,\n    pluginsAtoms,\n    atomListeners\n  );\n  return proxy;\n}\n\nexport { capitalizeFirstLetter, createAuthClient, useStore };\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,SAAS,SAAS,KAAK;QAAE,UAAA,iEAAU,CAAC;IAClC,IAAI,cAAc,IAAA,uKAAM,EAAC,MAAM,GAAG;IAClC,MAAM,EAAE,IAAI,EAAE,OAAO;QAAC;QAAO;KAAK,EAAE,GAAG;IACvC,IAAI,YAAY,IAAA,4KAAW;2CAAC,CAAC;YAC3B,MAAM;8DAAa,CAAC;oBAClB,IAAI,YAAY,OAAO,KAAK,OAAO;oBACnC,YAAY,OAAO,GAAG;oBACtB;gBACF;;YACA,WAAW,MAAM,KAAK;YACtB,IAAI,iBAAA,2BAAA,KAAM,MAAM,EAAE;gBAChB,OAAO,IAAA,sKAAU,EAAC,OAAO,MAAM;YACjC;YACA,OAAO,MAAM,MAAM,CAAC;QACtB;0CAAG;IACH,IAAI,MAAM,IAAM,YAAY,OAAO;IACnC,OAAO,IAAA,qLAAoB,EAAC,WAAW,KAAK;AAC9C;AAEA,SAAS,WAAW,GAAG;IACrB,OAAO,AAAC,MAAgC,OAA3B,sBAAsB;AACrC;AACA,SAAS,sBAAsB,GAAG;IAChC,OAAO,IAAI,MAAM,CAAC,GAAG,WAAW,KAAK,IAAI,KAAK,CAAC;AACjD;AACA,SAAS,iBAAiB,OAAO;IAC/B,MAAM,EACJ,iBAAiB,EACjB,cAAc,EACd,YAAY,EACZ,MAAM,EACN,MAAM,EACN,aAAa,EACd,GAAG,IAAA,uLAAe,EAAC;IACpB,IAAI,gBAAgB,CAAC;IACrB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,cAAe;QACvD,aAAa,CAAC,WAAW,KAAK,GAAG,IAAM,SAAS;IAClD;IACA,MAAM,SAAS;QACb,GAAG,cAAc;QACjB,GAAG,aAAa;QAChB;QACA;IACF;IACA,MAAM,QAAQ,IAAA,uLAAsB,EAClC,QACA,QACA,mBACA,cACA;IAEF,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 884, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/adapters/index.mjs"],"sourcesContent":["export { c as createAdapter } from '../shared/better-auth.BuBqXPUp.mjs';\nimport '../shared/better-auth.BZZKN1g7.mjs';\nimport '../shared/better-auth.BjBlybv-.mjs';\nimport '../shared/better-auth.B_PTVODM.mjs';\nimport '../shared/better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/random';\nimport 'zod/v4';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport '../shared/better-auth.B4Qoxdgc.mjs';\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AAEA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 921, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/db/index.mjs"],"sourcesContent":["export { d as convertFromDB, b as convertToDB, c as createInternalAdapter, a as getAdapter, e as getMigrations, f as getSchema, g as getWithHooks, m as matchType } from '../shared/better-auth.CSVCtb77.mjs';\nexport { g as getAuthTables } from '../shared/better-auth.B_PTVODM.mjs';\nexport { t as toZodSchema } from '../shared/better-auth.DrJWSFx6.mjs';\nexport { a as accountSchema, c as coreSchema, g as getAllFields, m as mergeSchema, j as parseAccountInput, d as parseAccountOutput, i as parseAdditionalUserInput, f as parseInputData, p as parseOutputData, k as parseSessionInput, e as parseSessionOutput, h as parseUserInput, b as parseUserOutput, s as sessionSchema, u as userSchema, v as verificationSchema } from '../shared/better-auth.Dcv8PS7T.mjs';\nimport '../shared/better-auth.CW6D9eSx.mjs';\nimport '../shared/better-auth.O2VtDkDK.mjs';\nimport '../shared/better-auth.CMQ3rA-I.mjs';\nimport '../shared/better-auth.BZZKN1g7.mjs';\nimport '../shared/better-auth.BjBlybv-.mjs';\nimport '../shared/better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/random';\nimport 'zod/v4';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport '../shared/better-auth.B4Qoxdgc.mjs';\nimport '../shared/better-auth.DdzSJf-n.mjs';\nimport '../shared/better-auth.B8b3lep0.mjs';\nimport 'kysely';\nimport '../shared/better-auth.BuBqXPUp.mjs';\nimport '../shared/better-auth.C7uhlcDq.mjs';\n\nconst createFieldAttribute = (type, config) => {\n  return {\n    type,\n    ...config\n  };\n};\n\nexport { createFieldAttribute };\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAM,uBAAuB,CAAC,MAAM;IAClC,OAAO;QACL;QACA,GAAG,MAAM;IACX;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 987, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/api/index.mjs"],"sourcesContent":["import { APIError, createRouter } from 'better-call';\nexport { APIError } from 'better-call';\nimport { k as createEmailVerificationToken, w as wildcardMatch, u as updateUser, t as toAuthEndpoints, l as originCheckMiddleware, m as error, n as ok, q as accountInfo, x as getAccessToken, y as refreshToken, z as unlinkAccount, A as deleteUserCallback, B as listUserAccounts, C as linkSocialAccount, D as requestPasswordResetCallback, E as requestPasswordReset, F as forgetPasswordCallback, G as deleteUser, I as setPassword, J as changePassword, K as changeEmail, L as sendVerificationEmail, M as verifyEmail, N as resetPassword, O as forgetPassword, P as signInEmail, Q as signOut, R as callbackOAuth, S as signInSocial } from '../shared/better-auth.nqWf7zUe.mjs';\nexport { o as originCheck, T as sendVerificationEmailFn } from '../shared/better-auth.nqWf7zUe.mjs';\nimport { a as createAuthEndpoint, B as BASE_ERROR_CODES, l as listSessions, b as getSession, r as revokeOtherSessions, d as revokeSessions, e as revokeSession } from '../shared/better-auth.DV5EHeYG.mjs';\nexport { c as createAuthMiddleware, f as freshSessionMiddleware, g as getSessionFromCtx, h as getSessionQuerySchema, o as optionsMiddleware, i as requestOnlySessionMiddleware, s as sessionMiddleware } from '../shared/better-auth.DV5EHeYG.mjs';\nimport * as z from 'zod/v4';\nimport { s as setSessionCookie } from '../shared/better-auth.UfVWArIB.mjs';\nimport { h as parseUserInput } from '../shared/better-auth.Dcv8PS7T.mjs';\nimport { b as isDevelopment } from '../shared/better-auth.CMQ3rA-I.mjs';\nimport { a as logger } from '../shared/better-auth.BjBlybv-.mjs';\nimport { s as safeJSONParse } from '../shared/better-auth.BZZKN1g7.mjs';\nimport { g as getIp } from '../shared/better-auth.O2VtDkDK.mjs';\nimport '../shared/better-auth.CW6D9eSx.mjs';\nimport '@better-auth/utils/hash';\nimport '@better-auth/utils/base64';\nimport '../crypto/index.mjs';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport '../shared/better-auth.DdzSJf-n.mjs';\nimport '../shared/better-auth.B4Qoxdgc.mjs';\nimport '@better-auth/utils/random';\nimport '@better-fetch/fetch';\nimport '../shared/better-auth.CuS_eDdK.mjs';\nimport 'jose/errors';\nimport '../shared/better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/hmac';\nimport '@better-auth/utils/binary';\nimport 'defu';\n\nconst signUpEmail = () => createAuthEndpoint(\n  \"/sign-up/email\",\n  {\n    method: \"POST\",\n    body: z.record(z.string(), z.any()),\n    metadata: {\n      $Infer: {\n        body: {}\n      },\n      openapi: {\n        description: \"Sign up a user using email and password\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  name: {\n                    type: \"string\",\n                    description: \"The name of the user\"\n                  },\n                  email: {\n                    type: \"string\",\n                    description: \"The email of the user\"\n                  },\n                  password: {\n                    type: \"string\",\n                    description: \"The password of the user\"\n                  },\n                  image: {\n                    type: \"string\",\n                    description: \"The profile image URL of the user\"\n                  },\n                  callbackURL: {\n                    type: \"string\",\n                    description: \"The URL to use for email verification callback\"\n                  },\n                  rememberMe: {\n                    type: \"boolean\",\n                    description: \"If this is false, the session will not be remembered. Default is `true`.\"\n                  }\n                },\n                required: [\"name\", \"email\", \"password\"]\n              }\n            }\n          }\n        },\n        responses: {\n          \"200\": {\n            description: \"Successfully created user\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    token: {\n                      type: \"string\",\n                      nullable: true,\n                      description: \"Authentication token for the session\"\n                    },\n                    user: {\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\",\n                          description: \"The unique identifier of the user\"\n                        },\n                        email: {\n                          type: \"string\",\n                          format: \"email\",\n                          description: \"The email address of the user\"\n                        },\n                        name: {\n                          type: \"string\",\n                          description: \"The name of the user\"\n                        },\n                        image: {\n                          type: \"string\",\n                          format: \"uri\",\n                          nullable: true,\n                          description: \"The profile image URL of the user\"\n                        },\n                        emailVerified: {\n                          type: \"boolean\",\n                          description: \"Whether the email has been verified\"\n                        },\n                        createdAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          description: \"When the user was created\"\n                        },\n                        updatedAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          description: \"When the user was last updated\"\n                        }\n                      },\n                      required: [\n                        \"id\",\n                        \"email\",\n                        \"name\",\n                        \"emailVerified\",\n                        \"createdAt\",\n                        \"updatedAt\"\n                      ]\n                    }\n                  },\n                  required: [\"user\"]\n                  // token is optional\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.emailAndPassword?.enabled || ctx.context.options.emailAndPassword?.disableSignUp) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Email and password sign up is not enabled\"\n      });\n    }\n    const body = ctx.body;\n    const {\n      name,\n      email,\n      password,\n      image,\n      callbackURL,\n      rememberMe,\n      ...additionalFields\n    } = body;\n    const isValidEmail = z.email().safeParse(email);\n    if (!isValidEmail.success) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL\n      });\n    }\n    const minPasswordLength = ctx.context.password.config.minPasswordLength;\n    if (password.length < minPasswordLength) {\n      ctx.context.logger.error(\"Password is too short\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_SHORT\n      });\n    }\n    const maxPasswordLength = ctx.context.password.config.maxPasswordLength;\n    if (password.length > maxPasswordLength) {\n      ctx.context.logger.error(\"Password is too long\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_LONG\n      });\n    }\n    const dbUser = await ctx.context.internalAdapter.findUserByEmail(email);\n    if (dbUser?.user) {\n      ctx.context.logger.info(`Sign-up attempt for existing email: ${email}`);\n      throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n        message: BASE_ERROR_CODES.USER_ALREADY_EXISTS\n      });\n    }\n    const additionalData = parseUserInput(\n      ctx.context.options,\n      additionalFields\n    );\n    const hash = await ctx.context.password.hash(password);\n    let createdUser;\n    try {\n      createdUser = await ctx.context.internalAdapter.createUser(\n        {\n          email: email.toLowerCase(),\n          name,\n          image,\n          ...additionalData,\n          emailVerified: false\n        },\n        ctx\n      );\n      if (!createdUser) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: BASE_ERROR_CODES.FAILED_TO_CREATE_USER\n        });\n      }\n    } catch (e) {\n      if (isDevelopment) {\n        ctx.context.logger.error(\"Failed to create user\", e);\n      }\n      if (e instanceof APIError) {\n        throw e;\n      }\n      throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_USER,\n        details: e\n      });\n    }\n    if (!createdUser) {\n      throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_USER\n      });\n    }\n    await ctx.context.internalAdapter.linkAccount(\n      {\n        userId: createdUser.id,\n        providerId: \"credential\",\n        accountId: createdUser.id,\n        password: hash\n      },\n      ctx\n    );\n    if (ctx.context.options.emailVerification?.sendOnSignUp || ctx.context.options.emailAndPassword.requireEmailVerification) {\n      const token = await createEmailVerificationToken(\n        ctx.context.secret,\n        createdUser.email,\n        void 0,\n        ctx.context.options.emailVerification?.expiresIn\n      );\n      const url = `${ctx.context.baseURL}/verify-email?token=${token}&callbackURL=${body.callbackURL || \"/\"}`;\n      await ctx.context.options.emailVerification?.sendVerificationEmail?.(\n        {\n          user: createdUser,\n          url,\n          token\n        },\n        ctx.request\n      );\n    }\n    if (ctx.context.options.emailAndPassword.autoSignIn === false || ctx.context.options.emailAndPassword.requireEmailVerification) {\n      return ctx.json({\n        token: null,\n        user: {\n          id: createdUser.id,\n          email: createdUser.email,\n          name: createdUser.name,\n          image: createdUser.image,\n          emailVerified: createdUser.emailVerified,\n          createdAt: createdUser.createdAt,\n          updatedAt: createdUser.updatedAt\n        }\n      });\n    }\n    const session = await ctx.context.internalAdapter.createSession(\n      createdUser.id,\n      ctx,\n      rememberMe === false\n    );\n    if (!session) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_SESSION\n      });\n    }\n    await setSessionCookie(\n      ctx,\n      {\n        session,\n        user: createdUser\n      },\n      rememberMe === false\n    );\n    return ctx.json({\n      token: session.token,\n      user: {\n        id: createdUser.id,\n        email: createdUser.email,\n        name: createdUser.name,\n        image: createdUser.image,\n        emailVerified: createdUser.emailVerified,\n        createdAt: createdUser.createdAt,\n        updatedAt: createdUser.updatedAt\n      }\n    });\n  }\n);\n\nfunction shouldRateLimit(max, window, rateLimitData) {\n  const now = Date.now();\n  const windowInMs = window * 1e3;\n  const timeSinceLastRequest = now - rateLimitData.lastRequest;\n  return timeSinceLastRequest < windowInMs && rateLimitData.count >= max;\n}\nfunction rateLimitResponse(retryAfter) {\n  return new Response(\n    JSON.stringify({\n      message: \"Too many requests. Please try again later.\"\n    }),\n    {\n      status: 429,\n      statusText: \"Too Many Requests\",\n      headers: {\n        \"X-Retry-After\": retryAfter.toString()\n      }\n    }\n  );\n}\nfunction getRetryAfter(lastRequest, window) {\n  const now = Date.now();\n  const windowInMs = window * 1e3;\n  return Math.ceil((lastRequest + windowInMs - now) / 1e3);\n}\nfunction createDBStorage(ctx) {\n  const model = \"rateLimit\";\n  const db = ctx.adapter;\n  return {\n    get: async (key) => {\n      const res = await db.findMany({\n        model,\n        where: [{ field: \"key\", value: key }]\n      });\n      const data = res[0];\n      if (typeof data?.lastRequest === \"bigint\") {\n        data.lastRequest = Number(data.lastRequest);\n      }\n      return data;\n    },\n    set: async (key, value, _update) => {\n      try {\n        if (_update) {\n          await db.updateMany({\n            model,\n            where: [{ field: \"key\", value: key }],\n            update: {\n              count: value.count,\n              lastRequest: value.lastRequest\n            }\n          });\n        } else {\n          await db.create({\n            model,\n            data: {\n              key,\n              count: value.count,\n              lastRequest: value.lastRequest\n            }\n          });\n        }\n      } catch (e) {\n        ctx.logger.error(\"Error setting rate limit\", e);\n      }\n    }\n  };\n}\nconst memory = /* @__PURE__ */ new Map();\nfunction getRateLimitStorage(ctx) {\n  if (ctx.options.rateLimit?.customStorage) {\n    return ctx.options.rateLimit.customStorage;\n  }\n  if (ctx.rateLimit.storage === \"secondary-storage\") {\n    return {\n      get: async (key) => {\n        const data = await ctx.options.secondaryStorage?.get(key);\n        return data ? safeJSONParse(data) : void 0;\n      },\n      set: async (key, value) => {\n        await ctx.options.secondaryStorage?.set?.(key, JSON.stringify(value));\n      }\n    };\n  }\n  const storage = ctx.rateLimit.storage;\n  if (storage === \"memory\") {\n    return {\n      async get(key) {\n        return memory.get(key);\n      },\n      async set(key, value, _update) {\n        memory.set(key, value);\n      }\n    };\n  }\n  return createDBStorage(ctx);\n}\nasync function onRequestRateLimit(req, ctx) {\n  if (!ctx.rateLimit.enabled) {\n    return;\n  }\n  const path = new URL(req.url).pathname.replace(\n    ctx.options.basePath || \"/api/auth\",\n    \"\"\n  );\n  let window = ctx.rateLimit.window;\n  let max = ctx.rateLimit.max;\n  const ip = getIp(req, ctx.options);\n  if (!ip) {\n    return;\n  }\n  const key = ip + path;\n  const specialRules = getDefaultSpecialRules();\n  const specialRule = specialRules.find((rule) => rule.pathMatcher(path));\n  if (specialRule) {\n    window = specialRule.window;\n    max = specialRule.max;\n  }\n  for (const plugin of ctx.options.plugins || []) {\n    if (plugin.rateLimit) {\n      const matchedRule = plugin.rateLimit.find(\n        (rule) => rule.pathMatcher(path)\n      );\n      if (matchedRule) {\n        window = matchedRule.window;\n        max = matchedRule.max;\n        break;\n      }\n    }\n  }\n  if (ctx.rateLimit.customRules) {\n    const _path = Object.keys(ctx.rateLimit.customRules).find((p) => {\n      if (p.includes(\"*\")) {\n        const isMatch = wildcardMatch(p)(path);\n        return isMatch;\n      }\n      return p === path;\n    });\n    if (_path) {\n      const customRule = ctx.rateLimit.customRules[_path];\n      const resolved = typeof customRule === \"function\" ? await customRule(req) : customRule;\n      if (resolved) {\n        window = resolved.window;\n        max = resolved.max;\n      }\n    }\n  }\n  const storage = getRateLimitStorage(ctx);\n  const data = await storage.get(key);\n  const now = Date.now();\n  if (!data) {\n    await storage.set(key, {\n      key,\n      count: 1,\n      lastRequest: now\n    });\n  } else {\n    const timeSinceLastRequest = now - data.lastRequest;\n    if (shouldRateLimit(max, window, data)) {\n      const retryAfter = getRetryAfter(data.lastRequest, window);\n      return rateLimitResponse(retryAfter);\n    } else if (timeSinceLastRequest > window * 1e3) {\n      await storage.set(\n        key,\n        {\n          ...data,\n          count: 1,\n          lastRequest: now\n        },\n        true\n      );\n    } else {\n      await storage.set(\n        key,\n        {\n          ...data,\n          count: data.count + 1,\n          lastRequest: now\n        },\n        true\n      );\n    }\n  }\n}\nfunction getDefaultSpecialRules() {\n  const specialRules = [\n    {\n      pathMatcher(path) {\n        return path.startsWith(\"/sign-in\") || path.startsWith(\"/sign-up\") || path.startsWith(\"/change-password\") || path.startsWith(\"/change-email\");\n      },\n      window: 10,\n      max: 3\n    }\n  ];\n  return specialRules;\n}\n\nfunction checkEndpointConflicts(options, logger2) {\n  const endpointRegistry = /* @__PURE__ */ new Map();\n  options.plugins?.forEach((plugin) => {\n    if (plugin.endpoints) {\n      for (const [key, endpoint] of Object.entries(plugin.endpoints)) {\n        if (endpoint && \"path\" in endpoint) {\n          const path = endpoint.path;\n          if (!endpointRegistry.has(path)) {\n            endpointRegistry.set(path, []);\n          }\n          endpointRegistry.get(path).push({\n            pluginId: plugin.id,\n            endpointKey: key\n          });\n        }\n      }\n    }\n  });\n  const conflicts = [];\n  for (const [path, entries] of endpointRegistry.entries()) {\n    if (entries.length > 1) {\n      const uniquePlugins = [...new Set(entries.map((e) => e.pluginId))];\n      conflicts.push({\n        path,\n        plugins: uniquePlugins\n      });\n    }\n  }\n  if (conflicts.length > 0) {\n    const conflictMessages = conflicts.map(\n      (conflict) => `  - \"${conflict.path}\" used by plugins: ${conflict.plugins.join(\", \")}`\n    ).join(\"\\n\");\n    logger2.error(\n      `Endpoint path conflicts detected! Multiple plugins are trying to use the same endpoint paths:\n${conflictMessages}\n\nTo resolve this, you can:\n\t1. Use only one of the conflicting plugins\n\t2. Configure the plugins to use different paths (if supported)\n`\n    );\n  }\n}\nfunction getEndpoints(ctx, options) {\n  const pluginEndpoints = options.plugins?.reduce(\n    (acc, plugin) => {\n      return {\n        ...acc,\n        ...plugin.endpoints\n      };\n    },\n    {}\n  );\n  const middlewares = options.plugins?.map(\n    (plugin) => plugin.middlewares?.map((m) => {\n      const middleware = (async (context) => {\n        const authContext = await ctx;\n        return m.middleware({\n          ...context,\n          context: {\n            ...authContext,\n            ...context.context\n          }\n        });\n      });\n      middleware.options = m.middleware.options;\n      return {\n        path: m.path,\n        middleware\n      };\n    })\n  ).filter((plugin) => plugin !== void 0).flat() || [];\n  const baseEndpoints = {\n    signInSocial,\n    callbackOAuth,\n    getSession: getSession(),\n    signOut,\n    signUpEmail: signUpEmail(),\n    signInEmail,\n    forgetPassword,\n    resetPassword,\n    verifyEmail,\n    sendVerificationEmail,\n    changeEmail,\n    changePassword,\n    setPassword,\n    updateUser: updateUser(),\n    deleteUser,\n    forgetPasswordCallback,\n    requestPasswordReset,\n    requestPasswordResetCallback,\n    listSessions: listSessions(),\n    revokeSession,\n    revokeSessions,\n    revokeOtherSessions,\n    linkSocialAccount,\n    listUserAccounts,\n    deleteUserCallback,\n    unlinkAccount,\n    refreshToken,\n    getAccessToken,\n    accountInfo\n  };\n  const endpoints = {\n    ...baseEndpoints,\n    ...pluginEndpoints,\n    ok,\n    error\n  };\n  const api = toAuthEndpoints(endpoints, ctx);\n  return {\n    api,\n    middlewares\n  };\n}\nconst router = (ctx, options) => {\n  const { api, middlewares } = getEndpoints(ctx, options);\n  const basePath = new URL(ctx.baseURL).pathname;\n  return createRouter(api, {\n    routerContext: ctx,\n    openapi: {\n      disabled: true\n    },\n    basePath,\n    routerMiddleware: [\n      {\n        path: \"/**\",\n        middleware: originCheckMiddleware\n      },\n      ...middlewares\n    ],\n    async onRequest(req) {\n      const disabledPaths = ctx.options.disabledPaths || [];\n      const path = new URL(req.url).pathname.replace(basePath, \"\");\n      if (disabledPaths.includes(path)) {\n        return new Response(\"Not Found\", { status: 404 });\n      }\n      for (const plugin of ctx.options.plugins || []) {\n        if (plugin.onRequest) {\n          const response = await plugin.onRequest(req, ctx);\n          if (response && \"response\" in response) {\n            return response.response;\n          }\n        }\n      }\n      return onRequestRateLimit(req, ctx);\n    },\n    async onResponse(res) {\n      for (const plugin of ctx.options.plugins || []) {\n        if (plugin.onResponse) {\n          const response = await plugin.onResponse(res, ctx);\n          if (response) {\n            return response.response;\n          }\n        }\n      }\n      return res;\n    },\n    onError(e) {\n      if (e instanceof APIError && e.status === \"FOUND\") {\n        return;\n      }\n      if (options.onAPIError?.throw) {\n        throw e;\n      }\n      if (options.onAPIError?.onError) {\n        options.onAPIError.onError(e, ctx);\n        return;\n      }\n      const optLogLevel = options.logger?.level;\n      const log = optLogLevel === \"error\" || optLogLevel === \"warn\" || optLogLevel === \"debug\" ? logger : void 0;\n      if (options.logger?.disabled !== true) {\n        if (e && typeof e === \"object\" && \"message\" in e && typeof e.message === \"string\") {\n          if (e.message.includes(\"no column\") || e.message.includes(\"column\") || e.message.includes(\"relation\") || e.message.includes(\"table\") || e.message.includes(\"does not exist\")) {\n            ctx.logger?.error(e.message);\n            return;\n          }\n        }\n        if (e instanceof APIError) {\n          if (e.status === \"INTERNAL_SERVER_ERROR\") {\n            ctx.logger.error(e.status, e);\n          }\n          log?.error(e.message);\n        } else {\n          ctx.logger?.error(\n            e && typeof e === \"object\" && \"name\" in e ? e.name : \"\",\n            e\n          );\n        }\n      }\n    }\n  });\n};\n\nexport { accountInfo, callbackOAuth, changeEmail, changePassword, checkEndpointConflicts, createAuthEndpoint, createEmailVerificationToken, deleteUser, deleteUserCallback, error, forgetPassword, forgetPasswordCallback, getAccessToken, getEndpoints, getSession, linkSocialAccount, listSessions, listUserAccounts, ok, originCheckMiddleware, refreshToken, requestPasswordReset, requestPasswordResetCallback, resetPassword, revokeOtherSessions, revokeSession, revokeSessions, router, sendVerificationEmail, setPassword, signInEmail, signInSocial, signOut, signUpEmail, unlinkAccount, updateUser, verifyEmail };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1683, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/cookies/index.mjs"],"sourcesContent":["import '../shared/better-auth.DdzSJf-n.mjs';\nimport '../shared/better-auth.CW6D9eSx.mjs';\nimport '../shared/better-auth.CMQ3rA-I.mjs';\nimport '@better-auth/utils/base64';\nexport { c as createCookieGetter, d as deleteSessionCookie, h as getCookieCache, g as getCookies, f as getSessionCookie, a as parseCookies, p as parseSetCookieHeader, b as setCookieCache, e as setCookieToHeader, s as setSessionCookie } from '../shared/better-auth.UfVWArIB.mjs';\nimport '@better-auth/utils/hmac';\nimport '../shared/better-auth.BZZKN1g7.mjs';\nimport '../shared/better-auth.CuS_eDdK.mjs';\nimport '@better-auth/utils/binary';\nimport '../shared/better-auth.BjBlybv-.mjs';\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1708, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/index.mjs"],"sourcesContent":["export { b as betterAuth, c as createTelemetry, g as getTelemetryAuthConfig } from './shared/better-auth.DlWzob1-.mjs';\nexport { B as BetterAuthError, M as MissingDependencyError } from './shared/better-auth.DdzSJf-n.mjs';\nexport { c as capitalizeFirstLetter } from './shared/better-auth.D-2CmEwz.mjs';\nexport { H as HIDE_METADATA, g as generateState, p as parseState } from './shared/better-auth.nqWf7zUe.mjs';\nexport { g as generateId } from './shared/better-auth.BUPPRXfK.mjs';\nexport { c as createLogger, l as levels, a as logger, s as shouldPublishLog } from './shared/better-auth.BjBlybv-.mjs';\nexport { APIError } from 'better-call';\nimport './shared/better-auth.DV5EHeYG.mjs';\nimport 'zod/v4';\nimport './shared/better-auth.CMQ3rA-I.mjs';\nimport '@better-auth/utils/base64';\nimport '@better-auth/utils/hmac';\nimport '@better-auth/utils/binary';\nimport './shared/better-auth.Dcv8PS7T.mjs';\nimport './api/index.mjs';\nimport './shared/better-auth.UfVWArIB.mjs';\nimport './shared/better-auth.CW6D9eSx.mjs';\nimport './shared/better-auth.BZZKN1g7.mjs';\nimport './shared/better-auth.CuS_eDdK.mjs';\nimport './shared/better-auth.O2VtDkDK.mjs';\nimport 'defu';\nimport './crypto/index.mjs';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport './shared/better-auth.B4Qoxdgc.mjs';\nimport '@better-auth/utils/random';\nimport './shared/better-auth.CSVCtb77.mjs';\nimport './shared/better-auth.B_PTVODM.mjs';\nimport './shared/better-auth.B8b3lep0.mjs';\nimport 'kysely';\nimport './shared/better-auth.BuBqXPUp.mjs';\nimport './shared/better-auth.C7uhlcDq.mjs';\nimport './shared/better-auth.YwDQhoPc.mjs';\nimport '@better-fetch/fetch';\nimport 'jose/errors';\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}}]
}