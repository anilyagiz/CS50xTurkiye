{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.CMQ3rA-I.mjs"],"sourcesContent":["const _envShim = /* @__PURE__ */ Object.create(null);\nconst _getEnv = (useShim) => globalThis.process?.env || //@ts-expect-error\nglobalThis.Deno?.env.toObject() || //@ts-expect-error\nglobalThis.__env__ || (useShim ? _envShim : globalThis);\nconst env = new Proxy(_envShim, {\n  get(_, prop) {\n    const env2 = _getEnv();\n    return env2[prop] ?? _envShim[prop];\n  },\n  has(_, prop) {\n    const env2 = _getEnv();\n    return prop in env2 || prop in _envShim;\n  },\n  set(_, prop, value) {\n    const env2 = _getEnv(true);\n    env2[prop] = value;\n    return true;\n  },\n  deleteProperty(_, prop) {\n    if (!prop) {\n      return false;\n    }\n    const env2 = _getEnv(true);\n    delete env2[prop];\n    return true;\n  },\n  ownKeys() {\n    const env2 = _getEnv(true);\n    return Object.keys(env2);\n  }\n});\nfunction toBoolean(val) {\n  return val ? val !== \"false\" : false;\n}\nconst nodeENV = typeof process !== \"undefined\" && process.env && process.env.NODE_ENV || \"\";\nconst isProduction = nodeENV === \"production\";\nconst isDevelopment = nodeENV === \"dev\" || nodeENV === \"development\";\nconst isTest = () => nodeENV === \"test\" || toBoolean(env.TEST);\nfunction getEnvVar(key, fallback) {\n  if (typeof process !== \"undefined\" && process.env) {\n    return process.env[key] ?? fallback;\n  }\n  if (typeof Deno !== \"undefined\") {\n    return Deno.env.get(key) ?? fallback;\n  }\n  if (typeof Bun !== \"undefined\") {\n    return Bun.env[key] ?? fallback;\n  }\n  return fallback;\n}\nfunction getBooleanEnvVar(key, fallback = true) {\n  const value = getEnvVar(key);\n  if (!value) return fallback;\n  return value !== \"0\" && value.toLowerCase() !== \"false\" && value !== \"\";\n}\nconst ENV = {\n  get BETTER_AUTH_TELEMETRY_ENDPOINT() {\n    return getEnvVar(\n      \"BETTER_AUTH_TELEMETRY_ENDPOINT\",\n      \"https://telemetry.better-auth.com/v1/track\"\n    );\n  }\n};\n\nexport { ENV as E, isProduction as a, isDevelopment as b, getBooleanEnvVar as c, env as e, getEnvVar as g, isTest as i };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAkCuB;AAlCvB,MAAM,WAAW,aAAa,GAAG,OAAO,MAAM,CAAC;AAC/C,MAAM,UAAU,CAAC;QAAY,qBAA2B,kBAAkB;IAC1E;WAD6B,EAAA,sBAAA,WAAW,OAAO,cAAlB,0CAAA,oBAAoB,GAAG,OACpD,mBAAA,WAAW,IAAI,cAAf,uCAAA,iBAAiB,GAAG,CAAC,QAAQ,OAAM,kBAAkB;IACrD,WAAW,OAAO,IAAI,CAAC,UAAU,WAAW,UAAU;;AACtD,MAAM,MAAM,IAAI,MAAM,UAAU;IAC9B,KAAI,CAAC,EAAE,IAAI;QACT,MAAM,OAAO;YACN;QAAP,OAAO,CAAA,aAAA,IAAI,CAAC,KAAK,cAAV,wBAAA,aAAc,QAAQ,CAAC,KAAK;IACrC;IACA,KAAI,CAAC,EAAE,IAAI;QACT,MAAM,OAAO;QACb,OAAO,QAAQ,QAAQ,QAAQ;IACjC;IACA,KAAI,CAAC,EAAE,IAAI,EAAE,KAAK;QAChB,MAAM,OAAO,QAAQ;QACrB,IAAI,CAAC,KAAK,GAAG;QACb,OAAO;IACT;IACA,gBAAe,CAAC,EAAE,IAAI;QACpB,IAAI,CAAC,MAAM;YACT,OAAO;QACT;QACA,MAAM,OAAO,QAAQ;QACrB,OAAO,IAAI,CAAC,KAAK;QACjB,OAAO;IACT;IACA;QACE,MAAM,OAAO,QAAQ;QACrB,OAAO,OAAO,IAAI,CAAC;IACrB;AACF;AACA,SAAS,UAAU,GAAG;IACpB,OAAO,MAAM,QAAQ,UAAU;AACjC;AACA,MAAM,UAAU,OAAO,2KAAO,KAAK,eAAe,2KAAO,CAAC,GAAG,uDAA4B;AACzF,MAAM,eAAe,YAAY;AACjC,MAAM,gBAAgB,YAAY,SAAS,YAAY;AACvD,MAAM,SAAS,IAAM,YAAY,UAAU,UAAU,IAAI,IAAI;AAC7D,SAAS,UAAU,GAAG,EAAE,QAAQ;IAC9B,IAAI,OAAO,2KAAO,KAAK,eAAe,2KAAO,CAAC,GAAG,EAAE;YAC1C;QAAP,OAAO,CAAA,mBAAA,2KAAO,CAAC,GAAG,CAAC,IAAI,cAAhB,8BAAA,mBAAoB;IAC7B;IACA,IAAI,OAAO,SAAS,aAAa;YACxB;QAAP,OAAO,CAAA,gBAAA,KAAK,GAAG,CAAC,GAAG,CAAC,kBAAb,2BAAA,gBAAqB;IAC9B;IACA,IAAI,OAAO,QAAQ,aAAa;YACvB;QAAP,OAAO,CAAA,eAAA,IAAI,GAAG,CAAC,IAAI,cAAZ,0BAAA,eAAgB;IACzB;IACA,OAAO;AACT;AACA,SAAS,iBAAiB,GAAG;QAAE,WAAA,iEAAW;IACxC,MAAM,QAAQ,UAAU;IACxB,IAAI,CAAC,OAAO,OAAO;IACnB,OAAO,UAAU,OAAO,MAAM,WAAW,OAAO,WAAW,UAAU;AACvE;AACA,MAAM,MAAM;IACV,IAAI,kCAAiC;QACnC,OAAO,UACL,kCACA;IAEJ;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.CkGsgrvv.mjs"],"sourcesContent":["import { atom, onMount } from 'nanostores';\n\nconst isServer = typeof window === \"undefined\";\nconst useAuthQuery = (initializedAtom, path, $fetch, options) => {\n  const value = atom({\n    data: null,\n    error: null,\n    isPending: true,\n    isRefetching: false,\n    refetch: (queryParams) => {\n      return fn(queryParams);\n    }\n  });\n  const fn = (queryParams) => {\n    const opts = typeof options === \"function\" ? options({\n      data: value.get().data,\n      error: value.get().error,\n      isPending: value.get().isPending\n    }) : options;\n    $fetch(path, {\n      ...opts,\n      query: {\n        ...opts?.query,\n        ...queryParams?.query\n      },\n      async onSuccess(context) {\n        value.set({\n          data: context.data,\n          error: null,\n          isPending: false,\n          isRefetching: false,\n          refetch: value.value.refetch\n        });\n        await opts?.onSuccess?.(context);\n      },\n      async onError(context) {\n        const { request } = context;\n        const retryAttempts = typeof request.retry === \"number\" ? request.retry : request.retry?.attempts;\n        const retryAttempt = request.retryAttempt || 0;\n        if (retryAttempts && retryAttempt < retryAttempts) return;\n        value.set({\n          error: context.error,\n          data: null,\n          isPending: false,\n          isRefetching: false,\n          refetch: value.value.refetch\n        });\n        await opts?.onError?.(context);\n      },\n      async onRequest(context) {\n        const currentValue = value.get();\n        value.set({\n          isPending: currentValue.data === null,\n          data: currentValue.data,\n          error: null,\n          isRefetching: true,\n          refetch: value.value.refetch\n        });\n        await opts?.onRequest?.(context);\n      }\n    }).catch((error) => {\n      value.set({\n        error,\n        data: null,\n        isPending: false,\n        isRefetching: false,\n        refetch: value.value.refetch\n      });\n    });\n  };\n  initializedAtom = Array.isArray(initializedAtom) ? initializedAtom : [initializedAtom];\n  let isMounted = false;\n  for (const initAtom of initializedAtom) {\n    initAtom.subscribe(() => {\n      if (isServer) {\n        return;\n      }\n      if (isMounted) {\n        fn();\n      } else {\n        onMount(value, () => {\n          setTimeout(() => {\n            fn();\n          }, 0);\n          isMounted = true;\n          return () => {\n            value.off();\n            initAtom.off();\n          };\n        });\n      }\n    });\n  }\n  return value;\n};\n\nexport { useAuthQuery as u };\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEA,MAAM,WAAW,OAAO,WAAW;AACnC,MAAM,eAAe,CAAC,iBAAiB,MAAM,QAAQ;IACnD,MAAM,QAAQ,IAAA,sJAAI,EAAC;QACjB,MAAM;QACN,OAAO;QACP,WAAW;QACX,cAAc;QACd,SAAS,CAAC;YACR,OAAO,GAAG;QACZ;IACF;IACA,MAAM,KAAK,CAAC;QACV,MAAM,OAAO,OAAO,YAAY,aAAa,QAAQ;YACnD,MAAM,MAAM,GAAG,GAAG,IAAI;YACtB,OAAO,MAAM,GAAG,GAAG,KAAK;YACxB,WAAW,MAAM,GAAG,GAAG,SAAS;QAClC,KAAK;QACL,OAAO,MAAM;YACX,GAAG,IAAI;YACP,OAAO;mBACF,iBAAA,2BAAA,KAAM,KAAK,AAAd;mBACG,wBAAA,kCAAA,YAAa,KAAK,AAArB;YACF;YACA,MAAM,WAAU,OAAO;oBAQf;gBAPN,MAAM,GAAG,CAAC;oBACR,MAAM,QAAQ,IAAI;oBAClB,OAAO;oBACP,WAAW;oBACX,cAAc;oBACd,SAAS,MAAM,KAAK,CAAC,OAAO;gBAC9B;gBACA,OAAM,iBAAA,4BAAA,kBAAA,KAAM,SAAS,cAAf,sCAAA,qBAAA,MAAkB;YAC1B;YACA,MAAM,SAAQ,OAAO;oBAEuD,gBAUpE;gBAXN,MAAM,EAAE,OAAO,EAAE,GAAG;gBACpB,MAAM,gBAAgB,OAAO,QAAQ,KAAK,KAAK,WAAW,QAAQ,KAAK,IAAG,iBAAA,QAAQ,KAAK,cAAb,qCAAA,eAAe,QAAQ;gBACjG,MAAM,eAAe,QAAQ,YAAY,IAAI;gBAC7C,IAAI,iBAAiB,eAAe,eAAe;gBACnD,MAAM,GAAG,CAAC;oBACR,OAAO,QAAQ,KAAK;oBACpB,MAAM;oBACN,WAAW;oBACX,cAAc;oBACd,SAAS,MAAM,KAAK,CAAC,OAAO;gBAC9B;gBACA,OAAM,iBAAA,4BAAA,gBAAA,KAAM,OAAO,cAAb,oCAAA,mBAAA,MAAgB;YACxB;YACA,MAAM,WAAU,OAAO;oBASf;gBARN,MAAM,eAAe,MAAM,GAAG;gBAC9B,MAAM,GAAG,CAAC;oBACR,WAAW,aAAa,IAAI,KAAK;oBACjC,MAAM,aAAa,IAAI;oBACvB,OAAO;oBACP,cAAc;oBACd,SAAS,MAAM,KAAK,CAAC,OAAO;gBAC9B;gBACA,OAAM,iBAAA,4BAAA,kBAAA,KAAM,SAAS,cAAf,sCAAA,qBAAA,MAAkB;YAC1B;QACF,GAAG,KAAK,CAAC,CAAC;YACR,MAAM,GAAG,CAAC;gBACR;gBACA,MAAM;gBACN,WAAW;gBACX,cAAc;gBACd,SAAS,MAAM,KAAK,CAAC,OAAO;YAC9B;QACF;IACF;IACA,kBAAkB,MAAM,OAAO,CAAC,mBAAmB,kBAAkB;QAAC;KAAgB;IACtF,IAAI,YAAY;IAChB,KAAK,MAAM,YAAY,gBAAiB;QACtC,SAAS,SAAS,CAAC;YACjB,IAAI,UAAU;gBACZ;YACF;YACA,IAAI,WAAW;gBACb;YACF,OAAO;gBACL,IAAA,8JAAO,EAAC,OAAO;oBACb,WAAW;wBACT;oBACF,GAAG;oBACH,YAAY;oBACZ,OAAO;wBACL,MAAM,GAAG;wBACT,SAAS,GAAG;oBACd;gBACF;YACF;QACF;IACF;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.DdzSJf-n.mjs"],"sourcesContent":["class BetterAuthError extends Error {\n  constructor(message, cause) {\n    super(message);\n    this.name = \"BetterAuthError\";\n    this.message = message;\n    this.cause = cause;\n    this.stack = \"\";\n  }\n}\nclass MissingDependencyError extends BetterAuthError {\n  constructor(pkgName) {\n    super(\n      `The package \"${pkgName}\" is required. Make sure it is installed.`,\n      pkgName\n    );\n  }\n}\n\nexport { BetterAuthError as B, MissingDependencyError as M };\n"],"names":[],"mappings":";;;;;;AAAA,MAAM,wBAAwB;IAC5B,YAAY,OAAO,EAAE,KAAK,CAAE;QAC1B,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,KAAK,GAAG;IACf;AACF;AACA,MAAM,+BAA+B;IACnC,YAAY,OAAO,CAAE;QACnB,KAAK,CACH,AAAC,gBAAuB,OAAR,SAAQ,8CACxB;IAEJ;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.CW6D9eSx.mjs"],"sourcesContent":["const getDate = (span, unit = \"ms\") => {\n  return new Date(Date.now() + (unit === \"sec\" ? span * 1e3 : span));\n};\n\nexport { getDate as g };\n"],"names":[],"mappings":";;;;AAAA,MAAM,UAAU,SAAC;QAAM,wEAAO;IAC5B,OAAO,IAAI,KAAK,KAAK,GAAG,KAAK,CAAC,SAAS,QAAQ,OAAO,MAAM,IAAI;AAClE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.BjBlybv-.mjs"],"sourcesContent":["const levels = [\"info\", \"success\", \"warn\", \"error\", \"debug\"];\nfunction shouldPublishLog(currentLogLevel, logLevel) {\n  return levels.indexOf(logLevel) <= levels.indexOf(currentLogLevel);\n}\nconst colors = {\n  reset: \"\\x1B[0m\",\n  bright: \"\\x1B[1m\",\n  dim: \"\\x1B[2m\",\n  fg: {\n    red: \"\\x1B[31m\",\n    green: \"\\x1B[32m\",\n    yellow: \"\\x1B[33m\",\n    blue: \"\\x1B[34m\",\n    magenta: \"\\x1B[35m\"}};\nconst levelColors = {\n  info: colors.fg.blue,\n  success: colors.fg.green,\n  warn: colors.fg.yellow,\n  error: colors.fg.red,\n  debug: colors.fg.magenta\n};\nconst formatMessage = (level, message) => {\n  const timestamp = (/* @__PURE__ */ new Date()).toISOString();\n  return `${colors.dim}${timestamp}${colors.reset} ${levelColors[level]}${level.toUpperCase()}${colors.reset} ${colors.bright}[Better Auth]:${colors.reset} ${message}`;\n};\nconst createLogger = (options) => {\n  const enabled = options?.disabled !== true;\n  const logLevel = options?.level ?? \"error\";\n  const LogFunc = (level, message, args = []) => {\n    if (!enabled || !shouldPublishLog(logLevel, level)) {\n      return;\n    }\n    const formattedMessage = formatMessage(level, message);\n    if (!options || typeof options.log !== \"function\") {\n      if (level === \"error\") {\n        console.error(formattedMessage, ...args);\n      } else if (level === \"warn\") {\n        console.warn(formattedMessage, ...args);\n      } else {\n        console.log(formattedMessage, ...args);\n      }\n      return;\n    }\n    options.log(level === \"success\" ? \"info\" : level, message, ...args);\n  };\n  const logger2 = Object.fromEntries(\n    levels.map((level) => [\n      level,\n      (...[message, ...args]) => LogFunc(level, message, args)\n    ])\n  );\n  return {\n    ...logger2,\n    get level() {\n      return logLevel;\n    }\n  };\n};\nconst logger = createLogger();\n\nexport { logger as a, createLogger as c, levels as l, shouldPublishLog as s };\n"],"names":[],"mappings":";;;;;;;;;;AAAA,MAAM,SAAS;IAAC;IAAQ;IAAW;IAAQ;IAAS;CAAQ;AAC5D,SAAS,iBAAiB,eAAe,EAAE,QAAQ;IACjD,OAAO,OAAO,OAAO,CAAC,aAAa,OAAO,OAAO,CAAC;AACpD;AACA,MAAM,SAAS;IACb,OAAO;IACP,QAAQ;IACR,KAAK;IACL,IAAI;QACF,KAAK;QACL,OAAO;QACP,QAAQ;QACR,MAAM;QACN,SAAS;IAAU;AAAC;AACxB,MAAM,cAAc;IAClB,MAAM,OAAO,EAAE,CAAC,IAAI;IACpB,SAAS,OAAO,EAAE,CAAC,KAAK;IACxB,MAAM,OAAO,EAAE,CAAC,MAAM;IACtB,OAAO,OAAO,EAAE,CAAC,GAAG;IACpB,OAAO,OAAO,EAAE,CAAC,OAAO;AAC1B;AACA,MAAM,gBAAgB,CAAC,OAAO;IAC5B,MAAM,YAAY,AAAC,aAAa,GAAG,IAAI,OAAQ,WAAW;IAC1D,OAAO,AAAC,GAAe,OAAb,OAAO,GAAG,EAAe,OAAZ,WAA4B,OAAhB,OAAO,KAAK,EAAC,KAAwB,OAArB,WAAW,CAAC,MAAM,EAAyB,OAAtB,MAAM,WAAW,IAAqB,OAAhB,OAAO,KAAK,EAAC,KAAiC,OAA9B,OAAO,MAAM,EAAC,kBAAgC,OAAhB,OAAO,KAAK,EAAC,KAAW,OAAR;AAC9J;AACA,MAAM,eAAe,CAAC;IACpB,MAAM,UAAU,CAAA,oBAAA,8BAAA,QAAS,QAAQ,MAAK;QACrB;IAAjB,MAAM,WAAW,CAAA,iBAAA,oBAAA,8BAAA,QAAS,KAAK,cAAd,4BAAA,iBAAkB;IACnC,MAAM,UAAU,SAAC,OAAO;YAAS,wEAAO,EAAE;QACxC,IAAI,CAAC,WAAW,CAAC,iBAAiB,UAAU,QAAQ;YAClD;QACF;QACA,MAAM,mBAAmB,cAAc,OAAO;QAC9C,IAAI,CAAC,WAAW,OAAO,QAAQ,GAAG,KAAK,YAAY;YACjD,IAAI,UAAU,SAAS;gBACrB,QAAQ,KAAK,CAAC,qBAAqB;YACrC,OAAO,IAAI,UAAU,QAAQ;gBAC3B,QAAQ,IAAI,CAAC,qBAAqB;YACpC,OAAO;gBACL,QAAQ,GAAG,CAAC,qBAAqB;YACnC;YACA;QACF;QACA,QAAQ,GAAG,CAAC,UAAU,YAAY,SAAS,OAAO,YAAY;IAChE;IACA,MAAM,UAAU,OAAO,WAAW,CAChC,OAAO,GAAG,CAAC,CAAC,QAAU;YACpB;YACA;;;;oBAAI,CAAC,SAAS,GAAG,KAAK;uBAAK,QAAQ,OAAO,SAAS;;SACpD;IAEH,OAAO;QACL,GAAG,OAAO;QACV,IAAI,SAAQ;YACV,OAAO;QACT;IACF;AACF;AACA,MAAM,SAAS","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.BZZKN1g7.mjs"],"sourcesContent":["import { a as logger } from './better-auth.BjBlybv-.mjs';\n\nfunction safeJSONParse(data) {\n  function reviver(_, value) {\n    if (typeof value === \"string\") {\n      const iso8601Regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?Z$/;\n      if (iso8601Regex.test(value)) {\n        const date = new Date(value);\n        if (!isNaN(date.getTime())) {\n          return date;\n        }\n      }\n    }\n    return value;\n  }\n  try {\n    if (typeof data !== \"string\") {\n      return data;\n    }\n    return JSON.parse(data, reviver);\n  } catch (e) {\n    logger.error(\"Error parsing JSON\", { error: e });\n    return null;\n  }\n}\n\nexport { safeJSONParse as s };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,SAAS,cAAc,IAAI;IACzB,SAAS,QAAQ,CAAC,EAAE,KAAK;QACvB,IAAI,OAAO,UAAU,UAAU;YAC7B,MAAM,eAAe;YACrB,IAAI,aAAa,IAAI,CAAC,QAAQ;gBAC5B,MAAM,OAAO,IAAI,KAAK;gBACtB,IAAI,CAAC,MAAM,KAAK,OAAO,KAAK;oBAC1B,OAAO;gBACT;YACF;QACF;QACA,OAAO;IACT;IACA,IAAI;QACF,IAAI,OAAO,SAAS,UAAU;YAC5B,OAAO;QACT;QACA,OAAO,KAAK,KAAK,CAAC,MAAM;IAC1B,EAAE,OAAO,GAAG;QACV,wLAAM,CAAC,KAAK,CAAC,sBAAsB;YAAE,OAAO;QAAE;QAC9C,OAAO;IACT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.CuS_eDdK.mjs"],"sourcesContent":["import { e as env } from './better-auth.CMQ3rA-I.mjs';\nimport { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\n\nfunction checkHasPath(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.pathname !== \"/\";\n  } catch (error) {\n    throw new BetterAuthError(\n      `Invalid base URL: ${url}. Please provide a valid base URL.`\n    );\n  }\n}\nfunction withPath(url, path = \"/api/auth\") {\n  const hasPath = checkHasPath(url);\n  if (hasPath) {\n    return url;\n  }\n  path = path.startsWith(\"/\") ? path : `/${path}`;\n  return `${url.replace(/\\/+$/, \"\")}${path}`;\n}\nfunction getBaseURL(url, path, request) {\n  if (url) {\n    return withPath(url, path);\n  }\n  const fromEnv = env.BETTER_AUTH_URL || env.NEXT_PUBLIC_BETTER_AUTH_URL || env.PUBLIC_BETTER_AUTH_URL || env.NUXT_PUBLIC_BETTER_AUTH_URL || env.NUXT_PUBLIC_AUTH_URL || (env.BASE_URL !== \"/\" ? env.BASE_URL : void 0);\n  if (fromEnv) {\n    return withPath(fromEnv, path);\n  }\n  const fromRequest = request?.headers.get(\"x-forwarded-host\");\n  const fromRequestProto = request?.headers.get(\"x-forwarded-proto\");\n  if (fromRequest && fromRequestProto) {\n    return withPath(`${fromRequestProto}://${fromRequest}`, path);\n  }\n  if (request) {\n    const url2 = getOrigin(request.url);\n    if (!url2) {\n      throw new BetterAuthError(\n        \"Could not get origin from request. Please provide a valid base URL.\"\n      );\n    }\n    return withPath(url2, path);\n  }\n  if (typeof window !== \"undefined\" && window.location) {\n    return withPath(window.location.origin, path);\n  }\n  return void 0;\n}\nfunction getOrigin(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.origin;\n  } catch (error) {\n    return null;\n  }\n}\nfunction getProtocol(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.protocol;\n  } catch (error) {\n    return null;\n  }\n}\nfunction getHost(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.host;\n  } catch (error) {\n    return url;\n  }\n}\n\nexport { getBaseURL as a, getHost as b, getProtocol as c, getOrigin as g };\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAEA,SAAS,aAAa,GAAG;IACvB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,OAAO,UAAU,QAAQ,KAAK;IAChC,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,0LAAe,CACvB,AAAC,qBAAwB,OAAJ,KAAI;IAE7B;AACF;AACA,SAAS,SAAS,GAAG;QAAE,OAAA,iEAAO;IAC5B,MAAM,UAAU,aAAa;IAC7B,IAAI,SAAS;QACX,OAAO;IACT;IACA,OAAO,KAAK,UAAU,CAAC,OAAO,OAAO,AAAC,IAAQ,OAAL;IACzC,OAAO,AAAC,GAA4B,OAA1B,IAAI,OAAO,CAAC,QAAQ,KAAW,OAAL;AACtC;AACA,SAAS,WAAW,GAAG,EAAE,IAAI,EAAE,OAAO;IACpC,IAAI,KAAK;QACP,OAAO,SAAS,KAAK;IACvB;IACA,MAAM,UAAU,0LAAG,CAAC,eAAe,IAAI,0LAAG,CAAC,2BAA2B,IAAI,0LAAG,CAAC,sBAAsB,IAAI,0LAAG,CAAC,2BAA2B,IAAI,0LAAG,CAAC,oBAAoB,IAAI,CAAC,0LAAG,CAAC,QAAQ,KAAK,MAAM,0LAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;IACpN,IAAI,SAAS;QACX,OAAO,SAAS,SAAS;IAC3B;IACA,MAAM,cAAc,oBAAA,8BAAA,QAAS,OAAO,CAAC,GAAG,CAAC;IACzC,MAAM,mBAAmB,oBAAA,8BAAA,QAAS,OAAO,CAAC,GAAG,CAAC;IAC9C,IAAI,eAAe,kBAAkB;QACnC,OAAO,SAAS,AAAC,GAAwB,OAAtB,kBAAiB,OAAiB,OAAZ,cAAe;IAC1D;IACA,IAAI,SAAS;QACX,MAAM,OAAO,UAAU,QAAQ,GAAG;QAClC,IAAI,CAAC,MAAM;YACT,MAAM,IAAI,0LAAe,CACvB;QAEJ;QACA,OAAO,SAAS,MAAM;IACxB;IACA,IAAI,OAAO,WAAW,eAAe,OAAO,QAAQ,EAAE;QACpD,OAAO,SAAS,OAAO,QAAQ,CAAC,MAAM,EAAE;IAC1C;IACA,OAAO,KAAK;AACd;AACA,SAAS,UAAU,GAAG;IACpB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,OAAO,UAAU,MAAM;IACzB,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AACA,SAAS,YAAY,GAAG;IACtB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,OAAO,UAAU,QAAQ;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AACA,SAAS,QAAQ,GAAG;IAClB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,OAAO,UAAU,IAAI;IACvB,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.UfVWArIB.mjs"],"sourcesContent":["import { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { a as isProduction, e as env } from './better-auth.CMQ3rA-I.mjs';\nimport { base64Url } from '@better-auth/utils/base64';\nimport { createHMAC } from '@better-auth/utils/hmac';\nimport { s as safeJSONParse } from './better-auth.BZZKN1g7.mjs';\nimport { a as getBaseURL } from './better-auth.CuS_eDdK.mjs';\nimport { binary } from '@better-auth/utils/binary';\n\n//#region src/index.ts\nconst s = 1e3;\nconst m = s * 60;\nconst h = m * 60;\nconst d = h * 24;\nconst w = d * 7;\nconst y = d * 365.25;\nconst mo = y / 12;\nfunction ms(value, options) {\n\tif (typeof value === \"string\") return parse(value);\n\telse if (typeof value === \"number\") return format(value);\n\tthrow new Error(`Value provided to ms() must be a string or number. value=${JSON.stringify(value)}`);\n}\n/**\n* Parse the given string and return milliseconds.\n*\n* @param str - A string to parse to milliseconds\n* @returns The parsed value in milliseconds, or `NaN` if the string can't be\n* parsed\n*/\nfunction parse(str) {\n\tif (typeof str !== \"string\" || str.length === 0 || str.length > 100) throw new Error(`Value provided to ms.parse() must be a string with length between 1 and 99. value=${JSON.stringify(str)}`);\n\tconst match = /^(?<value>-?\\d*\\.?\\d+) *(?<unit>milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|months?|mo|years?|yrs?|y)?$/i.exec(str);\n\tif (!match?.groups) return NaN;\n\tconst { value, unit = \"ms\" } = match.groups;\n\tconst n = parseFloat(value);\n\tconst matchUnit = unit.toLowerCase();\n\t/* istanbul ignore next - istanbul doesn't understand, but thankfully the TypeScript the exhaustiveness check in the default case keeps us type safe here */\n\tswitch (matchUnit) {\n\t\tcase \"years\":\n\t\tcase \"year\":\n\t\tcase \"yrs\":\n\t\tcase \"yr\":\n\t\tcase \"y\": return n * y;\n\t\tcase \"months\":\n\t\tcase \"month\":\n\t\tcase \"mo\": return n * mo;\n\t\tcase \"weeks\":\n\t\tcase \"week\":\n\t\tcase \"w\": return n * w;\n\t\tcase \"days\":\n\t\tcase \"day\":\n\t\tcase \"d\": return n * d;\n\t\tcase \"hours\":\n\t\tcase \"hour\":\n\t\tcase \"hrs\":\n\t\tcase \"hr\":\n\t\tcase \"h\": return n * h;\n\t\tcase \"minutes\":\n\t\tcase \"minute\":\n\t\tcase \"mins\":\n\t\tcase \"min\":\n\t\tcase \"m\": return n * m;\n\t\tcase \"seconds\":\n\t\tcase \"second\":\n\t\tcase \"secs\":\n\t\tcase \"sec\":\n\t\tcase \"s\": return n * s;\n\t\tcase \"milliseconds\":\n\t\tcase \"millisecond\":\n\t\tcase \"msecs\":\n\t\tcase \"msec\":\n\t\tcase \"ms\": return n;\n\t\tdefault: throw new Error(`Unknown unit \"${matchUnit}\" provided to ms.parse(). value=${JSON.stringify(str)}`);\n\t}\n}\n/**\n* Short format for `ms`.\n*/\nfunction fmtShort(ms$1) {\n\tconst msAbs = Math.abs(ms$1);\n\tif (msAbs >= y) return `${Math.round(ms$1 / y)}y`;\n\tif (msAbs >= mo) return `${Math.round(ms$1 / mo)}mo`;\n\tif (msAbs >= w) return `${Math.round(ms$1 / w)}w`;\n\tif (msAbs >= d) return `${Math.round(ms$1 / d)}d`;\n\tif (msAbs >= h) return `${Math.round(ms$1 / h)}h`;\n\tif (msAbs >= m) return `${Math.round(ms$1 / m)}m`;\n\tif (msAbs >= s) return `${Math.round(ms$1 / s)}s`;\n\treturn `${ms$1}ms`;\n}\n/**\n* Format the given integer as a string.\n*\n* @param ms - milliseconds\n* @param options - Options for the conversion\n* @returns The formatted string\n*/\nfunction format(ms$1, options) {\n\tif (typeof ms$1 !== \"number\" || !Number.isFinite(ms$1)) throw new Error(\"Value provided to ms.format() must be of type number.\");\n\treturn fmtShort(ms$1);\n}\n\nfunction parseSetCookieHeader(setCookie) {\n  const cookies = /* @__PURE__ */ new Map();\n  const cookieArray = setCookie.split(\", \");\n  cookieArray.forEach((cookieString) => {\n    const parts = cookieString.split(\";\").map((part) => part.trim());\n    const [nameValue, ...attributes] = parts;\n    const [name, ...valueParts] = nameValue.split(\"=\");\n    const value = valueParts.join(\"=\");\n    if (!name || value === void 0) {\n      return;\n    }\n    const attrObj = { value };\n    attributes.forEach((attribute) => {\n      const [attrName, ...attrValueParts] = attribute.split(\"=\");\n      const attrValue = attrValueParts.join(\"=\");\n      const normalizedAttrName = attrName.trim().toLowerCase();\n      switch (normalizedAttrName) {\n        case \"max-age\":\n          attrObj[\"max-age\"] = attrValue ? parseInt(attrValue.trim(), 10) : void 0;\n          break;\n        case \"expires\":\n          attrObj.expires = attrValue ? new Date(attrValue.trim()) : void 0;\n          break;\n        case \"domain\":\n          attrObj.domain = attrValue ? attrValue.trim() : void 0;\n          break;\n        case \"path\":\n          attrObj.path = attrValue ? attrValue.trim() : void 0;\n          break;\n        case \"secure\":\n          attrObj.secure = true;\n          break;\n        case \"httponly\":\n          attrObj.httponly = true;\n          break;\n        case \"samesite\":\n          attrObj.samesite = attrValue ? attrValue.trim().toLowerCase() : void 0;\n          break;\n        default:\n          attrObj[normalizedAttrName] = attrValue ? attrValue.trim() : true;\n          break;\n      }\n    });\n    cookies.set(name, attrObj);\n  });\n  return cookies;\n}\nfunction setCookieToHeader(headers) {\n  return (context) => {\n    const setCookieHeader = context.response.headers.get(\"set-cookie\");\n    if (!setCookieHeader) {\n      return;\n    }\n    const cookieMap = /* @__PURE__ */ new Map();\n    const existingCookiesHeader = headers.get(\"cookie\") || \"\";\n    existingCookiesHeader.split(\";\").forEach((cookie) => {\n      const [name, ...rest] = cookie.trim().split(\"=\");\n      if (name && rest.length > 0) {\n        cookieMap.set(name, rest.join(\"=\"));\n      }\n    });\n    const setCookieHeaders = setCookieHeader.split(\",\");\n    setCookieHeaders.forEach((header) => {\n      const cookies = parseSetCookieHeader(header);\n      cookies.forEach((value, name) => {\n        cookieMap.set(name, value.value);\n      });\n    });\n    const updatedCookies = Array.from(cookieMap.entries()).map(([name, value]) => `${name}=${value}`).join(\"; \");\n    headers.set(\"cookie\", updatedCookies);\n  };\n}\n\nfunction createCookieGetter(options) {\n  const secure = options.advanced?.useSecureCookies !== void 0 ? options.advanced?.useSecureCookies : options.baseURL !== void 0 ? options.baseURL.startsWith(\"https://\") ? true : false : isProduction;\n  const secureCookiePrefix = secure ? \"__Secure-\" : \"\";\n  const crossSubdomainEnabled = !!options.advanced?.crossSubDomainCookies?.enabled;\n  const domain = crossSubdomainEnabled ? options.advanced?.crossSubDomainCookies?.domain || (options.baseURL ? new URL(options.baseURL).hostname : void 0) : void 0;\n  if (crossSubdomainEnabled && !domain) {\n    throw new BetterAuthError(\n      \"baseURL is required when crossSubdomainCookies are enabled\"\n    );\n  }\n  function createCookie(cookieName, overrideAttributes = {}) {\n    const prefix = options.advanced?.cookiePrefix || \"better-auth\";\n    const name = options.advanced?.cookies?.[cookieName]?.name || `${prefix}.${cookieName}`;\n    const attributes = options.advanced?.cookies?.[cookieName]?.attributes;\n    return {\n      name: `${secureCookiePrefix}${name}`,\n      attributes: {\n        secure: !!secureCookiePrefix,\n        sameSite: \"lax\",\n        path: \"/\",\n        httpOnly: true,\n        ...crossSubdomainEnabled ? { domain } : {},\n        ...options.advanced?.defaultCookieAttributes,\n        ...overrideAttributes,\n        ...attributes\n      }\n    };\n  }\n  return createCookie;\n}\nfunction getCookies(options) {\n  const createCookie = createCookieGetter(options);\n  const sessionMaxAge = options.session?.expiresIn || ms(\"7d\") / 1e3;\n  const sessionToken = createCookie(\"session_token\", {\n    maxAge: sessionMaxAge\n  });\n  const sessionData = createCookie(\"session_data\", {\n    maxAge: options.session?.cookieCache?.maxAge || 60 * 5\n  });\n  const dontRememberToken = createCookie(\"dont_remember\");\n  return {\n    sessionToken: {\n      name: sessionToken.name,\n      options: sessionToken.attributes\n    },\n    /**\n     * This cookie is used to store the session data in the cookie\n     * This is useful for when you want to cache the session in the cookie\n     */\n    sessionData: {\n      name: sessionData.name,\n      options: sessionData.attributes\n    },\n    dontRememberToken: {\n      name: dontRememberToken.name,\n      options: dontRememberToken.attributes\n    }\n  };\n}\nasync function setCookieCache(ctx, session) {\n  const shouldStoreSessionDataInCookie = ctx.context.options.session?.cookieCache?.enabled;\n  if (shouldStoreSessionDataInCookie) {\n    const filteredSession = Object.entries(session.session).reduce(\n      (acc, [key, value]) => {\n        const fieldConfig = ctx.context.options.session?.additionalFields?.[key];\n        if (!fieldConfig || fieldConfig.returned !== false) {\n          acc[key] = value;\n        }\n        return acc;\n      },\n      {}\n    );\n    const sessionData = { session: filteredSession, user: session.user };\n    const expiresAtDate = getDate(\n      ctx.context.authCookies.sessionData.options.maxAge || 60,\n      \"sec\"\n    ).getTime();\n    const data = base64Url.encode(\n      JSON.stringify({\n        session: sessionData,\n        expiresAt: expiresAtDate,\n        signature: await createHMAC(\"SHA-256\", \"base64urlnopad\").sign(\n          ctx.context.secret,\n          JSON.stringify({\n            ...sessionData,\n            expiresAt: expiresAtDate\n          })\n        )\n      }),\n      {\n        padding: false\n      }\n    );\n    if (data.length > 4093) {\n      throw new BetterAuthError(\n        \"Session data is too large to store in the cookie. Please disable session cookie caching or reduce the size of the session data\"\n      );\n    }\n    ctx.setCookie(\n      ctx.context.authCookies.sessionData.name,\n      data,\n      ctx.context.authCookies.sessionData.options\n    );\n  }\n}\nasync function setSessionCookie(ctx, session, dontRememberMe, overrides) {\n  const dontRememberMeCookie = await ctx.getSignedCookie(\n    ctx.context.authCookies.dontRememberToken.name,\n    ctx.context.secret\n  );\n  dontRememberMe = dontRememberMe !== void 0 ? dontRememberMe : !!dontRememberMeCookie;\n  const options = ctx.context.authCookies.sessionToken.options;\n  const maxAge = dontRememberMe ? void 0 : ctx.context.sessionConfig.expiresIn;\n  await ctx.setSignedCookie(\n    ctx.context.authCookies.sessionToken.name,\n    session.session.token,\n    ctx.context.secret,\n    {\n      ...options,\n      maxAge,\n      ...overrides\n    }\n  );\n  if (dontRememberMe) {\n    await ctx.setSignedCookie(\n      ctx.context.authCookies.dontRememberToken.name,\n      \"true\",\n      ctx.context.secret,\n      ctx.context.authCookies.dontRememberToken.options\n    );\n  }\n  await setCookieCache(ctx, session);\n  ctx.context.setNewSession(session);\n  if (ctx.context.options.secondaryStorage) {\n    await ctx.context.secondaryStorage?.set(\n      session.session.token,\n      JSON.stringify({\n        user: session.user,\n        session: session.session\n      }),\n      Math.floor(\n        (new Date(session.session.expiresAt).getTime() - Date.now()) / 1e3\n      )\n    );\n  }\n}\nfunction deleteSessionCookie(ctx, skipDontRememberMe) {\n  ctx.setCookie(ctx.context.authCookies.sessionToken.name, \"\", {\n    ...ctx.context.authCookies.sessionToken.options,\n    maxAge: 0\n  });\n  ctx.setCookie(ctx.context.authCookies.sessionData.name, \"\", {\n    ...ctx.context.authCookies.sessionData.options,\n    maxAge: 0\n  });\n  if (!skipDontRememberMe) {\n    ctx.setCookie(ctx.context.authCookies.dontRememberToken.name, \"\", {\n      ...ctx.context.authCookies.dontRememberToken.options,\n      maxAge: 0\n    });\n  }\n}\nfunction parseCookies(cookieHeader) {\n  const cookies = cookieHeader.split(\"; \");\n  const cookieMap = /* @__PURE__ */ new Map();\n  cookies.forEach((cookie) => {\n    const [name, value] = cookie.split(\"=\");\n    cookieMap.set(name, value);\n  });\n  return cookieMap;\n}\nconst getSessionCookie = (request, config) => {\n  if (config?.cookiePrefix) {\n    if (config.cookieName) {\n      config.cookiePrefix = `${config.cookiePrefix}-`;\n    } else {\n      config.cookiePrefix = `${config.cookiePrefix}.`;\n    }\n  }\n  const headers = \"headers\" in request ? request.headers : request;\n  const req = request instanceof Request ? request : void 0;\n  getBaseURL(req?.url, config?.path, req);\n  const cookies = headers.get(\"cookie\");\n  if (!cookies) {\n    return null;\n  }\n  const { cookieName = \"session_token\", cookiePrefix = \"better-auth.\" } = config || {};\n  const name = `${cookiePrefix}${cookieName}`;\n  const secureCookieName = `__Secure-${name}`;\n  const parsedCookie = parseCookies(cookies);\n  const sessionToken = parsedCookie.get(name) || parsedCookie.get(secureCookieName);\n  if (sessionToken) {\n    return sessionToken;\n  }\n  return null;\n};\nconst getCookieCache = async (request, config) => {\n  const headers = request instanceof Headers ? request : request.headers;\n  const cookies = headers.get(\"cookie\");\n  if (!cookies) {\n    return null;\n  }\n  const { cookieName = \"session_data\", cookiePrefix = \"better-auth\" } = config || {};\n  const name = config?.isSecure !== void 0 ? config.isSecure ? `__Secure-${cookiePrefix}.${cookieName}` : `${cookiePrefix}.${cookieName}` : isProduction ? `__Secure-${cookiePrefix}.${cookieName}` : `${cookiePrefix}.${cookieName}`;\n  const parsedCookie = parseCookies(cookies);\n  const sessionData = parsedCookie.get(name);\n  if (sessionData) {\n    const sessionDataPayload = safeJSONParse(binary.decode(base64Url.decode(sessionData)));\n    if (!sessionDataPayload) {\n      return null;\n    }\n    const secret = config?.secret || env.BETTER_AUTH_SECRET;\n    if (!secret) {\n      throw new BetterAuthError(\n        \"getCookieCache requires a secret to be provided. Either pass it as an option or set the BETTER_AUTH_SECRET environment variable\"\n      );\n    }\n    const isValid = await createHMAC(\"SHA-256\", \"base64urlnopad\").verify(\n      secret,\n      JSON.stringify({\n        ...sessionDataPayload.session,\n        expiresAt: sessionDataPayload.expiresAt\n      }),\n      sessionDataPayload.signature\n    );\n    if (!isValid) {\n      return null;\n    }\n    return sessionDataPayload.session;\n  }\n  return null;\n};\n\nexport { parseCookies as a, setCookieCache as b, createCookieGetter as c, deleteSessionCookie as d, setCookieToHeader as e, getSessionCookie as f, getCookies as g, getCookieCache as h, ms as m, parseSetCookieHeader as p, setSessionCookie as s };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 868, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.DV5EHeYG.mjs"],"sourcesContent":["import { createMiddleware, createEndpoint, APIError } from 'better-call';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { d as deleteSessionCookie, s as setSessionCookie, b as setCookieCache } from './better-auth.UfVWArIB.mjs';\nimport * as z from 'zod/v4';\nimport { s as safeJSONParse } from './better-auth.BZZKN1g7.mjs';\nimport { createHMAC } from '@better-auth/utils/hmac';\nimport { base64Url } from '@better-auth/utils/base64';\nimport { binary } from '@better-auth/utils/binary';\n\nconst optionsMiddleware = createMiddleware(async () => {\n  return {};\n});\nconst createAuthMiddleware = createMiddleware.create({\n  use: [\n    optionsMiddleware,\n    /**\n     * Only use for post hooks\n     */\n    createMiddleware(async () => {\n      return {};\n    })\n  ]\n});\nconst createAuthEndpoint = createEndpoint.create({\n  use: [optionsMiddleware]\n});\n\nconst BASE_ERROR_CODES = {\n  USER_NOT_FOUND: \"User not found\",\n  FAILED_TO_CREATE_USER: \"Failed to create user\",\n  FAILED_TO_CREATE_SESSION: \"Failed to create session\",\n  FAILED_TO_UPDATE_USER: \"Failed to update user\",\n  FAILED_TO_GET_SESSION: \"Failed to get session\",\n  INVALID_PASSWORD: \"Invalid password\",\n  INVALID_EMAIL: \"Invalid email\",\n  INVALID_EMAIL_OR_PASSWORD: \"Invalid email or password\",\n  SOCIAL_ACCOUNT_ALREADY_LINKED: \"Social account already linked\",\n  PROVIDER_NOT_FOUND: \"Provider not found\",\n  INVALID_TOKEN: \"Invalid token\",\n  ID_TOKEN_NOT_SUPPORTED: \"id_token not supported\",\n  FAILED_TO_GET_USER_INFO: \"Failed to get user info\",\n  USER_EMAIL_NOT_FOUND: \"User email not found\",\n  EMAIL_NOT_VERIFIED: \"Email not verified\",\n  PASSWORD_TOO_SHORT: \"Password too short\",\n  PASSWORD_TOO_LONG: \"Password too long\",\n  USER_ALREADY_EXISTS: \"User already exists. Use another email.\",\n  EMAIL_CAN_NOT_BE_UPDATED: \"Email can not be updated\",\n  CREDENTIAL_ACCOUNT_NOT_FOUND: \"Credential account not found\",\n  SESSION_EXPIRED: \"Session expired. Re-authenticate to perform this action.\",\n  FAILED_TO_UNLINK_LAST_ACCOUNT: \"You can't unlink your last account\",\n  ACCOUNT_NOT_FOUND: \"Account not found\",\n  USER_ALREADY_HAS_PASSWORD: \"User already has a password. Provide that to delete the account.\"\n};\n\nconst getSessionQuerySchema = z.optional(\n  z.object({\n    /**\n     * If cookie cache is enabled, it will disable the cache\n     * and fetch the session from the database\n     */\n    disableCookieCache: z.coerce.boolean().meta({\n      description: \"Disable cookie cache and fetch session from database\"\n    }).optional(),\n    disableRefresh: z.coerce.boolean().meta({\n      description: \"Disable session refresh. Useful for checking session status, without updating the session\"\n    }).optional()\n  })\n);\nconst getSession = () => createAuthEndpoint(\n  \"/get-session\",\n  {\n    method: \"GET\",\n    query: getSessionQuerySchema,\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Get the current session\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    session: {\n                      $ref: \"#/components/schemas/Session\"\n                    },\n                    user: {\n                      $ref: \"#/components/schemas/User\"\n                    }\n                  },\n                  required: [\"session\", \"user\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      const sessionCookieToken = await ctx.getSignedCookie(\n        ctx.context.authCookies.sessionToken.name,\n        ctx.context.secret\n      );\n      if (!sessionCookieToken) {\n        return null;\n      }\n      const sessionDataCookie = ctx.getCookie(\n        ctx.context.authCookies.sessionData.name\n      );\n      const sessionDataPayload = sessionDataCookie ? safeJSONParse(binary.decode(base64Url.decode(sessionDataCookie))) : null;\n      if (sessionDataPayload) {\n        const isValid = await createHMAC(\"SHA-256\", \"base64urlnopad\").verify(\n          ctx.context.secret,\n          JSON.stringify({\n            ...sessionDataPayload.session,\n            expiresAt: sessionDataPayload.expiresAt\n          }),\n          sessionDataPayload.signature\n        );\n        if (!isValid) {\n          const dataCookie = ctx.context.authCookies.sessionData.name;\n          ctx.setCookie(dataCookie, \"\", {\n            maxAge: 0\n          });\n          return ctx.json(null);\n        }\n      }\n      const dontRememberMe = await ctx.getSignedCookie(\n        ctx.context.authCookies.dontRememberToken.name,\n        ctx.context.secret\n      );\n      if (sessionDataPayload?.session && ctx.context.options.session?.cookieCache?.enabled && !ctx.query?.disableCookieCache) {\n        const session2 = sessionDataPayload.session;\n        const hasExpired = sessionDataPayload.expiresAt < Date.now() || session2.session.expiresAt < /* @__PURE__ */ new Date();\n        if (!hasExpired) {\n          ctx.context.session = session2;\n          return ctx.json(\n            session2\n          );\n        } else {\n          const dataCookie = ctx.context.authCookies.sessionData.name;\n          ctx.setCookie(dataCookie, \"\", {\n            maxAge: 0\n          });\n        }\n      }\n      const session = await ctx.context.internalAdapter.findSession(sessionCookieToken);\n      ctx.context.session = session;\n      if (!session || session.session.expiresAt < /* @__PURE__ */ new Date()) {\n        deleteSessionCookie(ctx);\n        if (session) {\n          await ctx.context.internalAdapter.deleteSession(\n            session.session.token\n          );\n        }\n        return ctx.json(null);\n      }\n      if (dontRememberMe || ctx.query?.disableRefresh) {\n        return ctx.json(\n          session\n        );\n      }\n      const expiresIn = ctx.context.sessionConfig.expiresIn;\n      const updateAge = ctx.context.sessionConfig.updateAge;\n      const sessionIsDueToBeUpdatedDate = session.session.expiresAt.valueOf() - expiresIn * 1e3 + updateAge * 1e3;\n      const shouldBeUpdated = sessionIsDueToBeUpdatedDate <= Date.now();\n      if (shouldBeUpdated && (!ctx.query?.disableRefresh || !ctx.context.options.session?.disableSessionRefresh)) {\n        const updatedSession = await ctx.context.internalAdapter.updateSession(\n          session.session.token,\n          {\n            expiresAt: getDate(ctx.context.sessionConfig.expiresIn, \"sec\"),\n            updatedAt: /* @__PURE__ */ new Date()\n          }\n        );\n        if (!updatedSession) {\n          deleteSessionCookie(ctx);\n          return ctx.json(null, { status: 401 });\n        }\n        const maxAge = (updatedSession.expiresAt.valueOf() - Date.now()) / 1e3;\n        await setSessionCookie(\n          ctx,\n          {\n            session: updatedSession,\n            user: session.user\n          },\n          false,\n          {\n            maxAge\n          }\n        );\n        return ctx.json({\n          session: updatedSession,\n          user: session.user\n        });\n      }\n      await setCookieCache(ctx, session);\n      return ctx.json(\n        session\n      );\n    } catch (error) {\n      ctx.context.logger.error(\"INTERNAL_SERVER_ERROR\", error);\n      throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n        message: BASE_ERROR_CODES.FAILED_TO_GET_SESSION\n      });\n    }\n  }\n);\nconst getSessionFromCtx = async (ctx, config) => {\n  if (ctx.context.session) {\n    return ctx.context.session;\n  }\n  const session = await getSession()({\n    ...ctx,\n    asResponse: false,\n    headers: ctx.headers,\n    returnHeaders: false,\n    query: {\n      ...config,\n      ...ctx.query\n    }\n  }).catch((e) => {\n    return null;\n  });\n  ctx.context.session = session;\n  return session;\n};\nconst sessionMiddleware = createAuthMiddleware(async (ctx) => {\n  const session = await getSessionFromCtx(ctx);\n  if (!session?.session) {\n    throw new APIError(\"UNAUTHORIZED\");\n  }\n  return {\n    session\n  };\n});\nconst requestOnlySessionMiddleware = createAuthMiddleware(\n  async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    if (!session?.session && (ctx.request || ctx.headers)) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    return { session };\n  }\n);\nconst freshSessionMiddleware = createAuthMiddleware(async (ctx) => {\n  const session = await getSessionFromCtx(ctx);\n  if (!session?.session) {\n    throw new APIError(\"UNAUTHORIZED\");\n  }\n  if (ctx.context.sessionConfig.freshAge === 0) {\n    return {\n      session\n    };\n  }\n  const freshAge = ctx.context.sessionConfig.freshAge;\n  const lastUpdated = session.session.updatedAt?.valueOf() || session.session.createdAt.valueOf();\n  const now = Date.now();\n  const isFresh = now - lastUpdated < freshAge * 1e3;\n  if (!isFresh) {\n    throw new APIError(\"FORBIDDEN\", {\n      message: \"Session is not fresh\"\n    });\n  }\n  return {\n    session\n  };\n});\nconst listSessions = () => createAuthEndpoint(\n  \"/list-sessions\",\n  {\n    method: \"GET\",\n    use: [sessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"List all active sessions for the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"array\",\n                  items: {\n                    $ref: \"#/components/schemas/Session\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      const sessions = await ctx.context.internalAdapter.listSessions(\n        ctx.context.session.user.id\n      );\n      const activeSessions = sessions.filter((session) => {\n        return session.expiresAt > /* @__PURE__ */ new Date();\n      });\n      return ctx.json(\n        activeSessions\n      );\n    } catch (e) {\n      ctx.context.logger.error(e);\n      throw ctx.error(\"INTERNAL_SERVER_ERROR\");\n    }\n  }\n);\nconst revokeSession = createAuthEndpoint(\n  \"/revoke-session\",\n  {\n    method: \"POST\",\n    body: z.object({\n      token: z.string().meta({\n        description: \"The token to revoke\"\n      })\n    }),\n    use: [sessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Revoke a single session\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  token: {\n                    type: \"string\",\n                    description: \"The token to revoke\"\n                  }\n                },\n                required: [\"token\"]\n              }\n            }\n          }\n        },\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if the session was revoked successfully\"\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const token = ctx.body.token;\n    const findSession = await ctx.context.internalAdapter.findSession(token);\n    if (!findSession) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Session not found\"\n      });\n    }\n    if (findSession.session.userId !== ctx.context.session.user.id) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    try {\n      await ctx.context.internalAdapter.deleteSession(token);\n    } catch (error) {\n      ctx.context.logger.error(\n        error && typeof error === \"object\" && \"name\" in error ? error.name : \"\",\n        error\n      );\n      throw new APIError(\"INTERNAL_SERVER_ERROR\");\n    }\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst revokeSessions = createAuthEndpoint(\n  \"/revoke-sessions\",\n  {\n    method: \"POST\",\n    use: [sessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Revoke all sessions for the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if all sessions were revoked successfully\"\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      await ctx.context.internalAdapter.deleteSessions(\n        ctx.context.session.user.id\n      );\n    } catch (error) {\n      ctx.context.logger.error(\n        error && typeof error === \"object\" && \"name\" in error ? error.name : \"\",\n        error\n      );\n      throw new APIError(\"INTERNAL_SERVER_ERROR\");\n    }\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst revokeOtherSessions = createAuthEndpoint(\n  \"/revoke-other-sessions\",\n  {\n    method: \"POST\",\n    requireHeaders: true,\n    use: [sessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Revoke all other sessions for the user except the current one\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if all other sessions were revoked successfully\"\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    if (!session.user) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    const sessions = await ctx.context.internalAdapter.listSessions(\n      session.user.id\n    );\n    const activeSessions = sessions.filter((session2) => {\n      return session2.expiresAt > /* @__PURE__ */ new Date();\n    });\n    const otherSessions = activeSessions.filter(\n      (session2) => session2.token !== ctx.context.session.session.token\n    );\n    await Promise.all(\n      otherSessions.map(\n        (session2) => ctx.context.internalAdapter.deleteSession(session2.token)\n      )\n    );\n    return ctx.json({\n      status: true\n    });\n  }\n);\n\nexport { BASE_ERROR_CODES as B, createAuthEndpoint as a, getSession as b, createAuthMiddleware as c, revokeSessions as d, revokeSession as e, freshSessionMiddleware as f, getSessionFromCtx as g, getSessionQuerySchema as h, requestOnlySessionMiddleware as i, listSessions as l, optionsMiddleware as o, revokeOtherSessions as r, sessionMiddleware as s };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1358, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.B4Qoxdgc.mjs"],"sourcesContent":["import { createRandomStringGenerator } from '@better-auth/utils/random';\n\nconst generateRandomString = createRandomStringGenerator(\n  \"a-z\",\n  \"0-9\",\n  \"A-Z\",\n  \"-_\"\n);\n\nexport { generateRandomString as g };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,uBAAuB,IAAA,8LAA2B,EACtD,OACA,OACA,OACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1370, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.BUPPRXfK.mjs"],"sourcesContent":["import { createRandomStringGenerator } from '@better-auth/utils/random';\n\nconst generateId = (size) => {\n  return createRandomStringGenerator(\"a-z\", \"A-Z\", \"0-9\")(size || 32);\n};\n\nexport { generateId as g };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,aAAa,CAAC;IAClB,OAAO,IAAA,8LAA2B,EAAC,OAAO,OAAO,OAAO,QAAQ;AAClE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1384, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.Dcv8PS7T.mjs"],"sourcesContent":["import * as z from 'zod/v4';\nimport { APIError } from 'better-call';\n\nconst coreSchema = z.object({\n  id: z.string(),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  updatedAt: z.date().default(() => /* @__PURE__ */ new Date())\n});\nconst accountSchema = coreSchema.extend({\n  providerId: z.string(),\n  accountId: z.string(),\n  userId: z.coerce.string(),\n  accessToken: z.string().nullish(),\n  refreshToken: z.string().nullish(),\n  idToken: z.string().nullish(),\n  /**\n   * Access token expires at\n   */\n  accessTokenExpiresAt: z.date().nullish(),\n  /**\n   * Refresh token expires at\n   */\n  refreshTokenExpiresAt: z.date().nullish(),\n  /**\n   * The scopes that the user has authorized\n   */\n  scope: z.string().nullish(),\n  /**\n   * Password is only stored in the credential provider\n   */\n  password: z.string().nullish()\n});\nconst userSchema = coreSchema.extend({\n  email: z.string().transform((val) => val.toLowerCase()),\n  emailVerified: z.boolean().default(false),\n  name: z.string(),\n  image: z.string().nullish()\n});\nconst sessionSchema = coreSchema.extend({\n  userId: z.coerce.string(),\n  expiresAt: z.date(),\n  token: z.string(),\n  ipAddress: z.string().nullish(),\n  userAgent: z.string().nullish()\n});\nconst verificationSchema = coreSchema.extend({\n  value: z.string(),\n  expiresAt: z.date(),\n  identifier: z.string()\n});\nfunction parseOutputData(data, schema) {\n  const fields = schema.fields;\n  const parsedData = {};\n  for (const key in data) {\n    const field = fields[key];\n    if (!field) {\n      parsedData[key] = data[key];\n      continue;\n    }\n    if (field.returned === false) {\n      continue;\n    }\n    parsedData[key] = data[key];\n  }\n  return parsedData;\n}\nfunction getAllFields(options, table) {\n  let schema = {\n    ...table === \"user\" ? options.user?.additionalFields : {},\n    ...table === \"session\" ? options.session?.additionalFields : {}\n  };\n  for (const plugin of options.plugins || []) {\n    if (plugin.schema && plugin.schema[table]) {\n      schema = {\n        ...schema,\n        ...plugin.schema[table].fields\n      };\n    }\n  }\n  return schema;\n}\nfunction parseUserOutput(options, user) {\n  const schema = getAllFields(options, \"user\");\n  return parseOutputData(user, { fields: schema });\n}\nfunction parseAccountOutput(options, account) {\n  const schema = getAllFields(options, \"account\");\n  return parseOutputData(account, { fields: schema });\n}\nfunction parseSessionOutput(options, session) {\n  const schema = getAllFields(options, \"session\");\n  return parseOutputData(session, { fields: schema });\n}\nfunction parseInputData(data, schema) {\n  const action = schema.action || \"create\";\n  const fields = schema.fields;\n  const parsedData = {};\n  for (const key in fields) {\n    if (key in data) {\n      if (fields[key].input === false) {\n        if (fields[key].defaultValue) {\n          parsedData[key] = fields[key].defaultValue;\n          continue;\n        }\n        continue;\n      }\n      if (fields[key].validator?.input && data[key] !== void 0) {\n        parsedData[key] = fields[key].validator.input.parse(data[key]);\n        continue;\n      }\n      if (fields[key].transform?.input && data[key] !== void 0) {\n        parsedData[key] = fields[key].transform?.input(data[key]);\n        continue;\n      }\n      parsedData[key] = data[key];\n      continue;\n    }\n    if (fields[key].defaultValue && action === \"create\") {\n      parsedData[key] = fields[key].defaultValue;\n      continue;\n    }\n    if (fields[key].required && action === \"create\") {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `${key} is required`\n      });\n    }\n  }\n  return parsedData;\n}\nfunction parseUserInput(options, user, action) {\n  const schema = getAllFields(options, \"user\");\n  return parseInputData(user || {}, { fields: schema, action });\n}\nfunction parseAdditionalUserInput(options, user) {\n  const schema = getAllFields(options, \"user\");\n  return parseInputData(user || {}, { fields: schema });\n}\nfunction parseAccountInput(options, account) {\n  const schema = getAllFields(options, \"account\");\n  return parseInputData(account, { fields: schema });\n}\nfunction parseSessionInput(options, session) {\n  const schema = getAllFields(options, \"session\");\n  return parseInputData(session, { fields: schema });\n}\nfunction mergeSchema(schema, newSchema) {\n  if (!newSchema) {\n    return schema;\n  }\n  for (const table in newSchema) {\n    const newModelName = newSchema[table]?.modelName;\n    if (newModelName) {\n      schema[table].modelName = newModelName;\n    }\n    for (const field in schema[table].fields) {\n      const newField = newSchema[table]?.fields?.[field];\n      if (!newField) {\n        continue;\n      }\n      schema[table].fields[field].fieldName = newField;\n    }\n  }\n  return schema;\n}\n\nexport { accountSchema as a, parseUserOutput as b, coreSchema as c, parseAccountOutput as d, parseSessionOutput as e, parseInputData as f, getAllFields as g, parseUserInput as h, parseAdditionalUserInput as i, parseAccountInput as j, parseSessionInput as k, mergeSchema as m, parseOutputData as p, sessionSchema as s, userSchema as u, verificationSchema as v };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1606, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.DQunmJlF.mjs"],"sourcesContent":["import { defaultRoles } from '../plugins/organization/access/index.mjs';\nimport * as z from 'zod/v4';\nimport { APIError } from 'better-call';\nimport './better-auth.nqWf7zUe.mjs';\nimport './better-auth.DV5EHeYG.mjs';\nimport './better-auth.CMQ3rA-I.mjs';\nimport '@better-auth/utils/base64';\nimport '@better-auth/utils/hmac';\nimport './better-auth.BjBlybv-.mjs';\nimport '@better-auth/utils/binary';\nimport './better-auth.Dcv8PS7T.mjs';\n\nlet cacheAllRoles = /* @__PURE__ */ new Map();\nconst hasPermission = async (input, ctx) => {\n  let acRoles = { ...input.options.roles || defaultRoles };\n  if (ctx && input.organizationId && input.options.dynamicAccessControl?.enabled && input.options.ac && !input.useMemoryCache) {\n    const roles = await ctx.context.adapter.findMany({\n      model: \"organizationRole\",\n      where: [\n        {\n          field: \"organizationId\",\n          value: input.organizationId\n        }\n      ]\n    });\n    for (const { role, permission: permissionsString } of roles) {\n      if (role in acRoles) continue;\n      const result = z.record(z.string(), z.array(z.string())).safeParse(JSON.parse(permissionsString));\n      if (!result.success) {\n        ctx.context.logger.error(\n          \"[hasPermission] Invalid permissions for role \" + role,\n          {\n            permissions: JSON.parse(permissionsString)\n          }\n        );\n        throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n          message: \"Invalid permissions for role \" + role\n        });\n      }\n      acRoles[role] = input.options.ac.newRole(result.data);\n    }\n  }\n  if (input.useMemoryCache) {\n    acRoles = cacheAllRoles.get(input.organizationId) || acRoles;\n  }\n  cacheAllRoles.set(input.organizationId, acRoles);\n  return hasPermissionFn(input, acRoles);\n};\nconst clientSideHasPermission = async (input) => {\n  const acRoles = input.options.roles || defaultRoles;\n  return hasPermissionFn(input, acRoles);\n};\nconst hasPermissionFn = (input, acRoles) => {\n  if (!input.permissions && !input.permission) return false;\n  const roles = input.role.split(\",\");\n  const creatorRole = input.options.creatorRole || \"owner\";\n  const isCreator = roles.includes(creatorRole);\n  const allowCreatorsAllPermissions = input.allowCreatorAllPermissions || false;\n  if (isCreator && allowCreatorsAllPermissions) return true;\n  for (const role of roles) {\n    const _role = acRoles[role];\n    const result = _role?.authorize(input.permissions ?? input.permission);\n    if (result?.success) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport { clientSideHasPermission as c, hasPermission as h };\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAEA,IAAI,gBAAgB,aAAa,GAAG,IAAI;AACxC,MAAM,gBAAgB,OAAO,OAAO;QAEC;IADnC,IAAI,UAAU;QAAE,GAAG,MAAM,OAAO,CAAC,KAAK,IAAI,wMAAY;IAAC;IACvD,IAAI,OAAO,MAAM,cAAc,MAAI,sCAAA,MAAM,OAAO,CAAC,oBAAoB,cAAlC,0DAAA,oCAAoC,OAAO,KAAI,MAAM,OAAO,CAAC,EAAE,IAAI,CAAC,MAAM,cAAc,EAAE;QAC3H,MAAM,QAAQ,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC;YAC/C,OAAO;YACP,OAAO;gBACL;oBACE,OAAO;oBACP,OAAO,MAAM,cAAc;gBAC7B;aACD;QACH;QACA,KAAK,MAAM,EAAE,IAAI,EAAE,YAAY,iBAAiB,EAAE,IAAI,MAAO;YAC3D,IAAI,QAAQ,SAAS;YACrB,MAAM,SAAS,8LAAQ,CAAC,8LAAQ,IAAI,6LAAO,CAAC,8LAAQ,KAAK,SAAS,CAAC,KAAK,KAAK,CAAC;YAC9E,IAAI,CAAC,OAAO,OAAO,EAAE;gBACnB,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CACtB,kDAAkD,MAClD;oBACE,aAAa,KAAK,KAAK,CAAC;gBAC1B;gBAEF,MAAM,IAAI,8JAAQ,CAAC,yBAAyB;oBAC1C,SAAS,kCAAkC;gBAC7C;YACF;YACA,OAAO,CAAC,KAAK,GAAG,MAAM,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,IAAI;QACtD;IACF;IACA,IAAI,MAAM,cAAc,EAAE;QACxB,UAAU,cAAc,GAAG,CAAC,MAAM,cAAc,KAAK;IACvD;IACA,cAAc,GAAG,CAAC,MAAM,cAAc,EAAE;IACxC,OAAO,gBAAgB,OAAO;AAChC;AACA,MAAM,0BAA0B,OAAO;IACrC,MAAM,UAAU,MAAM,OAAO,CAAC,KAAK,IAAI,wMAAY;IACnD,OAAO,gBAAgB,OAAO;AAChC;AACA,MAAM,kBAAkB,CAAC,OAAO;IAC9B,IAAI,CAAC,MAAM,WAAW,IAAI,CAAC,MAAM,UAAU,EAAE,OAAO;IACpD,MAAM,QAAQ,MAAM,IAAI,CAAC,KAAK,CAAC;IAC/B,MAAM,cAAc,MAAM,OAAO,CAAC,WAAW,IAAI;IACjD,MAAM,YAAY,MAAM,QAAQ,CAAC;IACjC,MAAM,8BAA8B,MAAM,0BAA0B,IAAI;IACxE,IAAI,aAAa,6BAA6B,OAAO;IACrD,KAAK,MAAM,QAAQ,MAAO;QACxB,MAAM,QAAQ,OAAO,CAAC,KAAK;YACK;QAAhC,MAAM,SAAS,kBAAA,4BAAA,MAAO,SAAS,CAAC,CAAA,qBAAA,MAAM,WAAW,cAAjB,gCAAA,qBAAqB,MAAM,UAAU;QACrE,IAAI,mBAAA,6BAAA,OAAQ,OAAO,EAAE;YACnB,OAAO;QACT;IACF;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1697, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.Ddw8bVyV.mjs"],"sourcesContent":["const twoFactorClient = (options) => {\n  return {\n    id: \"two-factor\",\n    $InferServerPlugin: {},\n    atomListeners: [\n      {\n        matcher: (path) => path.startsWith(\"/two-factor/\"),\n        signal: \"$sessionSignal\"\n      }\n    ],\n    pathMethods: {\n      \"/two-factor/disable\": \"POST\",\n      \"/two-factor/enable\": \"POST\",\n      \"/two-factor/send-otp\": \"POST\",\n      \"/two-factor/generate-backup-codes\": \"POST\"\n    },\n    fetchPlugins: [\n      {\n        id: \"two-factor\",\n        name: \"two-factor\",\n        hooks: {\n          async onSuccess(context) {\n            if (context.data?.twoFactorRedirect) {\n              if (options?.onTwoFactorRedirect) {\n                await options.onTwoFactorRedirect();\n              }\n            }\n          }\n        }\n      }\n    ]\n  };\n};\n\nexport { twoFactorClient as t };\n"],"names":[],"mappings":";;;;AAAA,MAAM,kBAAkB,CAAC;IACvB,OAAO;QACL,IAAI;QACJ,oBAAoB,CAAC;QACrB,eAAe;YACb;gBACE,SAAS,CAAC,OAAS,KAAK,UAAU,CAAC;gBACnC,QAAQ;YACV;SACD;QACD,aAAa;YACX,uBAAuB;YACvB,sBAAsB;YACtB,wBAAwB;YACxB,qCAAqC;QACvC;QACA,cAAc;YACZ;gBACE,IAAI;gBACJ,MAAM;gBACN,OAAO;oBACL,MAAM,WAAU,OAAO;4BACjB;wBAAJ,KAAI,gBAAA,QAAQ,IAAI,cAAZ,oCAAA,cAAc,iBAAiB,EAAE;4BACnC,IAAI,oBAAA,8BAAA,QAAS,mBAAmB,EAAE;gCAChC,MAAM,QAAQ,mBAAmB;4BACnC;wBACF;oBACF;gBACF;YACF;SACD;IACH;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1740, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.bkwPl2G4.mjs"],"sourcesContent":["import { defaultRoles } from '../plugins/admin/access/index.mjs';\n\nconst hasPermission = (input) => {\n  if (input.userId && input.options?.adminUserIds?.includes(input.userId)) {\n    return true;\n  }\n  if (!input.permissions && !input.permission) {\n    return false;\n  }\n  const roles = (input.role || input.options?.defaultRole || \"user\").split(\",\");\n  const acRoles = input.options?.roles || defaultRoles;\n  for (const role of roles) {\n    const _role = acRoles[role];\n    const result = _role?.authorize(input.permission ?? input.permissions);\n    if (result?.success) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport { hasPermission as h };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,gBAAgB,CAAC;QACD,6BAAA,gBAMS,iBACb;IAPhB,IAAI,MAAM,MAAM,MAAI,iBAAA,MAAM,OAAO,cAAb,sCAAA,8BAAA,eAAe,YAAY,cAA3B,kDAAA,4BAA6B,QAAQ,CAAC,MAAM,MAAM,IAAG;QACvE,OAAO;IACT;IACA,IAAI,CAAC,MAAM,WAAW,IAAI,CAAC,MAAM,UAAU,EAAE;QAC3C,OAAO;IACT;IACA,MAAM,QAAQ,CAAC,MAAM,IAAI,MAAI,kBAAA,MAAM,OAAO,cAAb,sCAAA,gBAAe,WAAW,KAAI,MAAM,EAAE,KAAK,CAAC;IACzE,MAAM,UAAU,EAAA,kBAAA,MAAM,OAAO,cAAb,sCAAA,gBAAe,KAAK,KAAI,iMAAY;IACpD,KAAK,MAAM,QAAQ,MAAO;QACxB,MAAM,QAAQ,OAAO,CAAC,KAAK;YACK;QAAhC,MAAM,SAAS,kBAAA,4BAAA,MAAO,SAAS,CAAC,CAAA,oBAAA,MAAM,UAAU,cAAhB,+BAAA,oBAAoB,MAAM,WAAW;QACrE,IAAI,mBAAA,6BAAA,OAAQ,OAAO,EAAE;YACnB,OAAO;QACT;IACF;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1771, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.BpA03GIs.mjs"],"sourcesContent":["const deviceAuthorizationClient = () => {\n  return {\n    id: \"device-authorization\",\n    $InferServerPlugin: {},\n    pathMethods: {\n      \"/device/code\": \"POST\",\n      \"/device/token\": \"POST\",\n      \"/device\": \"GET\",\n      \"/device/approve\": \"POST\",\n      \"/device/deny\": \"POST\"\n    }\n  };\n};\n\nexport { deviceAuthorizationClient as d };\n"],"names":[],"mappings":";;;;AAAA,MAAM,4BAA4B;IAChC,OAAO;QACL,IAAI;QACJ,oBAAoB,CAAC;QACrB,aAAa;YACX,gBAAgB;YAChB,iBAAiB;YACjB,WAAW;YACX,mBAAmB;YACnB,gBAAgB;QAClB;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1793, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.ffWeg50w.mjs"],"sourcesContent":["const PROTO_POLLUTION_PATTERNS = {\n  proto: /\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/,\n  constructor: /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/,\n  protoShort: /\"__proto__\"\\s*:/,\n  constructorShort: /\"constructor\"\\s*:/\n};\nconst JSON_SIGNATURE = /^\\s*[\"[{]|^\\s*-?\\d{1,16}(\\.\\d{1,17})?([Ee][+-]?\\d+)?\\s*$/;\nconst SPECIAL_VALUES = {\n  true: true,\n  false: false,\n  null: null,\n  undefined: void 0,\n  nan: Number.NaN,\n  infinity: Number.POSITIVE_INFINITY,\n  \"-infinity\": Number.NEGATIVE_INFINITY\n};\nconst ISO_DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{1,7}))?(?:Z|([+-])(\\d{2}):(\\d{2}))$/;\nfunction isValidDate(date) {\n  return date instanceof Date && !isNaN(date.getTime());\n}\nfunction parseISODate(value) {\n  const match = ISO_DATE_REGEX.exec(value);\n  if (!match) return null;\n  const [\n    ,\n    year,\n    month,\n    day,\n    hour,\n    minute,\n    second,\n    ms,\n    offsetSign,\n    offsetHour,\n    offsetMinute\n  ] = match;\n  let date = new Date(\n    Date.UTC(\n      parseInt(year, 10),\n      parseInt(month, 10) - 1,\n      parseInt(day, 10),\n      parseInt(hour, 10),\n      parseInt(minute, 10),\n      parseInt(second, 10),\n      ms ? parseInt(ms.padEnd(3, \"0\"), 10) : 0\n    )\n  );\n  if (offsetSign) {\n    const offset = (parseInt(offsetHour, 10) * 60 + parseInt(offsetMinute, 10)) * (offsetSign === \"+\" ? -1 : 1);\n    date.setUTCMinutes(date.getUTCMinutes() + offset);\n  }\n  return isValidDate(date) ? date : null;\n}\nfunction betterJSONParse(value, options = {}) {\n  const {\n    strict = false,\n    warnings = false,\n    reviver,\n    parseDates = true\n  } = options;\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const trimmed = value.trim();\n  if (trimmed[0] === '\"' && trimmed.endsWith('\"') && !trimmed.slice(1, -1).includes('\"')) {\n    return trimmed.slice(1, -1);\n  }\n  const lowerValue = trimmed.toLowerCase();\n  if (lowerValue.length <= 9 && lowerValue in SPECIAL_VALUES) {\n    return SPECIAL_VALUES[lowerValue];\n  }\n  if (!JSON_SIGNATURE.test(trimmed)) {\n    if (strict) {\n      throw new SyntaxError(\"[better-json] Invalid JSON\");\n    }\n    return value;\n  }\n  const hasProtoPattern = Object.entries(PROTO_POLLUTION_PATTERNS).some(\n    ([key, pattern]) => {\n      const matches = pattern.test(trimmed);\n      if (matches && warnings) {\n        console.warn(\n          `[better-json] Detected potential prototype pollution attempt using ${key} pattern`\n        );\n      }\n      return matches;\n    }\n  );\n  if (hasProtoPattern && strict) {\n    throw new Error(\n      \"[better-json] Potential prototype pollution attempt detected\"\n    );\n  }\n  try {\n    const secureReviver = (key, value2) => {\n      if (key === \"__proto__\" || key === \"constructor\" && value2 && typeof value2 === \"object\" && \"prototype\" in value2) {\n        if (warnings) {\n          console.warn(\n            `[better-json] Dropping \"${key}\" key to prevent prototype pollution`\n          );\n        }\n        return void 0;\n      }\n      if (parseDates && typeof value2 === \"string\") {\n        const date = parseISODate(value2);\n        if (date) {\n          return date;\n        }\n      }\n      return reviver ? reviver(key, value2) : value2;\n    };\n    return JSON.parse(trimmed, secureReviver);\n  } catch (error) {\n    if (strict) {\n      throw error;\n    }\n    return value;\n  }\n}\nfunction parseJSON(value, options = { strict: true }) {\n  return betterJSONParse(value, options);\n}\n\nexport { parseJSON as p };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1894, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.D7Ni8r_z.mjs"],"sourcesContent":["import { createFetch } from '@better-fetch/fetch';\nimport { a as getBaseURL } from './better-auth.CuS_eDdK.mjs';\nimport { atom } from 'nanostores';\nimport { u as useAuthQuery } from './better-auth.CkGsgrvv.mjs';\nimport { p as parseJSON } from './better-auth.ffWeg50w.mjs';\n\nconst redirectPlugin = {\n  id: \"redirect\",\n  name: \"Redirect\",\n  hooks: {\n    onSuccess(context) {\n      if (context.data?.url && context.data?.redirect) {\n        if (typeof window !== \"undefined\" && window.location) {\n          if (window.location) {\n            try {\n              window.location.href = context.data.url;\n            } catch {\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction getSessionAtom($fetch) {\n  const $signal = atom(false);\n  const session = useAuthQuery($signal, \"/get-session\", $fetch, {\n    method: \"GET\"\n  });\n  return {\n    session,\n    $sessionSignal: $signal\n  };\n}\n\nconst getClientConfig = (options) => {\n  const isCredentialsSupported = \"credentials\" in Request.prototype;\n  const baseURL = getBaseURL(options?.baseURL, options?.basePath);\n  const pluginsFetchPlugins = options?.plugins?.flatMap((plugin) => plugin.fetchPlugins).filter((pl) => pl !== void 0) || [];\n  const lifeCyclePlugin = {\n    id: \"lifecycle-hooks\",\n    name: \"lifecycle-hooks\",\n    hooks: {\n      onSuccess: options?.fetchOptions?.onSuccess,\n      onError: options?.fetchOptions?.onError,\n      onRequest: options?.fetchOptions?.onRequest,\n      onResponse: options?.fetchOptions?.onResponse\n    }\n  };\n  const { onSuccess, onError, onRequest, onResponse, ...restOfFetchOptions } = options?.fetchOptions || {};\n  const $fetch = createFetch({\n    baseURL,\n    ...isCredentialsSupported ? { credentials: \"include\" } : {},\n    method: \"GET\",\n    jsonParser(text) {\n      if (!text) {\n        return null;\n      }\n      return parseJSON(text, {\n        strict: false\n      });\n    },\n    customFetchImpl: fetch,\n    ...restOfFetchOptions,\n    plugins: [\n      lifeCyclePlugin,\n      ...restOfFetchOptions.plugins || [],\n      ...options?.disableDefaultFetchPlugins ? [] : [redirectPlugin],\n      ...pluginsFetchPlugins\n    ]\n  });\n  const { $sessionSignal, session } = getSessionAtom($fetch);\n  const plugins = options?.plugins || [];\n  let pluginsActions = {};\n  let pluginsAtoms = {\n    $sessionSignal,\n    session\n  };\n  let pluginPathMethods = {\n    \"/sign-out\": \"POST\",\n    \"/revoke-sessions\": \"POST\",\n    \"/revoke-other-sessions\": \"POST\",\n    \"/delete-user\": \"POST\"\n  };\n  const atomListeners = [\n    {\n      signal: \"$sessionSignal\",\n      matcher(path) {\n        return path === \"/sign-out\" || path === \"/update-user\" || path.startsWith(\"/sign-in\") || path.startsWith(\"/sign-up\") || path === \"/delete-user\" || path === \"/verify-email\";\n      }\n    }\n  ];\n  for (const plugin of plugins) {\n    if (plugin.getAtoms) {\n      Object.assign(pluginsAtoms, plugin.getAtoms?.($fetch));\n    }\n    if (plugin.pathMethods) {\n      Object.assign(pluginPathMethods, plugin.pathMethods);\n    }\n    if (plugin.atomListeners) {\n      atomListeners.push(...plugin.atomListeners);\n    }\n  }\n  const $store = {\n    notify: (signal) => {\n      pluginsAtoms[signal].set(\n        !pluginsAtoms[signal].get()\n      );\n    },\n    listen: (signal, listener) => {\n      pluginsAtoms[signal].subscribe(listener);\n    },\n    atoms: pluginsAtoms\n  };\n  for (const plugin of plugins) {\n    if (plugin.getActions) {\n      Object.assign(\n        pluginsActions,\n        plugin.getActions?.($fetch, $store, options)\n      );\n    }\n  }\n  return {\n    pluginsActions,\n    pluginsAtoms,\n    pluginPathMethods,\n    atomListeners,\n    $fetch,\n    $store\n  };\n};\n\nfunction isAtom(value) {\n  return typeof value === \"object\" && value !== null && \"get\" in value && typeof value.get === \"function\" && \"lc\" in value && typeof value.lc === \"number\";\n}\n\nfunction getMethod(path, knownPathMethods, args) {\n  const method = knownPathMethods[path];\n  const { fetchOptions, query, ...body } = args || {};\n  if (method) {\n    return method;\n  }\n  if (fetchOptions?.method) {\n    return fetchOptions.method;\n  }\n  if (body && Object.keys(body).length > 0) {\n    return \"POST\";\n  }\n  return \"GET\";\n}\nfunction createDynamicPathProxy(routes, client, knownPathMethods, atoms, atomListeners) {\n  function createProxy(path = []) {\n    return new Proxy(function() {\n    }, {\n      get(target, prop) {\n        if (prop === \"then\" || prop === \"catch\" || prop === \"finally\") {\n          return void 0;\n        }\n        const fullPath = [...path, prop];\n        let current = routes;\n        for (const segment of fullPath) {\n          if (current && typeof current === \"object\" && segment in current) {\n            current = current[segment];\n          } else {\n            current = void 0;\n            break;\n          }\n        }\n        if (typeof current === \"function\") {\n          return current;\n        }\n        if (isAtom(current)) {\n          return current;\n        }\n        return createProxy(fullPath);\n      },\n      apply: async (_, __, args) => {\n        const routePath = \"/\" + path.map(\n          (segment) => segment.replace(/[A-Z]/g, (letter) => `-${letter.toLowerCase()}`)\n        ).join(\"/\");\n        const arg = args[0] || {};\n        const fetchOptions = args[1] || {};\n        const { query, fetchOptions: argFetchOptions, ...body } = arg;\n        const options = {\n          ...fetchOptions,\n          ...argFetchOptions\n        };\n        const method = getMethod(routePath, knownPathMethods, arg);\n        return await client(routePath, {\n          ...options,\n          body: method === \"GET\" ? void 0 : {\n            ...body,\n            ...options?.body || {}\n          },\n          query: query || options?.query,\n          method,\n          async onSuccess(context) {\n            await options?.onSuccess?.(context);\n            const matches = atomListeners?.find((s) => s.matcher(routePath));\n            if (!matches) return;\n            const signal = atoms[matches.signal];\n            if (!signal) return;\n            const val = signal.get();\n            setTimeout(() => {\n              signal.set(!val);\n            }, 10);\n          }\n        });\n      }\n    });\n  }\n  return createProxy();\n}\n\nexport { createDynamicPathProxy as c, getClientConfig as g };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2123, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.B_PTVODM.mjs"],"sourcesContent":["const getAuthTables = (options) => {\n  const pluginSchema = (options.plugins ?? []).reduce(\n    (acc, plugin) => {\n      const schema = plugin.schema;\n      if (!schema) return acc;\n      for (const [key, value] of Object.entries(schema)) {\n        acc[key] = {\n          fields: {\n            ...acc[key]?.fields,\n            ...value.fields\n          },\n          modelName: value.modelName || key\n        };\n      }\n      return acc;\n    },\n    {}\n  );\n  const shouldAddRateLimitTable = options.rateLimit?.storage === \"database\";\n  const rateLimitTable = {\n    rateLimit: {\n      modelName: options.rateLimit?.modelName || \"rateLimit\",\n      fields: {\n        key: {\n          type: \"string\",\n          fieldName: options.rateLimit?.fields?.key || \"key\"\n        },\n        count: {\n          type: \"number\",\n          fieldName: options.rateLimit?.fields?.count || \"count\"\n        },\n        lastRequest: {\n          type: \"number\",\n          bigint: true,\n          fieldName: options.rateLimit?.fields?.lastRequest || \"lastRequest\"\n        }\n      }\n    }\n  };\n  const { user, session, account, ...pluginTables } = pluginSchema;\n  const sessionTable = {\n    session: {\n      modelName: options.session?.modelName || \"session\",\n      fields: {\n        expiresAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.expiresAt || \"expiresAt\"\n        },\n        token: {\n          type: \"string\",\n          required: true,\n          fieldName: options.session?.fields?.token || \"token\",\n          unique: true\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.createdAt || \"createdAt\",\n          defaultValue: () => /* @__PURE__ */ new Date()\n        },\n        updatedAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.updatedAt || \"updatedAt\",\n          onUpdate: () => /* @__PURE__ */ new Date()\n        },\n        ipAddress: {\n          type: \"string\",\n          required: false,\n          fieldName: options.session?.fields?.ipAddress || \"ipAddress\"\n        },\n        userAgent: {\n          type: \"string\",\n          required: false,\n          fieldName: options.session?.fields?.userAgent || \"userAgent\"\n        },\n        userId: {\n          type: \"string\",\n          fieldName: options.session?.fields?.userId || \"userId\",\n          references: {\n            model: options.user?.modelName || \"user\",\n            field: \"id\",\n            onDelete: \"cascade\"\n          },\n          required: true\n        },\n        ...session?.fields,\n        ...options.session?.additionalFields\n      },\n      order: 2\n    }\n  };\n  return {\n    user: {\n      modelName: options.user?.modelName || \"user\",\n      fields: {\n        name: {\n          type: \"string\",\n          required: true,\n          fieldName: options.user?.fields?.name || \"name\",\n          sortable: true\n        },\n        email: {\n          type: \"string\",\n          unique: true,\n          required: true,\n          fieldName: options.user?.fields?.email || \"email\",\n          sortable: true\n        },\n        emailVerified: {\n          type: \"boolean\",\n          defaultValue: false,\n          required: true,\n          fieldName: options.user?.fields?.emailVerified || \"emailVerified\"\n        },\n        image: {\n          type: \"string\",\n          required: false,\n          fieldName: options.user?.fields?.image || \"image\"\n        },\n        createdAt: {\n          type: \"date\",\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          required: true,\n          fieldName: options.user?.fields?.createdAt || \"createdAt\"\n        },\n        updatedAt: {\n          type: \"date\",\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          onUpdate: () => /* @__PURE__ */ new Date(),\n          required: true,\n          fieldName: options.user?.fields?.updatedAt || \"updatedAt\"\n        },\n        ...user?.fields,\n        ...options.user?.additionalFields\n      },\n      order: 1\n    },\n    //only add session table if it's not stored in secondary storage\n    ...!options.secondaryStorage || options.session?.storeSessionInDatabase ? sessionTable : {},\n    account: {\n      modelName: options.account?.modelName || \"account\",\n      fields: {\n        accountId: {\n          type: \"string\",\n          required: true,\n          fieldName: options.account?.fields?.accountId || \"accountId\"\n        },\n        providerId: {\n          type: \"string\",\n          required: true,\n          fieldName: options.account?.fields?.providerId || \"providerId\"\n        },\n        userId: {\n          type: \"string\",\n          references: {\n            model: options.user?.modelName || \"user\",\n            field: \"id\",\n            onDelete: \"cascade\"\n          },\n          required: true,\n          fieldName: options.account?.fields?.userId || \"userId\"\n        },\n        accessToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.accessToken || \"accessToken\"\n        },\n        refreshToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.refreshToken || \"refreshToken\"\n        },\n        idToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.idToken || \"idToken\"\n        },\n        accessTokenExpiresAt: {\n          type: \"date\",\n          required: false,\n          fieldName: options.account?.fields?.accessTokenExpiresAt || \"accessTokenExpiresAt\"\n        },\n        refreshTokenExpiresAt: {\n          type: \"date\",\n          required: false,\n          fieldName: options.account?.fields?.accessTokenExpiresAt || \"refreshTokenExpiresAt\"\n        },\n        scope: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.scope || \"scope\"\n        },\n        password: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.password || \"password\"\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.account?.fields?.createdAt || \"createdAt\",\n          defaultValue: () => /* @__PURE__ */ new Date()\n        },\n        updatedAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.account?.fields?.updatedAt || \"updatedAt\",\n          onUpdate: () => /* @__PURE__ */ new Date()\n        },\n        ...account?.fields\n      },\n      order: 3\n    },\n    verification: {\n      modelName: options.verification?.modelName || \"verification\",\n      fields: {\n        identifier: {\n          type: \"string\",\n          required: true,\n          fieldName: options.verification?.fields?.identifier || \"identifier\"\n        },\n        value: {\n          type: \"string\",\n          required: true,\n          fieldName: options.verification?.fields?.value || \"value\"\n        },\n        expiresAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.verification?.fields?.expiresAt || \"expiresAt\"\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          fieldName: options.verification?.fields?.createdAt || \"createdAt\"\n        },\n        updatedAt: {\n          type: \"date\",\n          required: true,\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          onUpdate: () => /* @__PURE__ */ new Date(),\n          fieldName: options.verification?.fields?.updatedAt || \"updatedAt\"\n        }\n      },\n      order: 4\n    },\n    ...pluginTables,\n    ...shouldAddRateLimitTable ? rateLimitTable : {}\n  };\n};\n\nexport { getAuthTables as g };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2385, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.BuBqXPUp.mjs"],"sourcesContent":["import { s as safeJSONParse } from './better-auth.BZZKN1g7.mjs';\nimport { g as getAuthTables } from './better-auth.B_PTVODM.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport 'zod/v4';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport './better-auth.B4Qoxdgc.mjs';\nimport { a as logger } from './better-auth.BjBlybv-.mjs';\n\nfunction withApplyDefault(value, field, action) {\n  if (action === \"update\") {\n    if (value === void 0 && field.onUpdate !== void 0) {\n      if (typeof field.onUpdate === \"function\") {\n        return field.onUpdate();\n      }\n      return field.onUpdate;\n    }\n    return value;\n  }\n  if (value === void 0 || value === null) {\n    if (field.defaultValue !== void 0) {\n      if (typeof field.defaultValue === \"function\") {\n        return field.defaultValue();\n      }\n      return field.defaultValue;\n    }\n  }\n  return value;\n}\n\nlet debugLogs = [];\nlet transactionId = -1;\nconst colors = {\n  reset: \"\\x1B[0m\",\n  bright: \"\\x1B[1m\",\n  dim: \"\\x1B[2m\",\n  fg: {\n    yellow: \"\\x1B[33m\",\n    magenta: \"\\x1B[35m\"},\n  bg: {\n    black: \"\\x1B[40m\"}\n};\nconst createAdapter = ({\n  adapter,\n  config: cfg\n}) => (options) => {\n  const config = {\n    ...cfg,\n    supportsBooleans: cfg.supportsBooleans ?? true,\n    supportsDates: cfg.supportsDates ?? true,\n    supportsJSON: cfg.supportsJSON ?? false,\n    adapterName: cfg.adapterName ?? cfg.adapterId,\n    supportsNumericIds: cfg.supportsNumericIds ?? true\n  };\n  if (options.advanced?.database?.useNumberId === true && config.supportsNumericIds === false) {\n    throw new Error(\n      `[${config.adapterName}] Your database or database adapter does not support numeric ids. Please disable \"useNumberId\" in your config.`\n    );\n  }\n  const schema = getAuthTables(options);\n  const getDefaultFieldName = ({\n    field,\n    model: unsafe_model\n  }) => {\n    if (field === \"id\" || field === \"_id\") {\n      return \"id\";\n    }\n    const model = getDefaultModelName(unsafe_model);\n    let f = schema[model]?.fields[field];\n    if (!f) {\n      f = Object.values(schema[model]?.fields).find(\n        (f2) => f2.fieldName === field\n      );\n    }\n    if (!f) {\n      debugLog(`Field ${field} not found in model ${model}`);\n      debugLog(`Schema:`, schema);\n      throw new Error(`Field ${field} not found in model ${model}`);\n    }\n    return field;\n  };\n  const getDefaultModelName = (model) => {\n    if (config.usePlural && model.charAt(model.length - 1) === \"s\") {\n      let pluralessModel = model.slice(0, -1);\n      let m2 = schema[pluralessModel] ? pluralessModel : void 0;\n      if (!m2) {\n        m2 = Object.entries(schema).find(\n          ([_, f]) => f.modelName === pluralessModel\n        )?.[0];\n      }\n      if (m2) {\n        return m2;\n      }\n    }\n    let m = schema[model] ? model : void 0;\n    if (!m) {\n      m = Object.entries(schema).find(([_, f]) => f.modelName === model)?.[0];\n    }\n    if (!m) {\n      debugLog(`Model \"${model}\" not found in schema`);\n      debugLog(`Schema:`, schema);\n      throw new Error(`Model \"${model}\" not found in schema`);\n    }\n    return m;\n  };\n  const getModelName = (model) => {\n    const defaultModelKey = getDefaultModelName(model);\n    const usePlural = config && config.usePlural;\n    const useCustomModelName = schema && schema[defaultModelKey] && schema[defaultModelKey].modelName !== model;\n    if (useCustomModelName) {\n      return usePlural ? `${schema[defaultModelKey].modelName}s` : schema[defaultModelKey].modelName;\n    }\n    return usePlural ? `${model}s` : model;\n  };\n  function getFieldName({\n    model: model_name,\n    field: field_name\n  }) {\n    const model = getDefaultModelName(model_name);\n    const field = getDefaultFieldName({ model, field: field_name });\n    return schema[model]?.fields[field]?.fieldName || field;\n  }\n  const debugLog = (...args) => {\n    if (config.debugLogs === true || typeof config.debugLogs === \"object\") {\n      if (typeof config.debugLogs === \"object\" && \"isRunningAdapterTests\" in config.debugLogs) {\n        if (config.debugLogs.isRunningAdapterTests) {\n          args.shift();\n          debugLogs.push(args);\n        }\n        return;\n      }\n      if (typeof config.debugLogs === \"object\" && config.debugLogs.logCondition && !config.debugLogs.logCondition?.()) {\n        return;\n      }\n      if (typeof args[0] === \"object\" && \"method\" in args[0]) {\n        const method = args.shift().method;\n        if (typeof config.debugLogs === \"object\") {\n          if (method === \"create\" && !config.debugLogs.create) {\n            return;\n          } else if (method === \"update\" && !config.debugLogs.update) {\n            return;\n          } else if (method === \"updateMany\" && !config.debugLogs.updateMany) {\n            return;\n          } else if (method === \"findOne\" && !config.debugLogs.findOne) {\n            return;\n          } else if (method === \"findMany\" && !config.debugLogs.findMany) {\n            return;\n          } else if (method === \"delete\" && !config.debugLogs.delete) {\n            return;\n          } else if (method === \"deleteMany\" && !config.debugLogs.deleteMany) {\n            return;\n          } else if (method === \"count\" && !config.debugLogs.count) {\n            return;\n          }\n        }\n        logger.info(`[${config.adapterName}]`, ...args);\n      } else {\n        logger.info(`[${config.adapterName}]`, ...args);\n      }\n    }\n  };\n  const idField = ({\n    customModelName,\n    forceAllowId\n  }) => {\n    const shouldGenerateId = !config.disableIdGeneration && !options.advanced?.database?.useNumberId && !forceAllowId;\n    const model = getDefaultModelName(customModelName ?? \"id\");\n    return {\n      type: options.advanced?.database?.useNumberId ? \"number\" : \"string\",\n      required: shouldGenerateId ? true : false,\n      ...shouldGenerateId ? {\n        defaultValue() {\n          if (config.disableIdGeneration) return void 0;\n          const useNumberId = options.advanced?.database?.useNumberId;\n          let generateId$1 = options.advanced?.database?.generateId;\n          if (options.advanced?.generateId !== void 0) {\n            logger.warn(\n              \"Your Better Auth config includes advanced.generateId which is deprecated. Please use advanced.database.generateId instead. This will be removed in future releases.\"\n            );\n            generateId$1 = options.advanced?.generateId;\n          }\n          if (generateId$1 === false || useNumberId) return void 0;\n          if (generateId$1) {\n            return generateId$1({\n              model\n            });\n          }\n          if (config.customIdGenerator) {\n            return config.customIdGenerator({ model });\n          }\n          return generateId();\n        }\n      } : {}\n    };\n  };\n  const getFieldAttributes = ({\n    model,\n    field\n  }) => {\n    const defaultModelName = getDefaultModelName(model);\n    const defaultFieldName = getDefaultFieldName({\n      field,\n      model\n    });\n    const fields = schema[defaultModelName].fields;\n    fields.id = idField({ customModelName: defaultModelName });\n    return fields[defaultFieldName];\n  };\n  const adapterInstance = adapter({\n    options,\n    schema,\n    debugLog,\n    getFieldName,\n    getModelName,\n    getDefaultModelName,\n    getDefaultFieldName,\n    getFieldAttributes\n  });\n  const transformInput = async (data, unsafe_model, action, forceAllowId) => {\n    const transformedData = {};\n    const fields = schema[unsafe_model].fields;\n    const newMappedKeys = config.mapKeysTransformInput ?? {};\n    if (!config.disableIdGeneration && !options.advanced?.database?.useNumberId) {\n      fields.id = idField({\n        customModelName: unsafe_model,\n        forceAllowId: forceAllowId && \"id\" in data\n      });\n    }\n    for (const field in fields) {\n      const value = data[field];\n      const fieldAttributes = fields[field];\n      let newFieldName = newMappedKeys[field] || fields[field].fieldName || field;\n      if (value === void 0 && (fieldAttributes.defaultValue === void 0 && !fieldAttributes.transform?.input && !(action === \"update\" && fieldAttributes.onUpdate) || action === \"update\" && !fieldAttributes.onUpdate)) {\n        continue;\n      }\n      let newValue = withApplyDefault(value, fieldAttributes, action);\n      if (fieldAttributes.transform?.input) {\n        newValue = await fieldAttributes.transform.input(newValue);\n      }\n      if (fieldAttributes.references?.field === \"id\" && options.advanced?.database?.useNumberId) {\n        if (Array.isArray(newValue)) {\n          newValue = newValue.map(Number);\n        } else {\n          newValue = Number(newValue);\n        }\n      } else if (config.supportsJSON === false && typeof newValue === \"object\" && fieldAttributes.type === \"json\") {\n        newValue = JSON.stringify(newValue);\n      } else if (config.supportsDates === false && newValue instanceof Date && fieldAttributes.type === \"date\") {\n        newValue = newValue.toISOString();\n      } else if (config.supportsBooleans === false && typeof newValue === \"boolean\") {\n        newValue = newValue ? 1 : 0;\n      }\n      if (config.customTransformInput) {\n        newValue = config.customTransformInput({\n          data: newValue,\n          action,\n          field: newFieldName,\n          fieldAttributes,\n          model: unsafe_model,\n          schema,\n          options\n        });\n      }\n      if (newValue !== void 0) {\n        transformedData[newFieldName] = newValue;\n      }\n    }\n    return transformedData;\n  };\n  const transformOutput = async (data, unsafe_model, select = []) => {\n    if (!data) return null;\n    const newMappedKeys = config.mapKeysTransformOutput ?? {};\n    const transformedData = {};\n    const tableSchema = schema[unsafe_model].fields;\n    const idKey = Object.entries(newMappedKeys).find(\n      ([_, v]) => v === \"id\"\n    )?.[0];\n    tableSchema[idKey ?? \"id\"] = {\n      type: options.advanced?.database?.useNumberId ? \"number\" : \"string\"\n    };\n    for (const key in tableSchema) {\n      if (select.length && !select.includes(key)) {\n        continue;\n      }\n      const field = tableSchema[key];\n      if (field) {\n        const originalKey = field.fieldName || key;\n        let newValue = data[Object.entries(newMappedKeys).find(\n          ([_, v]) => v === originalKey\n        )?.[0] || originalKey];\n        if (field.transform?.output) {\n          newValue = await field.transform.output(newValue);\n        }\n        let newFieldName = newMappedKeys[key] || key;\n        if (originalKey === \"id\" || field.references?.field === \"id\") {\n          if (typeof newValue !== \"undefined\") newValue = String(newValue);\n        } else if (config.supportsJSON === false && typeof newValue === \"string\" && field.type === \"json\") {\n          newValue = safeJSONParse(newValue);\n        } else if (config.supportsDates === false && typeof newValue === \"string\" && field.type === \"date\") {\n          newValue = new Date(newValue);\n        } else if (config.supportsBooleans === false && typeof newValue === \"number\" && field.type === \"boolean\") {\n          newValue = newValue === 1;\n        }\n        if (config.customTransformOutput) {\n          newValue = config.customTransformOutput({\n            data: newValue,\n            field: newFieldName,\n            fieldAttributes: field,\n            select,\n            model: unsafe_model,\n            schema,\n            options\n          });\n        }\n        transformedData[newFieldName] = newValue;\n      }\n    }\n    return transformedData;\n  };\n  const transformWhereClause = ({\n    model,\n    where\n  }) => {\n    if (!where) return void 0;\n    const newMappedKeys = config.mapKeysTransformInput ?? {};\n    return where.map((w) => {\n      const {\n        field: unsafe_field,\n        value,\n        operator = \"eq\",\n        connector = \"AND\"\n      } = w;\n      if (operator === \"in\") {\n        if (!Array.isArray(value)) {\n          throw new Error(\"Value must be an array\");\n        }\n      }\n      const defaultModelName = getDefaultModelName(model);\n      const defaultFieldName = getDefaultFieldName({\n        field: unsafe_field,\n        model\n      });\n      const fieldName = newMappedKeys[defaultFieldName] || getFieldName({\n        field: defaultFieldName,\n        model: defaultModelName\n      });\n      const fieldAttr = getFieldAttributes({\n        field: defaultFieldName,\n        model: defaultModelName\n      });\n      if (defaultFieldName === \"id\" || fieldAttr.references?.field === \"id\") {\n        if (options.advanced?.database?.useNumberId) {\n          if (Array.isArray(value)) {\n            return {\n              operator,\n              connector,\n              field: fieldName,\n              value: value.map(Number)\n            };\n          }\n          return {\n            operator,\n            connector,\n            field: fieldName,\n            value: Number(value)\n          };\n        }\n      }\n      return {\n        operator,\n        connector,\n        field: fieldName,\n        value\n      };\n    });\n  };\n  return {\n    create: async ({\n      data: unsafeData,\n      model: unsafeModel,\n      select,\n      forceAllowId = false\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      if (\"id\" in unsafeData && !forceAllowId) {\n        logger.warn(\n          `[${config.adapterName}] - You are trying to create a record with an id. This is not allowed as we handle id generation for you, unless you pass in the \\`forceAllowId\\` parameter. The id will be ignored.`\n        );\n        const err = new Error();\n        const stack = err.stack?.split(\"\\n\").filter((_, i) => i !== 1).join(\"\\n\").replace(\"Error:\", \"Create method with `id` being called at:\");\n        console.log(stack);\n        unsafeData.id = void 0;\n      }\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"Unsafe Input\")}:`,\n        { model, data: unsafeData }\n      );\n      const data = await transformInput(\n        unsafeData,\n        unsafeModel,\n        \"create\",\n        forceAllowId\n      );\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"Parsed Input\")}:`,\n        { model, data }\n      );\n      const res = await adapterInstance.create({ data, model });\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"DB Result\")}:`,\n        { model, res }\n      );\n      const transformed = await transformOutput(res, unsafeModel, select);\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(4, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    update: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      update: unsafeData\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"Unsafe Input\")}:`,\n        { model, data: unsafeData }\n      );\n      const data = await transformInput(\n        unsafeData,\n        unsafeModel,\n        \"update\"\n      );\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"Parsed Input\")}:`,\n        { model, data }\n      );\n      const res = await adapterInstance.update({\n        model,\n        where,\n        update: data\n      });\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      const transformed = await transformOutput(res, unsafeModel);\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(4, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    updateMany: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      update: unsafeData\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"Unsafe Input\")}:`,\n        { model, data: unsafeData }\n      );\n      const data = await transformInput(unsafeData, unsafeModel, \"update\");\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"Parsed Input\")}:`,\n        { model, data }\n      );\n      const updatedCount = await adapterInstance.updateMany({\n        model,\n        where,\n        update: data\n      });\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: updatedCount }\n      );\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(4, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: updatedCount }\n      );\n      return updatedCount;\n    },\n    findOne: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      select\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"findOne\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 3)}`,\n        `${formatMethod(\"findOne\")}:`,\n        { model, where, select }\n      );\n      const res = await adapterInstance.findOne({\n        model,\n        where,\n        select\n      });\n      debugLog(\n        { method: \"findOne\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 3)}`,\n        `${formatMethod(\"findOne\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      const transformed = await transformOutput(\n        res,\n        unsafeModel,\n        select\n      );\n      debugLog(\n        { method: \"findOne\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 3)}`,\n        `${formatMethod(\"findOne\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    findMany: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      limit: unsafeLimit,\n      sortBy,\n      offset\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const limit = unsafeLimit ?? options.advanced?.database?.defaultFindManyLimit ?? 100;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"findMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 3)}`,\n        `${formatMethod(\"findMany\")}:`,\n        { model, where, limit, sortBy, offset }\n      );\n      const res = await adapterInstance.findMany({\n        model,\n        where,\n        limit,\n        sortBy,\n        offset\n      });\n      debugLog(\n        { method: \"findMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 3)}`,\n        `${formatMethod(\"findMany\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      const transformed = await Promise.all(\n        res.map(async (r) => await transformOutput(r, unsafeModel))\n      );\n      debugLog(\n        { method: \"findMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 3)}`,\n        `${formatMethod(\"findMany\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    delete: async ({\n      model: unsafeModel,\n      where: unsafeWhere\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"delete\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 2)}`,\n        `${formatMethod(\"delete\")}:`,\n        { model, where }\n      );\n      await adapterInstance.delete({\n        model,\n        where\n      });\n      debugLog(\n        { method: \"delete\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 2)}`,\n        `${formatMethod(\"delete\")} ${formatAction(\"DB Result\")}:`,\n        { model }\n      );\n    },\n    deleteMany: async ({\n      model: unsafeModel,\n      where: unsafeWhere\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"deleteMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 2)}`,\n        `${formatMethod(\"deleteMany\")} ${formatAction(\"DeleteMany\")}:`,\n        { model, where }\n      );\n      const res = await adapterInstance.deleteMany({\n        model,\n        where\n      });\n      debugLog(\n        { method: \"deleteMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 2)}`,\n        `${formatMethod(\"deleteMany\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      return res;\n    },\n    count: async ({\n      model: unsafeModel,\n      where: unsafeWhere\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"count\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 2)}`,\n        `${formatMethod(\"count\")}:`,\n        {\n          model,\n          where\n        }\n      );\n      const res = await adapterInstance.count({\n        model,\n        where\n      });\n      debugLog(\n        { method: \"count\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 2)}`,\n        `${formatMethod(\"count\")}:`,\n        {\n          model,\n          data: res\n        }\n      );\n      return res;\n    },\n    createSchema: adapterInstance.createSchema ? async (_, file) => {\n      const tables = getAuthTables(options);\n      if (options.secondaryStorage && !options.session?.storeSessionInDatabase) {\n        delete tables.session;\n      }\n      if (options.rateLimit && options.rateLimit.storage === \"database\" && // rate-limit will default to enabled in production,\n      // and given storage is database, it will try to use the rate-limit table,\n      // so we should make sure to generate rate-limit table schema\n      (typeof options.rateLimit.enabled === \"undefined\" || // and of course if they forcefully set to true, then they want rate-limit,\n      // thus we should also generate rate-limit table schema\n      options.rateLimit.enabled === true)) {\n        tables.ratelimit = {\n          modelName: options.rateLimit.modelName ?? \"ratelimit\",\n          fields: {\n            key: {\n              type: \"string\",\n              unique: true,\n              required: true,\n              fieldName: options.rateLimit.fields?.key ?? \"key\"\n            },\n            count: {\n              type: \"number\",\n              required: true,\n              fieldName: options.rateLimit.fields?.count ?? \"count\"\n            },\n            lastRequest: {\n              type: \"number\",\n              required: true,\n              bigint: true,\n              defaultValue: () => Date.now(),\n              fieldName: options.rateLimit.fields?.lastRequest ?? \"lastRequest\"\n            }\n          }\n        };\n      }\n      return adapterInstance.createSchema({ file, tables });\n    } : void 0,\n    options: {\n      adapterConfig: config,\n      ...adapterInstance.options ?? {}\n    },\n    id: config.adapterId,\n    // Secretly export values ONLY if this adapter has enabled adapter-test-debug-logs.\n    // This would then be used during our adapter-tests to help print debug logs if a test fails.\n    //@ts-expect-error - ^^\n    ...config.debugLogs?.isRunningAdapterTests ? {\n      adapterTestDebugLogs: {\n        resetDebugLogs() {\n          debugLogs = [];\n        },\n        printDebugLogs() {\n          const separator = `\\u2500`.repeat(80);\n          let log = debugLogs.reverse().map((log2) => {\n            log2[0] = `\n${log2[0]}`;\n            return [...log2, \"\\n\"];\n          }).reduce(\n            (prev, curr) => {\n              return [...curr, ...prev];\n            },\n            [`\n${separator}`]\n          );\n          console.log(...log);\n        }\n      }\n    } : {}\n  };\n};\nfunction formatTransactionId(transactionId2) {\n  return `${colors.fg.magenta}#${transactionId2}${colors.reset}`;\n}\nfunction formatStep(step, total) {\n  return `${colors.bg.black}${colors.fg.yellow}[${step}/${total}]${colors.reset}`;\n}\nfunction formatMethod(method) {\n  return `${colors.bright}${method}${colors.reset}`;\n}\nfunction formatAction(action) {\n  return `${colors.dim}(${action})${colors.reset}`;\n}\n\nexport { createAdapter as c };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3193, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.O2VtDkDK.mjs"],"sourcesContent":["import { i as isTest } from './better-auth.CMQ3rA-I.mjs';\n\nfunction getIp(req, options) {\n  if (options.advanced?.ipAddress?.disableIpTracking) {\n    return null;\n  }\n  if (isTest()) {\n    return \"127.0.0.1\";\n  }\n  const headers = \"headers\" in req ? req.headers : req;\n  const defaultHeaders = [\"x-forwarded-for\"];\n  const ipHeaders = options.advanced?.ipAddress?.ipAddressHeaders || defaultHeaders;\n  for (const key of ipHeaders) {\n    const value = \"get\" in headers ? headers.get(key) : headers[key];\n    if (typeof value === \"string\") {\n      const ip = value.split(\",\")[0].trim();\n      if (isValidIP(ip)) {\n        return ip;\n      }\n    }\n  }\n  return null;\n}\nfunction isValidIP(ip) {\n  const ipv4Regex = /^(\\d{1,3}\\.){3}\\d{1,3}$/;\n  if (ipv4Regex.test(ip)) {\n    const parts = ip.split(\".\").map(Number);\n    return parts.every((part) => part >= 0 && part <= 255);\n  }\n  const ipv6Regex = /^([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$/;\n  return ipv6Regex.test(ip);\n}\n\nexport { getIp as g };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,SAAS,MAAM,GAAG,EAAE,OAAO;QACrB,6BAAA,mBAQc,8BAAA;IARlB,KAAI,oBAAA,QAAQ,QAAQ,cAAhB,yCAAA,8BAAA,kBAAkB,SAAS,cAA3B,kDAAA,4BAA6B,iBAAiB,EAAE;QAClD,OAAO;IACT;IACA,IAAI,IAAA,0LAAM,KAAI;QACZ,OAAO;IACT;IACA,MAAM,UAAU,aAAa,MAAM,IAAI,OAAO,GAAG;IACjD,MAAM,iBAAiB;QAAC;KAAkB;IAC1C,MAAM,YAAY,EAAA,qBAAA,QAAQ,QAAQ,cAAhB,0CAAA,+BAAA,mBAAkB,SAAS,cAA3B,mDAAA,6BAA6B,gBAAgB,KAAI;IACnE,KAAK,MAAM,OAAO,UAAW;QAC3B,MAAM,QAAQ,SAAS,UAAU,QAAQ,GAAG,CAAC,OAAO,OAAO,CAAC,IAAI;QAChE,IAAI,OAAO,UAAU,UAAU;YAC7B,MAAM,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI;YACnC,IAAI,UAAU,KAAK;gBACjB,OAAO;YACT;QACF;IACF;IACA,OAAO;AACT;AACA,SAAS,UAAU,EAAE;IACnB,MAAM,YAAY;IAClB,IAAI,UAAU,IAAI,CAAC,KAAK;QACtB,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC;QAChC,OAAO,MAAM,KAAK,CAAC,CAAC,OAAS,QAAQ,KAAK,QAAQ;IACpD;IACA,MAAM,YAAY;IAClB,OAAO,UAAU,IAAI,CAAC;AACxB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3237, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.B8b3lep0.mjs"],"sourcesContent":["import { SqliteDialect, MysqlDialect, PostgresDialect, MssqlDialect, Kysely } from 'kysely';\nimport { c as createAdapter } from './better-auth.BuBqXPUp.mjs';\n\nfunction getKyselyDatabaseType(db) {\n  if (!db) {\n    return null;\n  }\n  if (\"dialect\" in db) {\n    return getKyselyDatabaseType(db.dialect);\n  }\n  if (\"createDriver\" in db) {\n    if (db instanceof SqliteDialect) {\n      return \"sqlite\";\n    }\n    if (db instanceof MysqlDialect) {\n      return \"mysql\";\n    }\n    if (db instanceof PostgresDialect) {\n      return \"postgres\";\n    }\n    if (db instanceof MssqlDialect) {\n      return \"mssql\";\n    }\n  }\n  if (\"aggregate\" in db) {\n    return \"sqlite\";\n  }\n  if (\"getConnection\" in db) {\n    return \"mysql\";\n  }\n  if (\"connect\" in db) {\n    return \"postgres\";\n  }\n  if (\"fileControl\" in db) {\n    return \"sqlite\";\n  }\n  if (\"open\" in db && \"close\" in db && \"prepare\" in db) {\n    return \"sqlite\";\n  }\n  return null;\n}\nconst createKyselyAdapter = async (config) => {\n  const db = config.database;\n  if (!db) {\n    return {\n      kysely: null,\n      databaseType: null\n    };\n  }\n  if (\"db\" in db) {\n    return {\n      kysely: db.db,\n      databaseType: db.type\n    };\n  }\n  if (\"dialect\" in db) {\n    return {\n      kysely: new Kysely({ dialect: db.dialect }),\n      databaseType: db.type\n    };\n  }\n  let dialect = void 0;\n  const databaseType = getKyselyDatabaseType(db);\n  if (\"createDriver\" in db) {\n    dialect = db;\n  }\n  if (\"aggregate\" in db && !(\"createSession\" in db)) {\n    dialect = new SqliteDialect({\n      database: db\n    });\n  }\n  if (\"getConnection\" in db) {\n    dialect = new MysqlDialect(db);\n  }\n  if (\"connect\" in db) {\n    dialect = new PostgresDialect({\n      pool: db\n    });\n  }\n  if (\"fileControl\" in db) {\n    const { BunSqliteDialect } = await import('../chunks/bun-sqlite-dialect.mjs');\n    dialect = new BunSqliteDialect({\n      database: db\n    });\n  }\n  if (\"createSession\" in db && typeof window === \"undefined\") {\n    let DatabaseSync = void 0;\n    try {\n      ({ DatabaseSync } = await import('node:sqlite'));\n    } catch (error) {\n      if (error !== null && typeof error === \"object\" && \"code\" in error && error.code !== \"ERR_UNKNOWN_BUILTIN_MODULE\") {\n        throw error;\n      }\n    }\n    if (DatabaseSync && db instanceof DatabaseSync) {\n      const { NodeSqliteDialect } = await import('../chunks/node-sqlite-dialect.mjs');\n      dialect = new NodeSqliteDialect({\n        database: db\n      });\n    }\n  }\n  return {\n    kysely: dialect ? new Kysely({ dialect }) : null,\n    databaseType\n  };\n};\n\nconst kyselyAdapter = (db, config) => createAdapter({\n  config: {\n    adapterId: \"kysely\",\n    adapterName: \"Kysely Adapter\",\n    usePlural: config?.usePlural,\n    debugLogs: config?.debugLogs,\n    supportsBooleans: config?.type === \"sqlite\" || config?.type === \"mssql\" || !config?.type ? false : true,\n    supportsDates: config?.type === \"sqlite\" || config?.type === \"mssql\" || !config?.type ? false : true,\n    supportsJSON: false\n  },\n  adapter: ({ getFieldName, schema }) => {\n    const withReturning = async (values, builder, model, where) => {\n      let res;\n      if (config?.type === \"mysql\") {\n        await builder.execute();\n        const field = values.id ? \"id\" : where.length > 0 && where[0].field ? where[0].field : \"id\";\n        if (!values.id && where.length === 0) {\n          res = await db.selectFrom(model).selectAll().orderBy(getFieldName({ model, field }), \"desc\").limit(1).executeTakeFirst();\n          return res;\n        }\n        const value = values[field] || where[0].value;\n        res = await db.selectFrom(model).selectAll().orderBy(getFieldName({ model, field }), \"desc\").where(getFieldName({ model, field }), \"=\", value).limit(1).executeTakeFirst();\n        return res;\n      }\n      if (config?.type === \"mssql\") {\n        res = await builder.outputAll(\"inserted\").executeTakeFirst();\n        return res;\n      }\n      res = await builder.returningAll().executeTakeFirst();\n      return res;\n    };\n    function transformValueToDB(value, model, field) {\n      if (field === \"id\") {\n        return value;\n      }\n      const { type = \"sqlite\" } = config || {};\n      let f = schema[model]?.fields[field];\n      if (!f) {\n        f = Object.values(schema).find((f2) => f2.modelName === model);\n      }\n      if (f.type === \"boolean\" && (type === \"sqlite\" || type === \"mssql\") && value !== null && value !== void 0) {\n        return value ? 1 : 0;\n      }\n      if (f.type === \"date\" && value && value instanceof Date) {\n        return type === \"sqlite\" ? value.toISOString() : value;\n      }\n      return value;\n    }\n    function convertWhereClause(model, w) {\n      if (!w)\n        return {\n          and: null,\n          or: null\n        };\n      const conditions = {\n        and: [],\n        or: []\n      };\n      w.forEach((condition) => {\n        let {\n          field: _field,\n          value,\n          operator = \"=\",\n          connector = \"AND\"\n        } = condition;\n        const field = getFieldName({ model, field: _field });\n        value = transformValueToDB(value, model, _field);\n        const expr = (eb) => {\n          if (operator.toLowerCase() === \"in\") {\n            return eb(field, \"in\", Array.isArray(value) ? value : [value]);\n          }\n          if (operator === \"contains\") {\n            return eb(field, \"like\", `%${value}%`);\n          }\n          if (operator === \"starts_with\") {\n            return eb(field, \"like\", `${value}%`);\n          }\n          if (operator === \"ends_with\") {\n            return eb(field, \"like\", `%${value}`);\n          }\n          if (operator === \"eq\") {\n            return eb(field, \"=\", value);\n          }\n          if (operator === \"ne\") {\n            return eb(field, \"<>\", value);\n          }\n          if (operator === \"gt\") {\n            return eb(field, \">\", value);\n          }\n          if (operator === \"gte\") {\n            return eb(field, \">=\", value);\n          }\n          if (operator === \"lt\") {\n            return eb(field, \"<\", value);\n          }\n          if (operator === \"lte\") {\n            return eb(field, \"<=\", value);\n          }\n          return eb(field, operator, value);\n        };\n        if (connector === \"OR\") {\n          conditions.or.push(expr);\n        } else {\n          conditions.and.push(expr);\n        }\n      });\n      return {\n        and: conditions.and.length ? conditions.and : null,\n        or: conditions.or.length ? conditions.or : null\n      };\n    }\n    return {\n      async create({ data, model }) {\n        const builder = db.insertInto(model).values(data);\n        return await withReturning(data, builder, model, []);\n      },\n      async findOne({ model, where, select }) {\n        const { and, or } = convertWhereClause(model, where);\n        let query = db.selectFrom(model).selectAll();\n        if (and) {\n          query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n        }\n        if (or) {\n          query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n        }\n        const res = await query.executeTakeFirst();\n        if (!res) return null;\n        return res;\n      },\n      async findMany({ model, where, limit, offset, sortBy }) {\n        const { and, or } = convertWhereClause(model, where);\n        let query = db.selectFrom(model);\n        if (and) {\n          query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n        }\n        if (or) {\n          query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n        }\n        if (config?.type === \"mssql\") {\n          if (!offset) {\n            query = query.top(limit || 100);\n          }\n        } else {\n          query = query.limit(limit || 100);\n        }\n        if (sortBy) {\n          query = query.orderBy(\n            getFieldName({ model, field: sortBy.field }),\n            sortBy.direction\n          );\n        }\n        if (offset) {\n          if (config?.type === \"mssql\") {\n            if (!sortBy) {\n              query = query.orderBy(getFieldName({ model, field: \"id\" }));\n            }\n            query = query.offset(offset).fetch(limit || 100);\n          } else {\n            query = query.offset(offset);\n          }\n        }\n        const res = await query.selectAll().execute();\n        if (!res) return [];\n        return res;\n      },\n      async update({ model, where, update: values }) {\n        const { and, or } = convertWhereClause(model, where);\n        let query = db.updateTable(model).set(values);\n        if (and) {\n          query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n        }\n        if (or) {\n          query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n        }\n        return await withReturning(values, query, model, where);\n      },\n      async updateMany({ model, where, update: values }) {\n        const { and, or } = convertWhereClause(model, where);\n        let query = db.updateTable(model).set(values);\n        if (and) {\n          query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n        }\n        if (or) {\n          query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n        }\n        const res = await query.execute();\n        return res.length;\n      },\n      async count({ model, where }) {\n        const { and, or } = convertWhereClause(model, where);\n        let query = db.selectFrom(model).select(db.fn.count(\"id\").as(\"count\"));\n        if (and) {\n          query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n        }\n        if (or) {\n          query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n        }\n        const res = await query.execute();\n        return res[0].count;\n      },\n      async delete({ model, where }) {\n        const { and, or } = convertWhereClause(model, where);\n        let query = db.deleteFrom(model);\n        if (and) {\n          query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n        }\n        if (or) {\n          query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n        }\n        await query.execute();\n      },\n      async deleteMany({ model, where }) {\n        const { and, or } = convertWhereClause(model, where);\n        let query = db.deleteFrom(model);\n        if (and) {\n          query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n        }\n        if (or) {\n          query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n        }\n        return (await query.execute()).length;\n      },\n      options: config\n    };\n  }\n});\n\nexport { createKyselyAdapter as c, getKyselyDatabaseType as g, kyselyAdapter as k };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3612, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.C7uhlcDq.mjs"],"sourcesContent":["import '@better-auth/utils/random';\nimport 'zod/v4';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport './better-auth.B4Qoxdgc.mjs';\nimport { a as logger } from './better-auth.BjBlybv-.mjs';\nimport { c as createAdapter } from './better-auth.BuBqXPUp.mjs';\n\nconst memoryAdapter = (db, config) => createAdapter({\n  config: {\n    adapterId: \"memory\",\n    adapterName: \"Memory Adapter\",\n    usePlural: false,\n    debugLogs: config?.debugLogs || false,\n    customTransformInput(props) {\n      if (props.options.advanced?.database?.useNumberId && props.field === \"id\" && props.action === \"create\") {\n        return db[props.model].length + 1;\n      }\n      return props.data;\n    }\n  },\n  adapter: ({ getFieldName, options, debugLog }) => {\n    function convertWhereClause(where, model) {\n      const table = db[model];\n      if (!table) {\n        logger.error(\n          `[MemoryAdapter] Model ${model} not found in the DB`,\n          Object.keys(db)\n        );\n        throw new Error(`Model ${model} not found`);\n      }\n      return table.filter((record) => {\n        return where.every((clause) => {\n          let { field, value, operator } = clause;\n          if (operator === \"in\") {\n            if (!Array.isArray(value)) {\n              throw new Error(\"Value must be an array\");\n            }\n            return value.includes(record[field]);\n          } else if (operator === \"contains\") {\n            return record[field].includes(value);\n          } else if (operator === \"starts_with\") {\n            return record[field].startsWith(value);\n          } else if (operator === \"ends_with\") {\n            return record[field].endsWith(value);\n          } else {\n            return record[field] === value;\n          }\n        });\n      });\n    }\n    return {\n      create: async ({ model, data }) => {\n        if (options.advanced?.database?.useNumberId) {\n          data.id = db[model].length + 1;\n        }\n        if (!db[model]) {\n          db[model] = [];\n        }\n        db[model].push(data);\n        return data;\n      },\n      findOne: async ({ model, where }) => {\n        const res = convertWhereClause(where, model);\n        const record = res[0] || null;\n        return record;\n      },\n      findMany: async ({ model, where, sortBy, limit, offset }) => {\n        let table = db[model];\n        if (where) {\n          table = convertWhereClause(where, model);\n        }\n        if (sortBy) {\n          table = table.sort((a, b) => {\n            const field = getFieldName({ model, field: sortBy.field });\n            if (sortBy.direction === \"asc\") {\n              return a[field] > b[field] ? 1 : -1;\n            } else {\n              return a[field] < b[field] ? 1 : -1;\n            }\n          });\n        }\n        if (offset !== void 0) {\n          table = table.slice(offset);\n        }\n        if (limit !== void 0) {\n          table = table.slice(0, limit);\n        }\n        return table;\n      },\n      count: async ({ model }) => {\n        return db[model].length;\n      },\n      update: async ({ model, where, update }) => {\n        const res = convertWhereClause(where, model);\n        res.forEach((record) => {\n          Object.assign(record, update);\n        });\n        return res[0] || null;\n      },\n      delete: async ({ model, where }) => {\n        const table = db[model];\n        const res = convertWhereClause(where, model);\n        db[model] = table.filter((record) => !res.includes(record));\n      },\n      deleteMany: async ({ model, where }) => {\n        const table = db[model];\n        const res = convertWhereClause(where, model);\n        let count = 0;\n        db[model] = table.filter((record) => {\n          if (res.includes(record)) {\n            count++;\n            return false;\n          }\n          return !res.includes(record);\n        });\n        return count;\n      },\n      updateMany({ model, where, update }) {\n        const res = convertWhereClause(where, model);\n        res.forEach((record) => {\n          Object.assign(record, update);\n        });\n        return res[0] || null;\n      }\n    };\n  }\n});\n\nexport { memoryAdapter as m };\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAIA;AAGA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AAEA,MAAM,gBAAgB,CAAC,IAAI,SAAW,IAAA,uLAAa,EAAC;QAClD,QAAQ;YACN,WAAW;YACX,aAAa;YACb,WAAW;YACX,WAAW,CAAA,mBAAA,6BAAA,OAAQ,SAAS,KAAI;YAChC,sBAAqB,KAAK;oBACpB,kCAAA;gBAAJ,IAAI,EAAA,0BAAA,MAAM,OAAO,CAAC,QAAQ,cAAtB,+CAAA,mCAAA,wBAAwB,QAAQ,cAAhC,uDAAA,iCAAkC,WAAW,KAAI,MAAM,KAAK,KAAK,QAAQ,MAAM,MAAM,KAAK,UAAU;oBACtG,OAAO,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,GAAG;gBAClC;gBACA,OAAO,MAAM,IAAI;YACnB;QACF;QACA,SAAS;gBAAC,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE;YAC3C,SAAS,mBAAmB,KAAK,EAAE,KAAK;gBACtC,MAAM,QAAQ,EAAE,CAAC,MAAM;gBACvB,IAAI,CAAC,OAAO;oBACV,wLAAM,CAAC,KAAK,CACV,AAAC,yBAA8B,OAAN,OAAM,yBAC/B,OAAO,IAAI,CAAC;oBAEd,MAAM,IAAI,MAAM,AAAC,SAAc,OAAN,OAAM;gBACjC;gBACA,OAAO,MAAM,MAAM,CAAC,CAAC;oBACnB,OAAO,MAAM,KAAK,CAAC,CAAC;wBAClB,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;wBACjC,IAAI,aAAa,MAAM;4BACrB,IAAI,CAAC,MAAM,OAAO,CAAC,QAAQ;gCACzB,MAAM,IAAI,MAAM;4BAClB;4BACA,OAAO,MAAM,QAAQ,CAAC,MAAM,CAAC,MAAM;wBACrC,OAAO,IAAI,aAAa,YAAY;4BAClC,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;wBAChC,OAAO,IAAI,aAAa,eAAe;4BACrC,OAAO,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;wBAClC,OAAO,IAAI,aAAa,aAAa;4BACnC,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;wBAChC,OAAO;4BACL,OAAO,MAAM,CAAC,MAAM,KAAK;wBAC3B;oBACF;gBACF;YACF;YACA,OAAO;gBACL,QAAQ;wBAAO,EAAE,KAAK,EAAE,IAAI,EAAE;wBACxB,4BAAA;oBAAJ,KAAI,oBAAA,QAAQ,QAAQ,cAAhB,yCAAA,6BAAA,kBAAkB,QAAQ,cAA1B,iDAAA,2BAA4B,WAAW,EAAE;wBAC3C,KAAK,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG;oBAC/B;oBACA,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE;wBACd,EAAE,CAAC,MAAM,GAAG,EAAE;oBAChB;oBACA,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;oBACf,OAAO;gBACT;gBACA,SAAS;wBAAO,EAAE,KAAK,EAAE,KAAK,EAAE;oBAC9B,MAAM,MAAM,mBAAmB,OAAO;oBACtC,MAAM,SAAS,GAAG,CAAC,EAAE,IAAI;oBACzB,OAAO;gBACT;gBACA,UAAU;wBAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;oBACtD,IAAI,QAAQ,EAAE,CAAC,MAAM;oBACrB,IAAI,OAAO;wBACT,QAAQ,mBAAmB,OAAO;oBACpC;oBACA,IAAI,QAAQ;wBACV,QAAQ,MAAM,IAAI,CAAC,CAAC,GAAG;4BACrB,MAAM,QAAQ,aAAa;gCAAE;gCAAO,OAAO,OAAO,KAAK;4BAAC;4BACxD,IAAI,OAAO,SAAS,KAAK,OAAO;gCAC9B,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;4BACpC,OAAO;gCACL,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;4BACpC;wBACF;oBACF;oBACA,IAAI,WAAW,KAAK,GAAG;wBACrB,QAAQ,MAAM,KAAK,CAAC;oBACtB;oBACA,IAAI,UAAU,KAAK,GAAG;wBACpB,QAAQ,MAAM,KAAK,CAAC,GAAG;oBACzB;oBACA,OAAO;gBACT;gBACA,OAAO;wBAAO,EAAE,KAAK,EAAE;oBACrB,OAAO,EAAE,CAAC,MAAM,CAAC,MAAM;gBACzB;gBACA,QAAQ;wBAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;oBACrC,MAAM,MAAM,mBAAmB,OAAO;oBACtC,IAAI,OAAO,CAAC,CAAC;wBACX,OAAO,MAAM,CAAC,QAAQ;oBACxB;oBACA,OAAO,GAAG,CAAC,EAAE,IAAI;gBACnB;gBACA,QAAQ;wBAAO,EAAE,KAAK,EAAE,KAAK,EAAE;oBAC7B,MAAM,QAAQ,EAAE,CAAC,MAAM;oBACvB,MAAM,MAAM,mBAAmB,OAAO;oBACtC,EAAE,CAAC,MAAM,GAAG,MAAM,MAAM,CAAC,CAAC,SAAW,CAAC,IAAI,QAAQ,CAAC;gBACrD;gBACA,YAAY;wBAAO,EAAE,KAAK,EAAE,KAAK,EAAE;oBACjC,MAAM,QAAQ,EAAE,CAAC,MAAM;oBACvB,MAAM,MAAM,mBAAmB,OAAO;oBACtC,IAAI,QAAQ;oBACZ,EAAE,CAAC,MAAM,GAAG,MAAM,MAAM,CAAC,CAAC;wBACxB,IAAI,IAAI,QAAQ,CAAC,SAAS;4BACxB;4BACA,OAAO;wBACT;wBACA,OAAO,CAAC,IAAI,QAAQ,CAAC;oBACvB;oBACA,OAAO;gBACT;gBACA,YAAW,KAAwB;wBAAxB,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,GAAxB;oBACT,MAAM,MAAM,mBAAmB,OAAO;oBACtC,IAAI,OAAO,CAAC,CAAC;wBACX,OAAO,MAAM,CAAC,QAAQ;oBACxB;oBACA,OAAO,GAAG,CAAC,EAAE,IAAI;gBACnB;YACF;QACF;IACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3778, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.CSVCtb77.mjs"],"sourcesContent":["import { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { e as parseSessionOutput, b as parseUserOutput } from './better-auth.Dcv8PS7T.mjs';\nimport { g as getIp } from './better-auth.O2VtDkDK.mjs';\nimport { s as safeJSONParse } from './better-auth.BZZKN1g7.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport 'zod/v4';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport './better-auth.B4Qoxdgc.mjs';\nimport { a as logger, c as createLogger } from './better-auth.BjBlybv-.mjs';\nimport './better-auth.CMQ3rA-I.mjs';\nimport '@better-auth/utils/random';\nimport { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\nimport { g as getAuthTables } from './better-auth.B_PTVODM.mjs';\nimport { c as createKyselyAdapter, k as kyselyAdapter } from './better-auth.B8b3lep0.mjs';\nimport { m as memoryAdapter } from './better-auth.C7uhlcDq.mjs';\nimport { sql } from 'kysely';\n\nfunction getWithHooks(adapter, ctx) {\n  const hooks = ctx.hooks;\n  async function createWithHooks(data, model, customCreateFn, context) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.create?.before;\n      if (toRun) {\n        const result = await toRun(actualData, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\" && \"data\" in result;\n        if (isObject) {\n          actualData = {\n            ...actualData,\n            ...result.data\n          };\n        }\n      }\n    }\n    const customCreated = customCreateFn ? await customCreateFn.fn(actualData) : null;\n    const created = !customCreateFn || customCreateFn.executeMainFn ? await adapter.create({\n      model,\n      data: actualData,\n      forceAllowId: true\n    }) : customCreated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.create?.after;\n      if (toRun) {\n        await toRun(created, context);\n      }\n    }\n    return created;\n  }\n  async function updateWithHooks(data, where, model, customUpdateFn, context) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.before;\n      if (toRun) {\n        const result = await toRun(data, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\";\n        actualData = isObject ? result.data : result;\n      }\n    }\n    const customUpdated = customUpdateFn ? await customUpdateFn.fn(actualData) : null;\n    const updated = !customUpdateFn || customUpdateFn.executeMainFn ? await adapter.update({\n      model,\n      update: actualData,\n      where\n    }) : customUpdated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.after;\n      if (toRun) {\n        await toRun(updated, context);\n      }\n    }\n    return updated;\n  }\n  async function updateManyWithHooks(data, where, model, customUpdateFn, context) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.before;\n      if (toRun) {\n        const result = await toRun(data, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\";\n        actualData = isObject ? result.data : result;\n      }\n    }\n    const customUpdated = customUpdateFn ? await customUpdateFn.fn(actualData) : null;\n    const updated = !customUpdateFn || customUpdateFn.executeMainFn ? await adapter.updateMany({\n      model,\n      update: actualData,\n      where\n    }) : customUpdated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.after;\n      if (toRun) {\n        await toRun(updated, context);\n      }\n    }\n    return updated;\n  }\n  return {\n    createWithHooks,\n    updateWithHooks,\n    updateManyWithHooks\n  };\n}\n\nconst createInternalAdapter = (adapter, ctx) => {\n  const logger = ctx.logger;\n  const options = ctx.options;\n  const secondaryStorage = options.secondaryStorage;\n  const sessionExpiration = options.session?.expiresIn || 60 * 60 * 24 * 7;\n  const { createWithHooks, updateWithHooks, updateManyWithHooks } = getWithHooks(adapter, ctx);\n  return {\n    createOAuthUser: async (user, account, context) => {\n      const createdUser = await createWithHooks(\n        {\n          // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...user\n        },\n        \"user\",\n        void 0,\n        context\n      );\n      const createdAccount = await createWithHooks(\n        {\n          ...account,\n          userId: createdUser.id,\n          // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date()\n        },\n        \"account\",\n        void 0,\n        context\n      );\n      return {\n        user: createdUser,\n        account: createdAccount\n      };\n    },\n    createUser: async (user, context) => {\n      const createdUser = await createWithHooks(\n        {\n          // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...user,\n          email: user.email?.toLowerCase()\n        },\n        \"user\",\n        void 0,\n        context\n      );\n      return createdUser;\n    },\n    createAccount: async (account, context) => {\n      const createdAccount = await createWithHooks(\n        {\n          // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...account\n        },\n        \"account\",\n        void 0,\n        context\n      );\n      return createdAccount;\n    },\n    listSessions: async (userId) => {\n      if (secondaryStorage) {\n        const currentList = await secondaryStorage.get(\n          `active-sessions-${userId}`\n        );\n        if (!currentList) return [];\n        const list = safeJSONParse(currentList) || [];\n        const now = Date.now();\n        const validSessions = list.filter((s) => s.expiresAt > now);\n        const sessions2 = [];\n        for (const session of validSessions) {\n          const sessionStringified = await secondaryStorage.get(session.token);\n          if (sessionStringified) {\n            const s = safeJSONParse(sessionStringified);\n            if (!s) return [];\n            const parsedSession = parseSessionOutput(ctx.options, {\n              ...s.session,\n              expiresAt: new Date(s.session.expiresAt)\n            });\n            sessions2.push(parsedSession);\n          }\n        }\n        return sessions2;\n      }\n      const sessions = await adapter.findMany({\n        model: \"session\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return sessions;\n    },\n    listUsers: async (limit, offset, sortBy, where) => {\n      const users = await adapter.findMany({\n        model: \"user\",\n        limit,\n        offset,\n        sortBy,\n        where\n      });\n      return users;\n    },\n    countTotalUsers: async (where) => {\n      const total = await adapter.count({\n        model: \"user\",\n        where\n      });\n      if (typeof total === \"string\") {\n        return parseInt(total);\n      }\n      return total;\n    },\n    deleteUser: async (userId) => {\n      if (secondaryStorage) {\n        await secondaryStorage.delete(`active-sessions-${userId}`);\n      }\n      if (!secondaryStorage || options.session?.storeSessionInDatabase) {\n        await adapter.deleteMany({\n          model: \"session\",\n          where: [\n            {\n              field: \"userId\",\n              value: userId\n            }\n          ]\n        });\n      }\n      await adapter.deleteMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      await adapter.delete({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ]\n      });\n    },\n    createSession: async (userId, ctx2, dontRememberMe, override, overrideAll) => {\n      const headers = ctx2.headers || ctx2.request?.headers;\n      const { id: _, ...rest } = override || {};\n      const data = {\n        ipAddress: ctx2.request || ctx2.headers ? getIp(ctx2.request || ctx2.headers, ctx2.context.options) || \"\" : \"\",\n        userAgent: headers?.get(\"user-agent\") || \"\",\n        ...rest,\n        /**\n         * If the user doesn't want to be remembered\n         * set the session to expire in 1 day.\n         * The cookie will be set to expire at the end of the session\n         */\n        expiresAt: dontRememberMe ? getDate(60 * 60 * 24, \"sec\") : getDate(sessionExpiration, \"sec\"),\n        userId,\n        token: generateId(32),\n        // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n        createdAt: /* @__PURE__ */ new Date(),\n        updatedAt: /* @__PURE__ */ new Date(),\n        ...overrideAll ? rest : {}\n      };\n      const res = await createWithHooks(\n        data,\n        \"session\",\n        secondaryStorage ? {\n          fn: async (sessionData) => {\n            const currentList = await secondaryStorage.get(\n              `active-sessions-${userId}`\n            );\n            let list = [];\n            const now = Date.now();\n            if (currentList) {\n              list = safeJSONParse(currentList) || [];\n              list = list.filter((session) => session.expiresAt > now);\n            }\n            list.push({\n              token: data.token,\n              expiresAt: now + sessionExpiration * 1e3\n            });\n            await secondaryStorage.set(\n              `active-sessions-${userId}`,\n              JSON.stringify(list),\n              sessionExpiration\n            );\n            return sessionData;\n          },\n          executeMainFn: options.session?.storeSessionInDatabase\n        } : void 0,\n        ctx2\n      );\n      return res;\n    },\n    findSession: async (token) => {\n      if (secondaryStorage) {\n        const sessionStringified = await secondaryStorage.get(token);\n        if (!sessionStringified && !options.session?.storeSessionInDatabase) {\n          return null;\n        }\n        if (sessionStringified) {\n          const s = safeJSONParse(sessionStringified);\n          if (!s) return null;\n          const parsedSession2 = parseSessionOutput(ctx.options, {\n            ...s.session,\n            expiresAt: new Date(s.session.expiresAt),\n            createdAt: new Date(s.session.createdAt),\n            updatedAt: new Date(s.session.updatedAt)\n          });\n          const parsedUser2 = parseUserOutput(ctx.options, {\n            ...s.user,\n            createdAt: new Date(s.user.createdAt),\n            updatedAt: new Date(s.user.updatedAt)\n          });\n          return {\n            session: parsedSession2,\n            user: parsedUser2\n          };\n        }\n      }\n      const session = await adapter.findOne({\n        model: \"session\",\n        where: [\n          {\n            value: token,\n            field: \"token\"\n          }\n        ]\n      });\n      if (!session) {\n        return null;\n      }\n      const user = await adapter.findOne({\n        model: \"user\",\n        where: [\n          {\n            value: session.userId,\n            field: \"id\"\n          }\n        ]\n      });\n      if (!user) {\n        return null;\n      }\n      const parsedSession = parseSessionOutput(ctx.options, session);\n      const parsedUser = parseUserOutput(ctx.options, user);\n      return {\n        session: parsedSession,\n        user: parsedUser\n      };\n    },\n    findSessions: async (sessionTokens) => {\n      if (secondaryStorage) {\n        const sessions2 = [];\n        for (const sessionToken of sessionTokens) {\n          const sessionStringified = await secondaryStorage.get(sessionToken);\n          if (sessionStringified) {\n            const s = safeJSONParse(sessionStringified);\n            if (!s) return [];\n            const session = {\n              session: {\n                ...s.session,\n                expiresAt: new Date(s.session.expiresAt)\n              },\n              user: {\n                ...s.user,\n                createdAt: new Date(s.user.createdAt),\n                updatedAt: new Date(s.user.updatedAt)\n              }\n            };\n            sessions2.push(session);\n          }\n        }\n        return sessions2;\n      }\n      const sessions = await adapter.findMany({\n        model: \"session\",\n        where: [\n          {\n            field: \"token\",\n            value: sessionTokens,\n            operator: \"in\"\n          }\n        ]\n      });\n      const userIds = sessions.map((session) => {\n        return session.userId;\n      });\n      if (!userIds.length) return [];\n      const users = await adapter.findMany({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userIds,\n            operator: \"in\"\n          }\n        ]\n      });\n      return sessions.map((session) => {\n        const user = users.find((u) => u.id === session.userId);\n        if (!user) return null;\n        return {\n          session,\n          user\n        };\n      });\n    },\n    updateSession: async (sessionToken, session, context) => {\n      const updatedSession = await updateWithHooks(\n        session,\n        [{ field: \"token\", value: sessionToken }],\n        \"session\",\n        secondaryStorage ? {\n          async fn(data) {\n            const currentSession = await secondaryStorage.get(sessionToken);\n            let updatedSession2 = null;\n            if (currentSession) {\n              const parsedSession = safeJSONParse(currentSession);\n              if (!parsedSession) return null;\n              updatedSession2 = {\n                ...parsedSession.session,\n                ...data\n              };\n              return updatedSession2;\n            } else {\n              return null;\n            }\n          },\n          executeMainFn: options.session?.storeSessionInDatabase\n        } : void 0,\n        context\n      );\n      return updatedSession;\n    },\n    deleteSession: async (token) => {\n      if (secondaryStorage) {\n        const data = await secondaryStorage.get(token);\n        if (data) {\n          const { session } = safeJSONParse(data) ?? {};\n          if (!session) {\n            logger.error(\"Session not found in secondary storage\");\n            return;\n          }\n          const userId = session.userId;\n          const currentList = await secondaryStorage.get(\n            `active-sessions-${userId}`\n          );\n          if (currentList) {\n            let list = safeJSONParse(currentList) || [];\n            list = list.filter((s) => s.token !== token);\n            if (list.length > 0) {\n              await secondaryStorage.set(\n                `active-sessions-${userId}`,\n                JSON.stringify(list),\n                sessionExpiration\n              );\n            } else {\n              await secondaryStorage.delete(`active-sessions-${userId}`);\n            }\n          } else {\n            logger.error(\"Active sessions list not found in secondary storage\");\n          }\n        }\n        await secondaryStorage.delete(token);\n        if (!options.session?.storeSessionInDatabase || ctx.options.session?.preserveSessionInDatabase) {\n          return;\n        }\n      }\n      await adapter.delete({\n        model: \"session\",\n        where: [\n          {\n            field: \"token\",\n            value: token\n          }\n        ]\n      });\n    },\n    deleteAccounts: async (userId) => {\n      await adapter.deleteMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n    },\n    deleteAccount: async (accountId) => {\n      await adapter.delete({\n        model: \"account\",\n        where: [\n          {\n            field: \"id\",\n            value: accountId\n          }\n        ]\n      });\n    },\n    deleteSessions: async (userIdOrSessionTokens) => {\n      if (secondaryStorage) {\n        if (typeof userIdOrSessionTokens === \"string\") {\n          const activeSession = await secondaryStorage.get(\n            `active-sessions-${userIdOrSessionTokens}`\n          );\n          const sessions = activeSession ? safeJSONParse(activeSession) : [];\n          if (!sessions) return;\n          for (const session of sessions) {\n            await secondaryStorage.delete(session.token);\n          }\n        } else {\n          for (const sessionToken of userIdOrSessionTokens) {\n            const session = await secondaryStorage.get(sessionToken);\n            if (session) {\n              await secondaryStorage.delete(sessionToken);\n            }\n          }\n        }\n        if (!options.session?.storeSessionInDatabase || ctx.options.session?.preserveSessionInDatabase) {\n          return;\n        }\n      }\n      await adapter.deleteMany({\n        model: \"session\",\n        where: [\n          {\n            field: Array.isArray(userIdOrSessionTokens) ? \"token\" : \"userId\",\n            value: userIdOrSessionTokens,\n            operator: Array.isArray(userIdOrSessionTokens) ? \"in\" : void 0\n          }\n        ]\n      });\n    },\n    findOAuthUser: async (email, accountId, providerId) => {\n      const account = await adapter.findMany({\n        model: \"account\",\n        where: [\n          {\n            value: accountId,\n            field: \"accountId\"\n          }\n        ]\n      }).then((accounts) => {\n        return accounts.find((a) => a.providerId === providerId);\n      });\n      if (account) {\n        const user = await adapter.findOne({\n          model: \"user\",\n          where: [\n            {\n              value: account.userId,\n              field: \"id\"\n            }\n          ]\n        });\n        if (user) {\n          return {\n            user,\n            accounts: [account]\n          };\n        } else {\n          const user2 = await adapter.findOne({\n            model: \"user\",\n            where: [\n              {\n                value: email.toLowerCase(),\n                field: \"email\"\n              }\n            ]\n          });\n          if (user2) {\n            return {\n              user: user2,\n              accounts: [account]\n            };\n          }\n          return null;\n        }\n      } else {\n        const user = await adapter.findOne({\n          model: \"user\",\n          where: [\n            {\n              value: email.toLowerCase(),\n              field: \"email\"\n            }\n          ]\n        });\n        if (user) {\n          const accounts = await adapter.findMany({\n            model: \"account\",\n            where: [\n              {\n                value: user.id,\n                field: \"userId\"\n              }\n            ]\n          });\n          return {\n            user,\n            accounts: accounts || []\n          };\n        } else {\n          return null;\n        }\n      }\n    },\n    findUserByEmail: async (email, options2) => {\n      const user = await adapter.findOne({\n        model: \"user\",\n        where: [\n          {\n            value: email.toLowerCase(),\n            field: \"email\"\n          }\n        ]\n      });\n      if (!user) return null;\n      if (options2?.includeAccounts) {\n        const accounts = await adapter.findMany({\n          model: \"account\",\n          where: [\n            {\n              value: user.id,\n              field: \"userId\"\n            }\n          ]\n        });\n        return {\n          user,\n          accounts\n        };\n      }\n      return {\n        user,\n        accounts: []\n      };\n    },\n    findUserById: async (userId) => {\n      const user = await adapter.findOne({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ]\n      });\n      return user;\n    },\n    linkAccount: async (account, context) => {\n      const _account = await createWithHooks(\n        {\n          // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...account\n        },\n        \"account\",\n        void 0,\n        context\n      );\n      return _account;\n    },\n    updateUser: async (userId, data, context) => {\n      const user = await updateWithHooks(\n        data,\n        [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ],\n        \"user\",\n        void 0,\n        context\n      );\n      if (secondaryStorage && user) {\n        const listRaw = await secondaryStorage.get(`active-sessions-${userId}`);\n        if (listRaw) {\n          const now = Date.now();\n          const list = safeJSONParse(listRaw) || [];\n          const validSessions = list.filter((s) => s.expiresAt > now);\n          await Promise.all(\n            validSessions.map(async ({ token }) => {\n              const cached = await secondaryStorage.get(token);\n              if (!cached) return;\n              const parsed = safeJSONParse(cached);\n              if (!parsed) return;\n              const sessionTTL = Math.max(\n                Math.floor(\n                  (new Date(parsed.session.expiresAt).getTime() - now) / 1e3\n                ),\n                0\n              );\n              await secondaryStorage.set(\n                token,\n                JSON.stringify({\n                  session: parsed.session,\n                  user\n                }),\n                sessionTTL\n              );\n            })\n          );\n        }\n      }\n      return user;\n    },\n    updateUserByEmail: async (email, data, context) => {\n      const user = await updateWithHooks(\n        data,\n        [\n          {\n            field: \"email\",\n            value: email.toLowerCase()\n          }\n        ],\n        \"user\",\n        void 0,\n        context\n      );\n      return user;\n    },\n    updatePassword: async (userId, password, context) => {\n      await updateManyWithHooks(\n        {\n          password\n        },\n        [\n          {\n            field: \"userId\",\n            value: userId\n          },\n          {\n            field: \"providerId\",\n            value: \"credential\"\n          }\n        ],\n        \"account\",\n        void 0,\n        context\n      );\n    },\n    findAccounts: async (userId) => {\n      const accounts = await adapter.findMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return accounts;\n    },\n    findAccount: async (accountId) => {\n      const account = await adapter.findOne({\n        model: \"account\",\n        where: [\n          {\n            field: \"accountId\",\n            value: accountId\n          }\n        ]\n      });\n      return account;\n    },\n    findAccountByProviderId: async (accountId, providerId) => {\n      const account = await adapter.findOne({\n        model: \"account\",\n        where: [\n          {\n            field: \"accountId\",\n            value: accountId\n          },\n          {\n            field: \"providerId\",\n            value: providerId\n          }\n        ]\n      });\n      return account;\n    },\n    findAccountByUserId: async (userId) => {\n      const account = await adapter.findMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return account;\n    },\n    updateAccount: async (id, data, context) => {\n      const account = await updateWithHooks(\n        data,\n        [{ field: \"id\", value: id }],\n        \"account\",\n        void 0,\n        context\n      );\n      return account;\n    },\n    createVerificationValue: async (data, context) => {\n      const verification = await createWithHooks(\n        {\n          // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...data\n        },\n        \"verification\",\n        void 0,\n        context\n      );\n      return verification;\n    },\n    findVerificationValue: async (identifier) => {\n      const verification = await adapter.findMany({\n        model: \"verification\",\n        where: [\n          {\n            field: \"identifier\",\n            value: identifier\n          }\n        ],\n        sortBy: {\n          field: \"createdAt\",\n          direction: \"desc\"\n        },\n        limit: 1\n      });\n      if (!options.verification?.disableCleanup) {\n        await adapter.deleteMany({\n          model: \"verification\",\n          where: [\n            {\n              field: \"expiresAt\",\n              value: /* @__PURE__ */ new Date(),\n              operator: \"lt\"\n            }\n          ]\n        });\n      }\n      const lastVerification = verification[0];\n      return lastVerification;\n    },\n    deleteVerificationValue: async (id) => {\n      await adapter.delete({\n        model: \"verification\",\n        where: [\n          {\n            field: \"id\",\n            value: id\n          }\n        ]\n      });\n    },\n    deleteVerificationByIdentifier: async (identifier) => {\n      await adapter.delete({\n        model: \"verification\",\n        where: [\n          {\n            field: \"identifier\",\n            value: identifier\n          }\n        ]\n      });\n    },\n    updateVerificationValue: async (id, data, context) => {\n      const verification = await updateWithHooks(\n        data,\n        [{ field: \"id\", value: id }],\n        \"verification\",\n        void 0,\n        context\n      );\n      return verification;\n    }\n  };\n};\n\nasync function getAdapter(options) {\n  if (!options.database) {\n    const tables = getAuthTables(options);\n    const memoryDB = Object.keys(tables).reduce((acc, key) => {\n      acc[key] = [];\n      return acc;\n    }, {});\n    logger.warn(\n      \"No database configuration provided. Using memory adapter in development\"\n    );\n    return memoryAdapter(memoryDB)(options);\n  }\n  if (typeof options.database === \"function\") {\n    return options.database(options);\n  }\n  const { kysely, databaseType } = await createKyselyAdapter(options);\n  if (!kysely) {\n    throw new BetterAuthError(\"Failed to initialize database adapter\");\n  }\n  return kyselyAdapter(kysely, {\n    type: databaseType || \"sqlite\",\n    debugLogs: \"debugLogs\" in options.database ? options.database.debugLogs : false\n  })(options);\n}\nfunction convertToDB(fields, values) {\n  let result = values.id ? {\n    id: values.id\n  } : {};\n  for (const key in fields) {\n    const field = fields[key];\n    const value = values[key];\n    if (value === void 0) {\n      continue;\n    }\n    result[field.fieldName || key] = value;\n  }\n  return result;\n}\nfunction convertFromDB(fields, values) {\n  if (!values) {\n    return null;\n  }\n  let result = {\n    id: values.id\n  };\n  for (const [key, value] of Object.entries(fields)) {\n    result[key] = values[value.fieldName || key];\n  }\n  return result;\n}\n\nfunction getSchema(config) {\n  const tables = getAuthTables(config);\n  let schema = {};\n  for (const key in tables) {\n    const table = tables[key];\n    const fields = table.fields;\n    let actualFields = {};\n    Object.entries(fields).forEach(([key2, field]) => {\n      actualFields[field.fieldName || key2] = field;\n      if (field.references) {\n        const refTable = tables[field.references.model];\n        if (refTable) {\n          actualFields[field.fieldName || key2].references = {\n            model: refTable.modelName,\n            field: field.references.field\n          };\n        }\n      }\n    });\n    if (schema[table.modelName]) {\n      schema[table.modelName].fields = {\n        ...schema[table.modelName].fields,\n        ...actualFields\n      };\n      continue;\n    }\n    schema[table.modelName] = {\n      fields: actualFields,\n      order: table.order || Infinity\n    };\n  }\n  return schema;\n}\n\nconst postgresMap = {\n  string: [\"character varying\", \"varchar\", \"text\"],\n  number: [\n    \"int4\",\n    \"integer\",\n    \"bigint\",\n    \"smallint\",\n    \"numeric\",\n    \"real\",\n    \"double precision\"\n  ],\n  boolean: [\"bool\", \"boolean\"],\n  date: [\"timestamp\", \"date\"],\n  json: [\"json\", \"jsonb\"]\n};\nconst mysqlMap = {\n  string: [\"varchar\", \"text\"],\n  number: [\n    \"integer\",\n    \"int\",\n    \"bigint\",\n    \"smallint\",\n    \"decimal\",\n    \"float\",\n    \"double\"\n  ],\n  boolean: [\"boolean\", \"tinyint\"],\n  date: [\"timestamp\", \"datetime\", \"date\"],\n  json: [\"json\"]\n};\nconst sqliteMap = {\n  string: [\"TEXT\"],\n  number: [\"INTEGER\", \"REAL\"],\n  boolean: [\"INTEGER\", \"BOOLEAN\"],\n  // 0 or 1\n  date: [\"DATE\", \"INTEGER\"],\n  json: [\"TEXT\"]\n};\nconst mssqlMap = {\n  string: [\"varchar\", \"nvarchar\"],\n  number: [\"int\", \"bigint\", \"smallint\", \"decimal\", \"float\", \"double\"],\n  boolean: [\"bit\", \"smallint\"],\n  date: [\"datetime\", \"date\"],\n  json: [\"varchar\", \"nvarchar\"]\n};\nconst map = {\n  postgres: postgresMap,\n  mysql: mysqlMap,\n  sqlite: sqliteMap,\n  mssql: mssqlMap\n};\nfunction matchType(columnDataType, fieldType, dbType) {\n  function normalize(type) {\n    return type.toLowerCase().split(\"(\")[0].trim();\n  }\n  if (fieldType === \"string[]\" || fieldType === \"number[]\") {\n    return columnDataType.toLowerCase().includes(\"json\");\n  }\n  const types = map[dbType];\n  const expected = Array.isArray(fieldType) ? types[\"string\"].map((t) => t.toLowerCase()) : types[fieldType].map((t) => t.toLowerCase());\n  return expected.includes(normalize(columnDataType));\n}\nasync function getMigrations(config) {\n  const betterAuthSchema = getSchema(config);\n  const logger = createLogger(config.logger);\n  let { kysely: db, databaseType: dbType } = await createKyselyAdapter(config);\n  if (!dbType) {\n    logger.warn(\n      \"Could not determine database type, defaulting to sqlite. Please provide a type in the database options to avoid this.\"\n    );\n    dbType = \"sqlite\";\n  }\n  if (!db) {\n    logger.error(\n      \"Only kysely adapter is supported for migrations. You can use `generate` command to generate the schema, if you're using a different adapter.\"\n    );\n    process.exit(1);\n  }\n  const tableMetadata = await db.introspection.getTables();\n  const toBeCreated = [];\n  const toBeAdded = [];\n  for (const [key, value] of Object.entries(betterAuthSchema)) {\n    const table = tableMetadata.find((t) => t.name === key);\n    if (!table) {\n      const tIndex = toBeCreated.findIndex((t) => t.table === key);\n      const tableData = {\n        table: key,\n        fields: value.fields,\n        order: value.order || Infinity\n      };\n      const insertIndex = toBeCreated.findIndex(\n        (t) => (t.order || Infinity) > tableData.order\n      );\n      if (insertIndex === -1) {\n        if (tIndex === -1) {\n          toBeCreated.push(tableData);\n        } else {\n          toBeCreated[tIndex].fields = {\n            ...toBeCreated[tIndex].fields,\n            ...value.fields\n          };\n        }\n      } else {\n        toBeCreated.splice(insertIndex, 0, tableData);\n      }\n      continue;\n    }\n    let toBeAddedFields = {};\n    for (const [fieldName, field] of Object.entries(value.fields)) {\n      const column = table.columns.find((c) => c.name === fieldName);\n      if (!column) {\n        toBeAddedFields[fieldName] = field;\n        continue;\n      }\n      if (matchType(column.dataType, field.type, dbType)) {\n        continue;\n      } else {\n        logger.warn(\n          `Field ${fieldName} in table ${key} has a different type in the database. Expected ${field.type} but got ${column.dataType}.`\n        );\n      }\n    }\n    if (Object.keys(toBeAddedFields).length > 0) {\n      toBeAdded.push({\n        table: key,\n        fields: toBeAddedFields,\n        order: value.order || Infinity\n      });\n    }\n  }\n  const migrations = [];\n  function getType(field, fieldName) {\n    const type = field.type;\n    const typeMap = {\n      string: {\n        sqlite: \"text\",\n        postgres: \"text\",\n        mysql: field.unique ? \"varchar(255)\" : field.references ? \"varchar(36)\" : \"text\",\n        mssql: field.unique || field.sortable ? \"varchar(255)\" : field.references ? \"varchar(36)\" : (\n          // mssql deprecated `text`, and the alternative is `varchar(max)`.\n          // Kysely type interface doesn't support `text`, so we set this to `varchar(8000)` as\n          // that's the max length for `varchar`\n          \"varchar(8000)\"\n        )\n      },\n      boolean: {\n        sqlite: \"integer\",\n        postgres: \"boolean\",\n        mysql: \"boolean\",\n        mssql: \"smallint\"\n      },\n      number: {\n        sqlite: field.bigint ? \"bigint\" : \"integer\",\n        postgres: field.bigint ? \"bigint\" : \"integer\",\n        mysql: field.bigint ? \"bigint\" : \"integer\",\n        mssql: field.bigint ? \"bigint\" : \"integer\"\n      },\n      date: {\n        sqlite: \"date\",\n        postgres: \"timestamp\",\n        mysql: \"datetime\",\n        mssql: \"datetime\"\n      },\n      json: {\n        sqlite: \"text\",\n        postgres: \"json\",\n        mysql: \"json\",\n        mssql: \"varchar(8000)\"\n      },\n      id: {\n        postgres: config.advanced?.database?.useNumberId ? \"serial\" : \"text\",\n        mysql: config.advanced?.database?.useNumberId ? \"integer\" : \"varchar(36)\",\n        mssql: config.advanced?.database?.useNumberId ? \"integer\" : \"varchar(36)\",\n        sqlite: config.advanced?.database?.useNumberId ? \"integer\" : \"text\"\n      }\n    };\n    if (fieldName === \"id\" || field.references?.field === \"id\") {\n      return typeMap.id[dbType];\n    }\n    if (dbType === \"sqlite\" && (type === \"string[]\" || type === \"number[]\")) {\n      return \"text\";\n    }\n    if (type === \"string[]\" || type === \"number[]\") {\n      return \"jsonb\";\n    }\n    if (Array.isArray(type)) {\n      return \"text\";\n    }\n    return typeMap[type][dbType || \"sqlite\"];\n  }\n  if (toBeAdded.length) {\n    for (const table of toBeAdded) {\n      for (const [fieldName, field] of Object.entries(table.fields)) {\n        const type = getType(field, fieldName);\n        const exec = db.schema.alterTable(table.table).addColumn(fieldName, type, (col) => {\n          col = field.required !== false ? col.notNull() : col;\n          if (field.references) {\n            col = col.references(\n              `${field.references.model}.${field.references.field}`\n            ).onDelete(field.references.onDelete || \"cascade\");\n          }\n          if (field.unique) {\n            col = col.unique();\n          }\n          if (field.type === \"date\" && typeof field.defaultValue === \"function\" && (dbType === \"postgres\" || dbType === \"mysql\" || dbType === \"mssql\")) {\n            col = col.defaultTo(sql`CURRENT_TIMESTAMP`);\n          }\n          return col;\n        });\n        migrations.push(exec);\n      }\n    }\n  }\n  if (toBeCreated.length) {\n    for (const table of toBeCreated) {\n      let dbT = db.schema.createTable(table.table).addColumn(\n        \"id\",\n        config.advanced?.database?.useNumberId ? dbType === \"postgres\" ? \"serial\" : \"integer\" : dbType === \"mysql\" || dbType === \"mssql\" ? \"varchar(36)\" : \"text\",\n        (col) => {\n          if (config.advanced?.database?.useNumberId) {\n            if (dbType === \"postgres\") {\n              return col.primaryKey().notNull();\n            }\n            return col.autoIncrement().primaryKey().notNull();\n          }\n          return col.primaryKey().notNull();\n        }\n      );\n      for (const [fieldName, field] of Object.entries(table.fields)) {\n        const type = getType(field, fieldName);\n        dbT = dbT.addColumn(fieldName, type, (col) => {\n          col = field.required !== false ? col.notNull() : col;\n          if (field.references) {\n            col = col.references(`${field.references.model}.${field.references.field}`).onDelete(field.references.onDelete || \"cascade\");\n          }\n          if (field.unique) {\n            col = col.unique();\n          }\n          if (field.type === \"date\" && typeof field.defaultValue === \"function\" && (dbType === \"postgres\" || dbType === \"mysql\" || dbType === \"mssql\")) {\n            col = col.defaultTo(sql`CURRENT_TIMESTAMP`);\n          }\n          return col;\n        });\n      }\n      migrations.push(dbT);\n    }\n  }\n  async function runMigrations() {\n    for (const migration of migrations) {\n      await migration.execute();\n    }\n  }\n  async function compileMigrations() {\n    const compiled = migrations.map((m) => m.compile().sql);\n    return compiled.join(\";\\n\\n\") + \";\";\n  }\n  return { toBeCreated, toBeAdded, runMigrations, compileMigrations };\n}\n\nexport { getAdapter as a, convertToDB as b, createInternalAdapter as c, convertFromDB as d, getMigrations as e, getSchema as f, getWithHooks as g, matchType as m };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5085, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.DrJWSFx6.mjs"],"sourcesContent":["import * as z from 'zod/v4';\n\nfunction toZodSchema({\n  fields,\n  isClientSide\n}) {\n  const zodFields = Object.keys(fields).reduce((acc, key) => {\n    const field = fields[key];\n    if (!field) {\n      return acc;\n    }\n    if (isClientSide && field.input === false) {\n      return acc;\n    }\n    let schema2;\n    if (field.type === \"json\") {\n      schema2 = z.json ? z.json() : z.any();\n    } else if (field.type === \"string[]\" || field.type === \"number[]\") {\n      schema2 = z.array(field.type === \"string[]\" ? z.string() : z.number());\n    } else if (Array.isArray(field.type)) {\n      schema2 = z.any();\n    } else {\n      schema2 = z[field.type]();\n    }\n    if (field?.required === false) {\n      schema2 = schema2.optional();\n    }\n    if (field?.returned === false) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: schema2\n    };\n  }, {});\n  const schema = z.object(zodFields);\n  return schema;\n}\n\nexport { toZodSchema as t };\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEA,SAAS,YAAY,KAGpB;QAHoB,EACnB,MAAM,EACN,YAAY,EACb,GAHoB;IAInB,MAAM,YAAY,OAAO,IAAI,CAAC,QAAQ,MAAM,CAAC,CAAC,KAAK;QACjD,MAAM,QAAQ,MAAM,CAAC,IAAI;QACzB,IAAI,CAAC,OAAO;YACV,OAAO;QACT;QACA,IAAI,gBAAgB,MAAM,KAAK,KAAK,OAAO;YACzC,OAAO;QACT;QACA,IAAI;QACJ,IAAI,MAAM,IAAI,KAAK,QAAQ;YACzB,UAAU,wKAAE,IAAI,GAAG,wKAAE,IAAI,KAAK,wKAAE,GAAG;QACrC,OAAO,IAAI,MAAM,IAAI,KAAK,cAAc,MAAM,IAAI,KAAK,YAAY;YACjE,UAAU,wKAAE,KAAK,CAAC,MAAM,IAAI,KAAK,aAAa,wKAAE,MAAM,KAAK,wKAAE,MAAM;QACrE,OAAO,IAAI,MAAM,OAAO,CAAC,MAAM,IAAI,GAAG;YACpC,UAAU,wKAAE,GAAG;QACjB,OAAO;YACL,UAAU,uKAAC,CAAC,MAAM,IAAI,CAAC;QACzB;QACA,IAAI,CAAA,kBAAA,4BAAA,MAAO,QAAQ,MAAK,OAAO;YAC7B,UAAU,QAAQ,QAAQ;QAC5B;QACA,IAAI,CAAA,kBAAA,4BAAA,MAAO,QAAQ,MAAK,OAAO;YAC7B,OAAO;QACT;QACA,OAAO;YACL,GAAG,GAAG;YACN,CAAC,IAAI,EAAE;QACT;IACF,GAAG,CAAC;IACJ,MAAM,SAAS,wKAAE,MAAM,CAAC;IACxB,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5158, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.DVhkokI7.mjs"],"sourcesContent":["import { c as createAuthMiddleware, s as sessionMiddleware } from './better-auth.DV5EHeYG.mjs';\nimport 'better-call';\nimport './better-auth.nqWf7zUe.mjs';\nimport * as z from 'zod/v4';\nimport './better-auth.CMQ3rA-I.mjs';\nimport '@better-auth/utils/base64';\nimport '@better-auth/utils/hmac';\nimport './better-auth.BjBlybv-.mjs';\nimport '@better-auth/utils/binary';\nimport './better-auth.Dcv8PS7T.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport './better-auth.B4Qoxdgc.mjs';\n\nconst orgMiddleware = createAuthMiddleware(async () => {\n  return {};\n});\nconst orgSessionMiddleware = createAuthMiddleware(\n  {\n    use: [sessionMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    return {\n      session\n    };\n  }\n);\n\nconst role = z.string();\nconst invitationStatus = z.enum([\"pending\", \"accepted\", \"rejected\", \"canceled\"]).default(\"pending\");\nz.object({\n  id: z.string().default(generateId),\n  name: z.string(),\n  slug: z.string(),\n  logo: z.string().nullish().optional(),\n  metadata: z.record(z.string(), z.unknown()).or(z.string().transform((v) => JSON.parse(v))).optional(),\n  createdAt: z.date()\n});\nz.object({\n  id: z.string().default(generateId),\n  organizationId: z.string(),\n  userId: z.coerce.string(),\n  role,\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date())\n});\nz.object({\n  id: z.string().default(generateId),\n  organizationId: z.string(),\n  email: z.string(),\n  role,\n  status: invitationStatus,\n  teamId: z.string().nullish(),\n  inviterId: z.string(),\n  expiresAt: z.date()\n});\nconst teamSchema = z.object({\n  id: z.string().default(generateId),\n  name: z.string().min(1),\n  organizationId: z.string(),\n  createdAt: z.date(),\n  updatedAt: z.date().optional()\n});\nz.object({\n  id: z.string().default(generateId),\n  teamId: z.string(),\n  userId: z.string(),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date())\n});\nz.object({\n  id: z.string().default(generateId),\n  organizationId: z.string(),\n  role: z.string(),\n  permission: z.record(z.string(), z.array(z.string())),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  updatedAt: z.date().optional()\n});\nconst defaultRoles = [\"admin\", \"member\", \"owner\"];\nz.union([\n  z.enum(defaultRoles),\n  z.array(z.enum(defaultRoles))\n]);\n\nexport { orgSessionMiddleware as a, orgMiddleware as o, teamSchema as t };\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAM,gBAAgB,IAAA,uLAAoB,EAAC;IACzC,OAAO,CAAC;AACV;AACA,MAAM,uBAAuB,IAAA,uLAAoB,EAC/C;IACE,KAAK;QAAC,uLAAiB;KAAC;AAC1B,GACA,OAAO;IACL,MAAM,UAAU,IAAI,OAAO,CAAC,OAAO;IACnC,OAAO;QACL;IACF;AACF;AAGF,MAAM,OAAO,8LAAQ;AACrB,MAAM,mBAAmB,4LAAM,CAAC;IAAC;IAAW;IAAY;IAAY;CAAW,EAAE,OAAO,CAAC;AACzF,8LAAQ,CAAC;IACP,IAAI,8LAAQ,GAAG,OAAO,CAAC,uLAAU;IACjC,MAAM,8LAAQ;IACd,MAAM,8LAAQ;IACd,MAAM,8LAAQ,GAAG,OAAO,GAAG,QAAQ;IACnC,UAAU,8LAAQ,CAAC,8LAAQ,IAAI,+LAAS,IAAI,EAAE,CAAC,8LAAQ,GAAG,SAAS,CAAC,CAAC,IAAM,KAAK,KAAK,CAAC,KAAK,QAAQ;IACnG,WAAW,4LAAM;AACnB;AACA,8LAAQ,CAAC;IACP,IAAI,8LAAQ,GAAG,OAAO,CAAC,uLAAU;IACjC,gBAAgB,8LAAQ;IACxB,QAAQ,+LAAQ,CAAC,MAAM;IACvB;IACA,WAAW,4LAAM,GAAG,OAAO,CAAC,IAAM,aAAa,GAAG,IAAI;AACxD;AACA,8LAAQ,CAAC;IACP,IAAI,8LAAQ,GAAG,OAAO,CAAC,uLAAU;IACjC,gBAAgB,8LAAQ;IACxB,OAAO,8LAAQ;IACf;IACA,QAAQ;IACR,QAAQ,8LAAQ,GAAG,OAAO;IAC1B,WAAW,8LAAQ;IACnB,WAAW,4LAAM;AACnB;AACA,MAAM,aAAa,8LAAQ,CAAC;IAC1B,IAAI,8LAAQ,GAAG,OAAO,CAAC,uLAAU;IACjC,MAAM,8LAAQ,GAAG,GAAG,CAAC;IACrB,gBAAgB,8LAAQ;IACxB,WAAW,4LAAM;IACjB,WAAW,4LAAM,GAAG,QAAQ;AAC9B;AACA,8LAAQ,CAAC;IACP,IAAI,8LAAQ,GAAG,OAAO,CAAC,uLAAU;IACjC,QAAQ,8LAAQ;IAChB,QAAQ,8LAAQ;IAChB,WAAW,4LAAM,GAAG,OAAO,CAAC,IAAM,aAAa,GAAG,IAAI;AACxD;AACA,8LAAQ,CAAC;IACP,IAAI,8LAAQ,GAAG,OAAO,CAAC,uLAAU;IACjC,gBAAgB,8LAAQ;IACxB,MAAM,8LAAQ;IACd,YAAY,8LAAQ,CAAC,8LAAQ,IAAI,6LAAO,CAAC,8LAAQ;IACjD,WAAW,4LAAM,GAAG,OAAO,CAAC,IAAM,aAAa,GAAG,IAAI;IACtD,WAAW,4LAAM,GAAG,QAAQ;AAC9B;AACA,MAAM,eAAe;IAAC;IAAS;IAAU;CAAQ;AACjD,6LAAO,CAAC;IACN,4LAAM,CAAC;IACP,6LAAO,CAAC,4LAAM,CAAC;CAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5284, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.YwDQhoPc.mjs"],"sourcesContent":["import { APIError } from 'better-call';\n\nasync function validatePassword(ctx, data) {\n  const accounts = await ctx.context.internalAdapter.findAccounts(data.userId);\n  const credentialAccount = accounts?.find(\n    (account) => account.providerId === \"credential\"\n  );\n  const currentPassword = credentialAccount?.password;\n  if (!credentialAccount || !currentPassword) {\n    return false;\n  }\n  const compare = await ctx.context.password.verify({\n    hash: currentPassword,\n    password: data.password\n  });\n  return compare;\n}\nasync function checkPassword(userId, c) {\n  const accounts = await c.context.internalAdapter.findAccounts(userId);\n  const credentialAccount = accounts?.find(\n    (account) => account.providerId === \"credential\"\n  );\n  const currentPassword = credentialAccount?.password;\n  if (!credentialAccount || !currentPassword || !c.body.password) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"No password credential found\"\n    });\n  }\n  const compare = await c.context.password.verify({\n    hash: currentPassword,\n    password: c.body.password\n  });\n  if (!compare) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"Invalid password\"\n    });\n  }\n  return true;\n}\n\nexport { checkPassword as c, validatePassword as v };\n"],"names":[],"mappings":";;;;;;AAAA;;AAEA,eAAe,iBAAiB,GAAG,EAAE,IAAI;IACvC,MAAM,WAAW,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,MAAM;IAC3E,MAAM,oBAAoB,qBAAA,+BAAA,SAAU,IAAI,CACtC,CAAC,UAAY,QAAQ,UAAU,KAAK;IAEtC,MAAM,kBAAkB,8BAAA,wCAAA,kBAAmB,QAAQ;IACnD,IAAI,CAAC,qBAAqB,CAAC,iBAAiB;QAC1C,OAAO;IACT;IACA,MAAM,UAAU,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;QAChD,MAAM;QACN,UAAU,KAAK,QAAQ;IACzB;IACA,OAAO;AACT;AACA,eAAe,cAAc,MAAM,EAAE,CAAC;IACpC,MAAM,WAAW,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC;IAC9D,MAAM,oBAAoB,qBAAA,+BAAA,SAAU,IAAI,CACtC,CAAC,UAAY,QAAQ,UAAU,KAAK;IAEtC,MAAM,kBAAkB,8BAAA,wCAAA,kBAAmB,QAAQ;IACnD,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE;QAC9D,MAAM,IAAI,8JAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,UAAU,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC9C,MAAM;QACN,UAAU,EAAE,IAAI,CAAC,QAAQ;IAC3B;IACA,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,8JAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5330, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.DQI8AD7d.mjs"],"sourcesContent":["import { APIError } from 'better-call';\n\nconst getEndpointResponse = async (ctx) => {\n  const returned = ctx.context.returned;\n  if (!returned) {\n    return null;\n  }\n  if (returned instanceof Response) {\n    if (returned.status !== 200) {\n      return null;\n    }\n    return await returned.clone().json();\n  }\n  if (returned instanceof APIError) {\n    return null;\n  }\n  return returned;\n};\n\nexport { getEndpointResponse as g };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,sBAAsB,OAAO;IACjC,MAAM,WAAW,IAAI,OAAO,CAAC,QAAQ;IACrC,IAAI,CAAC,UAAU;QACb,OAAO;IACT;IACA,IAAI,oBAAoB,UAAU;QAChC,IAAI,SAAS,MAAM,KAAK,KAAK;YAC3B,OAAO;QACT;QACA,OAAO,MAAM,SAAS,KAAK,GAAG,IAAI;IACpC;IACA,IAAI,oBAAoB,8JAAQ,EAAE;QAChC,OAAO;IACT;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5357, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.BA2h5uPw.mjs"],"sourcesContent":["import * as z from 'zod/v4';\nimport { APIError } from 'better-call';\nimport './better-auth.nqWf7zUe.mjs';\nimport { c as createAuthMiddleware, g as getSessionFromCtx, a as createAuthEndpoint, B as BASE_ERROR_CODES } from './better-auth.DV5EHeYG.mjs';\nimport { s as setSessionCookie, d as deleteSessionCookie } from './better-auth.UfVWArIB.mjs';\nimport { m as mergeSchema, b as parseUserOutput } from './better-auth.Dcv8PS7T.mjs';\nimport './better-auth.CMQ3rA-I.mjs';\nimport './better-auth.BjBlybv-.mjs';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { g as getEndpointResponse } from './better-auth.DQI8AD7d.mjs';\nimport { h as hasPermission } from './better-auth.bkwPl2G4.mjs';\n\nconst ADMIN_ERROR_CODES = {\n  FAILED_TO_CREATE_USER: \"Failed to create user\",\n  USER_ALREADY_EXISTS: \"User already exists. Use another email.\",\n  YOU_CANNOT_BAN_YOURSELF: \"You cannot ban yourself\",\n  YOU_ARE_NOT_ALLOWED_TO_CHANGE_USERS_ROLE: \"You are not allowed to change users role\",\n  YOU_ARE_NOT_ALLOWED_TO_CREATE_USERS: \"You are not allowed to create users\",\n  YOU_ARE_NOT_ALLOWED_TO_LIST_USERS: \"You are not allowed to list users\",\n  YOU_ARE_NOT_ALLOWED_TO_LIST_USERS_SESSIONS: \"You are not allowed to list users sessions\",\n  YOU_ARE_NOT_ALLOWED_TO_BAN_USERS: \"You are not allowed to ban users\",\n  YOU_ARE_NOT_ALLOWED_TO_IMPERSONATE_USERS: \"You are not allowed to impersonate users\",\n  YOU_ARE_NOT_ALLOWED_TO_REVOKE_USERS_SESSIONS: \"You are not allowed to revoke users sessions\",\n  YOU_ARE_NOT_ALLOWED_TO_DELETE_USERS: \"You are not allowed to delete users\",\n  YOU_ARE_NOT_ALLOWED_TO_SET_USERS_PASSWORD: \"You are not allowed to set users password\",\n  BANNED_USER: \"You have been banned from this application\",\n  YOU_ARE_NOT_ALLOWED_TO_GET_USER: \"You are not allowed to get user\",\n  NO_DATA_TO_UPDATE: \"No data to update\",\n  YOU_ARE_NOT_ALLOWED_TO_UPDATE_USERS: \"You are not allowed to update users\",\n  YOU_CANNOT_REMOVE_YOURSELF: \"You cannot remove yourself\"\n};\n\nconst schema = {\n  user: {\n    fields: {\n      role: {\n        type: \"string\",\n        required: false,\n        input: false\n      },\n      banned: {\n        type: \"boolean\",\n        defaultValue: false,\n        required: false,\n        input: false\n      },\n      banReason: {\n        type: \"string\",\n        required: false,\n        input: false\n      },\n      banExpires: {\n        type: \"date\",\n        required: false,\n        input: false\n      }\n    }\n  },\n  session: {\n    fields: {\n      impersonatedBy: {\n        type: \"string\",\n        required: false\n      }\n    }\n  }\n};\n\nfunction parseRoles(roles) {\n  return Array.isArray(roles) ? roles.join(\",\") : roles;\n}\nconst admin = (options) => {\n  const opts = {\n    defaultRole: options?.defaultRole ?? \"user\",\n    adminRoles: options?.adminRoles ?? [\"admin\"],\n    bannedUserMessage: options?.bannedUserMessage ?? \"You have been banned from this application. Please contact support if you believe this is an error.\",\n    ...options\n  };\n  const adminMiddleware = createAuthMiddleware(async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    if (!session) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    return {\n      session\n    };\n  });\n  return {\n    id: \"admin\",\n    init() {\n      return {\n        options: {\n          databaseHooks: {\n            user: {\n              create: {\n                async before(user) {\n                  return {\n                    data: {\n                      role: options?.defaultRole ?? \"user\",\n                      ...user\n                    }\n                  };\n                }\n              }\n            },\n            session: {\n              create: {\n                async before(session, ctx) {\n                  if (!ctx) {\n                    return;\n                  }\n                  const user = await ctx.context.internalAdapter.findUserById(\n                    session.userId\n                  );\n                  if (user.banned) {\n                    if (user.banExpires && new Date(user.banExpires).getTime() < Date.now()) {\n                      await ctx.context.internalAdapter.updateUser(\n                        session.userId,\n                        {\n                          banned: false,\n                          banReason: null,\n                          banExpires: null\n                        }\n                      );\n                      return;\n                    }\n                    if (ctx && (ctx.path.startsWith(\"/callback\") || ctx.path.startsWith(\"/oauth2/callback\"))) {\n                      const redirectURI = ctx.context.options.onAPIError?.errorURL || `${ctx.context.baseURL}/error`;\n                      throw ctx.redirect(\n                        `${redirectURI}?error=banned&error_description=${opts.bannedUserMessage}`\n                      );\n                    }\n                    throw new APIError(\"FORBIDDEN\", {\n                      message: opts.bannedUserMessage,\n                      code: \"BANNED_USER\"\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      };\n    },\n    hooks: {\n      after: [\n        {\n          matcher(context) {\n            return context.path === \"/list-sessions\";\n          },\n          handler: createAuthMiddleware(async (ctx) => {\n            const response = await getEndpointResponse(ctx);\n            if (!response) {\n              return;\n            }\n            const newJson = response.filter((session) => {\n              return !session.impersonatedBy;\n            });\n            return ctx.json(newJson);\n          })\n        }\n      ]\n    },\n    endpoints: {\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/set-role`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.setRole`\n       *\n       * **client:**\n       * `authClient.admin.setRole`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-set-role)\n       */\n      setRole: createAuthEndpoint(\n        \"/admin/set-role\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            }),\n            role: z.union([\n              z.string().meta({\n                description: \"The role to set. `admin` or `user` by default\"\n              }),\n              z.array(\n                z.string().meta({\n                  description: \"The roles to set. `admin` or `user` by default\"\n                })\n              )\n            ]).meta({\n              description: \"The role to set, this can be a string or an array of strings. Eg: `admin` or `[admin, user]`\"\n            })\n          }),\n          requireHeaders: true,\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"setRole\",\n              summary: \"Set the role of a user\",\n              description: \"Set the role of a user\",\n              responses: {\n                200: {\n                  description: \"User role updated\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            $Infer: {\n              body: {}\n            }\n          }\n        },\n        async (ctx) => {\n          const canSetRole = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: ctx.context.session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"set-role\"]\n            }\n          });\n          if (!canSetRole) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CHANGE_USERS_ROLE\n            });\n          }\n          const updatedUser = await ctx.context.internalAdapter.updateUser(\n            ctx.body.userId,\n            {\n              role: parseRoles(ctx.body.role)\n            },\n            ctx\n          );\n          return ctx.json({\n            user: updatedUser\n          });\n        }\n      ),\n      getUser: createAuthEndpoint(\n        \"/admin/get-user\",\n        {\n          method: \"GET\",\n          query: z.object({\n            id: z.string().meta({\n              description: \"The id of the User\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"getUser\",\n              summary: \"Get an existing user\",\n              description: \"Get an existing user\",\n              responses: {\n                200: {\n                  description: \"User\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const { id } = ctx.query;\n          const canGetUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: ctx.context.session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"get\"]\n            }\n          });\n          if (!canGetUser) {\n            throw ctx.error(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_GET_USER,\n              code: \"YOU_ARE_NOT_ALLOWED_TO_GET_USER\"\n            });\n          }\n          const user = await ctx.context.internalAdapter.findUserById(id);\n          if (!user) {\n            throw new APIError(\"NOT_FOUND\", {\n              message: BASE_ERROR_CODES.USER_NOT_FOUND\n            });\n          }\n          return parseUserOutput(ctx.context.options, user);\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/create-user`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.createUser`\n       *\n       * **client:**\n       * `authClient.admin.createUser`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-create-user)\n       */\n      createUser: createAuthEndpoint(\n        \"/admin/create-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            email: z.string().meta({\n              description: \"The email of the user\"\n            }),\n            password: z.string().meta({\n              description: \"The password of the user\"\n            }),\n            name: z.string().meta({\n              description: \"The name of the user\"\n            }),\n            role: z.union([\n              z.string().meta({\n                description: \"The role of the user\"\n              }),\n              z.array(\n                z.string().meta({\n                  description: \"The roles of user\"\n                })\n              )\n            ]).optional().meta({\n              description: `A string or array of strings representing the roles to apply to the new user. Eg: \"user\"`\n            }),\n            /**\n             * extra fields for user\n             */\n            data: z.record(z.string(), z.any()).optional().meta({\n              description: \"Extra fields for the user. Including custom additional fields.\"\n            })\n          }),\n          metadata: {\n            openapi: {\n              operationId: \"createUser\",\n              summary: \"Create a new user\",\n              description: \"Create a new user\",\n              responses: {\n                200: {\n                  description: \"User created\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            $Infer: {\n              body: {}\n            }\n          }\n        },\n        async (ctx) => {\n          const session = await getSessionFromCtx(ctx);\n          if (!session && (ctx.request || ctx.headers)) {\n            throw ctx.error(\"UNAUTHORIZED\");\n          }\n          if (session) {\n            const canCreateUser = hasPermission({\n              userId: session.user.id,\n              role: session.user.role,\n              options: opts,\n              permissions: {\n                user: [\"create\"]\n              }\n            });\n            if (!canCreateUser) {\n              throw new APIError(\"FORBIDDEN\", {\n                message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CREATE_USERS\n              });\n            }\n          }\n          const existUser = await ctx.context.internalAdapter.findUserByEmail(\n            ctx.body.email\n          );\n          if (existUser) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ADMIN_ERROR_CODES.USER_ALREADY_EXISTS\n            });\n          }\n          const user = await ctx.context.internalAdapter.createUser(\n            {\n              email: ctx.body.email,\n              name: ctx.body.name,\n              role: (ctx.body.role && parseRoles(ctx.body.role)) ?? options?.defaultRole ?? \"user\",\n              ...ctx.body.data\n            },\n            ctx\n          );\n          if (!user) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: ADMIN_ERROR_CODES.FAILED_TO_CREATE_USER\n            });\n          }\n          const hashedPassword = await ctx.context.password.hash(\n            ctx.body.password\n          );\n          await ctx.context.internalAdapter.linkAccount(\n            {\n              accountId: user.id,\n              providerId: \"credential\",\n              password: hashedPassword,\n              userId: user.id\n            },\n            ctx\n          );\n          return ctx.json({\n            user\n          });\n        }\n      ),\n      adminUpdateUser: createAuthEndpoint(\n        \"/admin/update-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            }),\n            data: z.record(z.any(), z.any()).meta({\n              description: \"The user data to update\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"updateUser\",\n              summary: \"Update a user\",\n              description: \"Update a user's details\",\n              responses: {\n                200: {\n                  description: \"User updated\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const canUpdateUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: ctx.context.session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"update\"]\n            }\n          });\n          if (!canUpdateUser) {\n            throw ctx.error(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_USERS,\n              code: \"YOU_ARE_NOT_ALLOWED_TO_UPDATE_USERS\"\n            });\n          }\n          if (Object.keys(ctx.body.data).length === 0) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ADMIN_ERROR_CODES.NO_DATA_TO_UPDATE\n            });\n          }\n          if (ctx.body.data?.role) {\n            ctx.body.data.role = parseRoles(ctx.body.data.role);\n          }\n          const updatedUser = await ctx.context.internalAdapter.updateUser(\n            ctx.body.userId,\n            ctx.body.data,\n            ctx\n          );\n          return ctx.json(updatedUser);\n        }\n      ),\n      listUsers: createAuthEndpoint(\n        \"/admin/list-users\",\n        {\n          method: \"GET\",\n          use: [adminMiddleware],\n          query: z.object({\n            searchValue: z.string().optional().meta({\n              description: 'The value to search for. Eg: \"some name\"'\n            }),\n            searchField: z.enum([\"email\", \"name\"]).meta({\n              description: 'The field to search in, defaults to email. Can be `email` or `name`. Eg: \"name\"'\n            }).optional(),\n            searchOperator: z.enum([\"contains\", \"starts_with\", \"ends_with\"]).meta({\n              description: 'The operator to use for the search. Can be `contains`, `starts_with` or `ends_with`. Eg: \"contains\"'\n            }).optional(),\n            limit: z.string().meta({\n              description: \"The number of users to return\"\n            }).or(z.number()).optional(),\n            offset: z.string().meta({\n              description: \"The offset to start from\"\n            }).or(z.number()).optional(),\n            sortBy: z.string().meta({\n              description: \"The field to sort by\"\n            }).optional(),\n            sortDirection: z.enum([\"asc\", \"desc\"]).meta({\n              description: \"The direction to sort by\"\n            }).optional(),\n            filterField: z.string().meta({\n              description: \"The field to filter by\"\n            }).optional(),\n            filterValue: z.string().meta({\n              description: \"The value to filter by\"\n            }).or(z.number()).or(z.boolean()).optional(),\n            filterOperator: z.enum([\"eq\", \"ne\", \"lt\", \"lte\", \"gt\", \"gte\", \"contains\"]).meta({\n              description: \"The operator to use for the filter\"\n            }).optional()\n          }),\n          metadata: {\n            openapi: {\n              operationId: \"listUsers\",\n              summary: \"List users\",\n              description: \"List users\",\n              responses: {\n                200: {\n                  description: \"List of users\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          users: {\n                            type: \"array\",\n                            items: {\n                              $ref: \"#/components/schemas/User\"\n                            }\n                          },\n                          total: {\n                            type: \"number\"\n                          },\n                          limit: {\n                            type: \"number\"\n                          },\n                          offset: {\n                            type: \"number\"\n                          }\n                        },\n                        required: [\"users\", \"total\"]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canListUsers = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"list\"]\n            }\n          });\n          if (!canListUsers) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_LIST_USERS\n            });\n          }\n          const where = [];\n          if (ctx.query?.searchValue) {\n            where.push({\n              field: ctx.query.searchField || \"email\",\n              operator: ctx.query.searchOperator || \"contains\",\n              value: ctx.query.searchValue\n            });\n          }\n          if (ctx.query?.filterValue) {\n            where.push({\n              field: ctx.query.filterField || \"email\",\n              operator: ctx.query.filterOperator || \"eq\",\n              value: ctx.query.filterValue\n            });\n          }\n          try {\n            const users = await ctx.context.internalAdapter.listUsers(\n              Number(ctx.query?.limit) || void 0,\n              Number(ctx.query?.offset) || void 0,\n              ctx.query?.sortBy ? {\n                field: ctx.query.sortBy,\n                direction: ctx.query.sortDirection || \"asc\"\n              } : void 0,\n              where.length ? where : void 0\n            );\n            const total = await ctx.context.internalAdapter.countTotalUsers(\n              where.length ? where : void 0\n            );\n            return ctx.json({\n              users,\n              total,\n              limit: Number(ctx.query?.limit) || void 0,\n              offset: Number(ctx.query?.offset) || void 0\n            });\n          } catch (e) {\n            return ctx.json({\n              users: [],\n              total: 0\n            });\n          }\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/list-user-sessions`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.listUserSessions`\n       *\n       * **client:**\n       * `authClient.admin.listUserSessions`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-list-user-sessions)\n       */\n      listUserSessions: createAuthEndpoint(\n        \"/admin/list-user-sessions\",\n        {\n          method: \"POST\",\n          use: [adminMiddleware],\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            })\n          }),\n          metadata: {\n            openapi: {\n              operationId: \"listUserSessions\",\n              summary: \"List user sessions\",\n              description: \"List user sessions\",\n              responses: {\n                200: {\n                  description: \"List of user sessions\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          sessions: {\n                            type: \"array\",\n                            items: {\n                              $ref: \"#/components/schemas/Session\"\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canListSessions = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permissions: {\n              session: [\"list\"]\n            }\n          });\n          if (!canListSessions) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_LIST_USERS_SESSIONS\n            });\n          }\n          const sessions = await ctx.context.internalAdapter.listSessions(ctx.body.userId);\n          return {\n            sessions\n          };\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/unban-user`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.unbanUser`\n       *\n       * **client:**\n       * `authClient.admin.unbanUser`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-unban-user)\n       */\n      unbanUser: createAuthEndpoint(\n        \"/admin/unban-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"unbanUser\",\n              summary: \"Unban a user\",\n              description: \"Unban a user\",\n              responses: {\n                200: {\n                  description: \"User unbanned\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canBanUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"ban\"]\n            }\n          });\n          if (!canBanUser) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_BAN_USERS\n            });\n          }\n          const user = await ctx.context.internalAdapter.updateUser(\n            ctx.body.userId,\n            {\n              banned: false,\n              banExpires: null,\n              banReason: null,\n              updatedAt: /* @__PURE__ */ new Date()\n            }\n          );\n          return ctx.json({\n            user\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/ban-user`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.banUser`\n       *\n       * **client:**\n       * `authClient.admin.banUser`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-ban-user)\n       */\n      banUser: createAuthEndpoint(\n        \"/admin/ban-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            }),\n            /**\n             * Reason for the ban\n             */\n            banReason: z.string().meta({\n              description: \"The reason for the ban\"\n            }).optional(),\n            /**\n             * Number of seconds until the ban expires\n             */\n            banExpiresIn: z.number().meta({\n              description: \"The number of seconds until the ban expires\"\n            }).optional()\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"banUser\",\n              summary: \"Ban a user\",\n              description: \"Ban a user\",\n              responses: {\n                200: {\n                  description: \"User banned\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canBanUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"ban\"]\n            }\n          });\n          if (!canBanUser) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_BAN_USERS\n            });\n          }\n          if (ctx.body.userId === ctx.context.session.user.id) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ADMIN_ERROR_CODES.YOU_CANNOT_BAN_YOURSELF\n            });\n          }\n          const user = await ctx.context.internalAdapter.updateUser(\n            ctx.body.userId,\n            {\n              banned: true,\n              banReason: ctx.body.banReason || options?.defaultBanReason || \"No reason\",\n              banExpires: ctx.body.banExpiresIn ? getDate(ctx.body.banExpiresIn, \"sec\") : options?.defaultBanExpiresIn ? getDate(options.defaultBanExpiresIn, \"sec\") : void 0,\n              updatedAt: /* @__PURE__ */ new Date()\n            },\n            ctx\n          );\n          await ctx.context.internalAdapter.deleteSessions(ctx.body.userId);\n          return ctx.json({\n            user\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/impersonate-user`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.impersonateUser`\n       *\n       * **client:**\n       * `authClient.admin.impersonateUser`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-impersonate-user)\n       */\n      impersonateUser: createAuthEndpoint(\n        \"/admin/impersonate-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"impersonateUser\",\n              summary: \"Impersonate a user\",\n              description: \"Impersonate a user\",\n              responses: {\n                200: {\n                  description: \"Impersonation session created\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          session: {\n                            $ref: \"#/components/schemas/Session\"\n                          },\n                          user: {\n                            $ref: \"#/components/schemas/User\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const canImpersonateUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: ctx.context.session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"impersonate\"]\n            }\n          });\n          if (!canImpersonateUser) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_IMPERSONATE_USERS\n            });\n          }\n          const targetUser = await ctx.context.internalAdapter.findUserById(\n            ctx.body.userId\n          );\n          if (!targetUser) {\n            throw new APIError(\"NOT_FOUND\", {\n              message: \"User not found\"\n            });\n          }\n          const session = await ctx.context.internalAdapter.createSession(\n            targetUser.id,\n            ctx,\n            true,\n            {\n              impersonatedBy: ctx.context.session.user.id,\n              expiresAt: options?.impersonationSessionDuration ? getDate(options.impersonationSessionDuration, \"sec\") : getDate(60 * 60, \"sec\")\n              // 1 hour\n            },\n            true\n          );\n          if (!session) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: ADMIN_ERROR_CODES.FAILED_TO_CREATE_USER\n            });\n          }\n          const authCookies = ctx.context.authCookies;\n          deleteSessionCookie(ctx);\n          const dontRememberMeCookie = await ctx.getSignedCookie(\n            ctx.context.authCookies.dontRememberToken.name,\n            ctx.context.secret\n          );\n          const adminCookieProp = ctx.context.createAuthCookie(\"admin_session\");\n          await ctx.setSignedCookie(\n            adminCookieProp.name,\n            `${ctx.context.session.session.token}:${dontRememberMeCookie || \"\"}`,\n            ctx.context.secret,\n            authCookies.sessionToken.options\n          );\n          await setSessionCookie(\n            ctx,\n            {\n              session,\n              user: targetUser\n            },\n            true\n          );\n          return ctx.json({\n            session,\n            user: targetUser\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/stop-impersonating`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.stopImpersonating`\n       *\n       * **client:**\n       * `authClient.admin.stopImpersonating`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-stop-impersonating)\n       */\n      stopImpersonating: createAuthEndpoint(\n        \"/admin/stop-impersonating\",\n        {\n          method: \"POST\",\n          requireHeaders: true\n        },\n        async (ctx) => {\n          const session = await getSessionFromCtx(ctx);\n          if (!session) {\n            throw new APIError(\"UNAUTHORIZED\");\n          }\n          if (!session.session.impersonatedBy) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: \"You are not impersonating anyone\"\n            });\n          }\n          const user = await ctx.context.internalAdapter.findUserById(\n            session.session.impersonatedBy\n          );\n          if (!user) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: \"Failed to find user\"\n            });\n          }\n          const adminCookieName = ctx.context.createAuthCookie(\"admin_session\").name;\n          const adminCookie = await ctx.getSignedCookie(\n            adminCookieName,\n            ctx.context.secret\n          );\n          if (!adminCookie) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: \"Failed to find admin session\"\n            });\n          }\n          const [adminSessionToken, dontRememberMeCookie] = adminCookie?.split(\":\");\n          const adminSession = await ctx.context.internalAdapter.findSession(adminSessionToken);\n          if (!adminSession || adminSession.session.userId !== user.id) {\n            throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n              message: \"Failed to find admin session\"\n            });\n          }\n          await ctx.context.internalAdapter.deleteSession(\n            session.session.token\n          );\n          await setSessionCookie(ctx, adminSession, !!dontRememberMeCookie);\n          return ctx.json(adminSession);\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/revoke-user-session`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.revokeUserSession`\n       *\n       * **client:**\n       * `authClient.admin.revokeUserSession`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-revoke-user-session)\n       */\n      revokeUserSession: createAuthEndpoint(\n        \"/admin/revoke-user-session\",\n        {\n          method: \"POST\",\n          body: z.object({\n            sessionToken: z.string().meta({\n              description: \"The session token\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"revokeUserSession\",\n              summary: \"Revoke a user session\",\n              description: \"Revoke a user session\",\n              responses: {\n                200: {\n                  description: \"Session revoked\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          success: {\n                            type: \"boolean\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canRevokeSession = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permissions: {\n              session: [\"revoke\"]\n            }\n          });\n          if (!canRevokeSession) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_REVOKE_USERS_SESSIONS\n            });\n          }\n          await ctx.context.internalAdapter.deleteSession(\n            ctx.body.sessionToken\n          );\n          return ctx.json({\n            success: true\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/revoke-user-sessions`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.revokeUserSessions`\n       *\n       * **client:**\n       * `authClient.admin.revokeUserSessions`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-revoke-user-sessions)\n       */\n      revokeUserSessions: createAuthEndpoint(\n        \"/admin/revoke-user-sessions\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"revokeUserSessions\",\n              summary: \"Revoke all user sessions\",\n              description: \"Revoke all user sessions\",\n              responses: {\n                200: {\n                  description: \"Sessions revoked\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          success: {\n                            type: \"boolean\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canRevokeSession = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permissions: {\n              session: [\"revoke\"]\n            }\n          });\n          if (!canRevokeSession) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_REVOKE_USERS_SESSIONS\n            });\n          }\n          await ctx.context.internalAdapter.deleteSessions(ctx.body.userId);\n          return ctx.json({\n            success: true\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/remove-user`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.removeUser`\n       *\n       * **client:**\n       * `authClient.admin.removeUser`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-remove-user)\n       */\n      removeUser: createAuthEndpoint(\n        \"/admin/remove-user\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"removeUser\",\n              summary: \"Remove a user\",\n              description: \"Delete a user and all their sessions and accounts. Cannot be undone.\",\n              responses: {\n                200: {\n                  description: \"User removed\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          success: {\n                            type: \"boolean\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const session = ctx.context.session;\n          const canDeleteUser = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"delete\"]\n            }\n          });\n          if (!canDeleteUser) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_DELETE_USERS\n            });\n          }\n          if (ctx.body.userId === ctx.context.session.user.id) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ADMIN_ERROR_CODES.YOU_CANNOT_REMOVE_YOURSELF\n            });\n          }\n          const user = await ctx.context.internalAdapter.findUserById(\n            ctx.body.userId\n          );\n          if (!user) {\n            throw new APIError(\"NOT_FOUND\", {\n              message: \"User not found\"\n            });\n          }\n          await ctx.context.internalAdapter.deleteUser(ctx.body.userId);\n          return ctx.json({\n            success: true\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/set-user-password`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.setUserPassword`\n       *\n       * **client:**\n       * `authClient.admin.setUserPassword`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-set-user-password)\n       */\n      setUserPassword: createAuthEndpoint(\n        \"/admin/set-user-password\",\n        {\n          method: \"POST\",\n          body: z.object({\n            newPassword: z.string().meta({\n              description: \"The new password\"\n            }),\n            userId: z.coerce.string().meta({\n              description: \"The user id\"\n            })\n          }),\n          use: [adminMiddleware],\n          metadata: {\n            openapi: {\n              operationId: \"setUserPassword\",\n              summary: \"Set a user's password\",\n              description: \"Set a user's password\",\n              responses: {\n                200: {\n                  description: \"Password set\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          status: {\n                            type: \"boolean\"\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const canSetUserPassword = hasPermission({\n            userId: ctx.context.session.user.id,\n            role: ctx.context.session.user.role,\n            options: opts,\n            permissions: {\n              user: [\"set-password\"]\n            }\n          });\n          if (!canSetUserPassword) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ADMIN_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_SET_USERS_PASSWORD\n            });\n          }\n          const hashedPassword = await ctx.context.password.hash(\n            ctx.body.newPassword\n          );\n          await ctx.context.internalAdapter.updatePassword(\n            ctx.body.userId,\n            hashedPassword\n          );\n          return ctx.json({\n            status: true\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/admin/has-permission`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.userHasPermission`\n       *\n       * **client:**\n       * `authClient.admin.hasPermission`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/admin#api-method-admin-has-permission)\n       */\n      userHasPermission: createAuthEndpoint(\n        \"/admin/has-permission\",\n        {\n          method: \"POST\",\n          body: z.object({\n            userId: z.coerce.string().optional().meta({\n              description: `The user id. Eg: \"user-id\"`\n            }),\n            role: z.string().optional().meta({\n              description: `The role to check permission for. Eg: \"admin\"`\n            })\n          }).and(\n            z.union([\n              z.object({\n                permission: z.record(z.string(), z.array(z.string())),\n                permissions: z.undefined()\n              }),\n              z.object({\n                permission: z.undefined(),\n                permissions: z.record(z.string(), z.array(z.string()))\n              })\n            ])\n          ),\n          metadata: {\n            openapi: {\n              description: \"Check if the user has permission\",\n              requestBody: {\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      type: \"object\",\n                      properties: {\n                        permission: {\n                          type: \"object\",\n                          description: \"The permission to check\",\n                          deprecated: true\n                        },\n                        permissions: {\n                          type: \"object\",\n                          description: \"The permission to check\"\n                        }\n                      },\n                      required: [\"permissions\"]\n                    }\n                  }\n                }\n              },\n              responses: {\n                \"200\": {\n                  description: \"Success\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          error: {\n                            type: \"string\"\n                          },\n                          success: {\n                            type: \"boolean\"\n                          }\n                        },\n                        required: [\"success\"]\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            $Infer: {\n              body: {}\n            }\n          }\n        },\n        async (ctx) => {\n          if (!ctx.body?.permission && !ctx.body?.permissions) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: \"invalid permission check. no permission(s) were passed.\"\n            });\n          }\n          const session = await getSessionFromCtx(ctx);\n          if (!session && (ctx.request || ctx.headers) && !ctx.body.userId && !ctx.body.role) {\n            throw new APIError(\"UNAUTHORIZED\");\n          }\n          const user = session?.user || await ctx.context.internalAdapter.findUserById(\n            ctx.body.userId\n          ) || (ctx.body.role ? { id: \"\", role: ctx.body.role } : null);\n          if (!user) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: \"user not found\"\n            });\n          }\n          const result = hasPermission({\n            userId: user.id,\n            role: user.role,\n            options,\n            permissions: ctx.body.permissions ?? ctx.body.permission\n          });\n          return ctx.json({\n            error: null,\n            success: result\n          });\n        }\n      )\n    },\n    $ERROR_CODES: ADMIN_ERROR_CODES,\n    schema: mergeSchema(schema, opts.schema),\n    options\n  };\n};\n\nexport { admin as a };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6822, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.CY7-Inqt.mjs"],"sourcesContent":["import { generateKeyPair, exportJWK, importJWK, SignJWT } from 'jose';\nimport { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\nimport { symmetricEncrypt, symmetricDecrypt } from '../crypto/index.mjs';\nimport '@better-auth/utils';\nimport '@better-auth/utils/base64';\n\nconst getJwksAdapter = (adapter) => {\n  return {\n    getAllKeys: async () => {\n      return await adapter.findMany({\n        model: \"jwks\"\n      });\n    },\n    getLatestKey: async () => {\n      const key = await adapter.findMany({\n        model: \"jwks\",\n        sortBy: {\n          field: \"createdAt\",\n          direction: \"desc\"\n        },\n        limit: 1\n      });\n      return key[0];\n    },\n    createJwk: async (webKey) => {\n      const jwk = await adapter.create({\n        model: \"jwks\",\n        data: {\n          ...webKey,\n          createdAt: /* @__PURE__ */ new Date()\n        }\n      });\n      return jwk;\n    }\n  };\n};\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nfunction joseSecs(str) {\n  const matched = REGEX.exec(str);\n  if (!matched || matched[4] && matched[1]) {\n    throw new TypeError(\"Invalid time period format\");\n  }\n  const value = parseFloat(matched[2]);\n  const unit = matched[3].toLowerCase();\n  let numericDate;\n  switch (unit) {\n    case \"sec\":\n    case \"secs\":\n    case \"second\":\n    case \"seconds\":\n    case \"s\":\n      numericDate = Math.round(value);\n      break;\n    case \"minute\":\n    case \"minutes\":\n    case \"min\":\n    case \"mins\":\n    case \"m\":\n      numericDate = Math.round(value * minute);\n      break;\n    case \"hour\":\n    case \"hours\":\n    case \"hr\":\n    case \"hrs\":\n    case \"h\":\n      numericDate = Math.round(value * hour);\n      break;\n    case \"day\":\n    case \"days\":\n    case \"d\":\n      numericDate = Math.round(value * day);\n      break;\n    case \"week\":\n    case \"weeks\":\n    case \"w\":\n      numericDate = Math.round(value * week);\n      break;\n    // years matched\n    default:\n      numericDate = Math.round(value * year);\n      break;\n  }\n  if (matched[1] === \"-\" || matched[4] === \"ago\") {\n    return -numericDate;\n  }\n  return numericDate;\n}\n\nfunction toExpJWT(expirationTime, iat) {\n  if (typeof expirationTime === \"number\") {\n    return expirationTime;\n  } else if (expirationTime instanceof Date) {\n    return Math.floor(expirationTime.getTime() / 1e3);\n  } else {\n    return iat + joseSecs(expirationTime);\n  }\n}\nasync function generateExportedKeyPair(options) {\n  const { alg, ...cfg } = options?.jwks?.keyPairConfig ?? {\n    alg: \"EdDSA\",\n    crv: \"Ed25519\"\n  };\n  const { publicKey, privateKey } = await generateKeyPair(alg, {\n    ...cfg,\n    extractable: true\n  });\n  const publicWebKey = await exportJWK(publicKey);\n  const privateWebKey = await exportJWK(privateKey);\n  return { publicWebKey, privateWebKey, alg, cfg };\n}\nasync function createJwk(ctx, options) {\n  const { publicWebKey, privateWebKey, alg, cfg } = await generateExportedKeyPair(options);\n  const stringifiedPrivateWebKey = JSON.stringify(privateWebKey);\n  const privateKeyEncryptionEnabled = !options?.jwks?.disablePrivateKeyEncryption;\n  let jwk = {\n    alg,\n    ...cfg && \"crv\" in cfg ? {\n      crv: cfg.crv\n    } : {},\n    publicKey: JSON.stringify(publicWebKey),\n    privateKey: privateKeyEncryptionEnabled ? JSON.stringify(\n      await symmetricEncrypt({\n        key: ctx.context.secret,\n        data: stringifiedPrivateWebKey\n      })\n    ) : stringifiedPrivateWebKey,\n    createdAt: /* @__PURE__ */ new Date()\n  };\n  const adapter = getJwksAdapter(ctx.context.adapter);\n  const key = await adapter.createJwk(jwk);\n  return key;\n}\n\nasync function signJWT(ctx, config) {\n  const { options, payload } = config;\n  const nowSeconds = Math.floor(Date.now() / 1e3);\n  const iat = payload.iat;\n  let exp = payload.exp;\n  const defaultExp = toExpJWT(\n    options?.jwt?.expirationTime ?? \"15m\",\n    iat ?? nowSeconds\n  );\n  exp = exp ?? defaultExp;\n  const nbf = payload.nbf;\n  const iss = payload.iss;\n  const defaultIss = options?.jwt?.issuer ?? ctx.context.options.baseURL;\n  const aud = payload.aud;\n  const defaultAud = options?.jwt?.audience ?? ctx.context.options.baseURL;\n  if (options?.jwt?.sign) {\n    const jwtPayload = {\n      ...payload,\n      iat,\n      exp,\n      nbf,\n      iss: iss ?? defaultIss,\n      aud: aud ?? defaultAud\n    };\n    return options.jwt.sign(jwtPayload);\n  }\n  const adapter = getJwksAdapter(ctx.context.adapter);\n  let key = await adapter.getLatestKey();\n  const privateKeyEncryptionEnabled = !options?.jwks?.disablePrivateKeyEncryption;\n  if (key === void 0) {\n    key = await createJwk(ctx, options);\n  }\n  let privateWebKey = privateKeyEncryptionEnabled ? await symmetricDecrypt({\n    key: ctx.context.secret,\n    data: JSON.parse(key.privateKey)\n  }).catch(() => {\n    throw new BetterAuthError(\n      \"Failed to decrypt private private key. Make sure the secret currently in use is the same as the one used to encrypt the private key. If you are using a different secret, either cleanup your jwks or disable private key encryption.\"\n    );\n  }) : key.privateKey;\n  const alg = key.alg ?? options?.jwks?.keyPairConfig?.alg ?? \"EdDSA\";\n  const privateKey = await importJWK(JSON.parse(privateWebKey), alg);\n  const jwt = new SignJWT(payload).setProtectedHeader({\n    alg,\n    kid: key.id\n  }).setExpirationTime(exp).setIssuer(iss ?? defaultIss).setAudience(aud ?? defaultAud);\n  if (iat) jwt.setIssuedAt(iat);\n  if (payload.sub) jwt.setSubject(payload.sub);\n  if (payload.nbf) jwt.setNotBefore(payload.nbf);\n  if (payload.jti) jwt.setJti(payload.jti);\n  return await jwt.sign(privateKey);\n}\nasync function getJwtToken(ctx, options) {\n  const payload = !options?.jwt?.definePayload ? ctx.context.session.user : await options?.jwt.definePayload(ctx.context.session);\n  return await signJWT(ctx, {\n    options,\n    payload: {\n      ...payload,\n      sub: await options?.jwt?.getSubject?.(ctx.context.session) ?? ctx.context.session.user.id\n    }\n  });\n}\n\nexport { getJwksAdapter as a, generateExportedKeyPair as b, createJwk as c, getJwtToken as g, signJWT as s };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7052, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.DIVj9vPt.mjs"],"sourcesContent":["import * as z from 'zod/v4';\nimport { SignJWT } from 'jose';\nimport { APIError } from 'better-call';\nimport './better-auth.nqWf7zUe.mjs';\nimport { g as getSessionFromCtx, a as createAuthEndpoint, c as createAuthMiddleware, s as sessionMiddleware } from './better-auth.DV5EHeYG.mjs';\nimport './better-auth.CMQ3rA-I.mjs';\nimport { base64Url, base64 } from '@better-auth/utils/base64';\nimport '@better-auth/utils/hmac';\nimport './better-auth.BjBlybv-.mjs';\nimport '@better-auth/utils/binary';\nimport { p as parseSetCookieHeader } from './better-auth.UfVWArIB.mjs';\nimport { m as mergeSchema } from './better-auth.Dcv8PS7T.mjs';\nimport { symmetricEncrypt, symmetricDecrypt } from '../crypto/index.mjs';\nimport { createHash } from '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport { g as generateRandomString } from './better-auth.B4Qoxdgc.mjs';\nimport { g as getJwtToken } from './better-auth.CY7-Inqt.mjs';\nimport '@better-auth/utils/random';\nimport 'kysely';\n\nconst schema = {\n  oauthApplication: {\n    modelName: \"oauthApplication\",\n    fields: {\n      name: {\n        type: \"string\"\n      },\n      icon: {\n        type: \"string\",\n        required: false\n      },\n      metadata: {\n        type: \"string\",\n        required: false\n      },\n      clientId: {\n        type: \"string\",\n        unique: true\n      },\n      clientSecret: {\n        type: \"string\",\n        required: false\n      },\n      redirectURLs: {\n        type: \"string\"\n      },\n      type: {\n        type: \"string\"\n      },\n      disabled: {\n        type: \"boolean\",\n        required: false,\n        defaultValue: false\n      },\n      userId: {\n        type: \"string\",\n        required: false,\n        references: {\n          model: \"user\",\n          field: \"id\",\n          onDelete: \"cascade\"\n        }\n      },\n      createdAt: {\n        type: \"date\"\n      },\n      updatedAt: {\n        type: \"date\"\n      }\n    }\n  },\n  oauthAccessToken: {\n    modelName: \"oauthAccessToken\",\n    fields: {\n      accessToken: {\n        type: \"string\",\n        unique: true\n      },\n      refreshToken: {\n        type: \"string\",\n        unique: true\n      },\n      accessTokenExpiresAt: {\n        type: \"date\"\n      },\n      refreshTokenExpiresAt: {\n        type: \"date\"\n      },\n      clientId: {\n        type: \"string\",\n        references: {\n          model: \"oauthApplication\",\n          field: \"clientId\",\n          onDelete: \"cascade\"\n        }\n      },\n      userId: {\n        type: \"string\",\n        required: false,\n        references: {\n          model: \"user\",\n          field: \"id\",\n          onDelete: \"cascade\"\n        }\n      },\n      scopes: {\n        type: \"string\"\n      },\n      createdAt: {\n        type: \"date\"\n      },\n      updatedAt: {\n        type: \"date\"\n      }\n    }\n  },\n  oauthConsent: {\n    modelName: \"oauthConsent\",\n    fields: {\n      clientId: {\n        type: \"string\",\n        references: {\n          model: \"oauthApplication\",\n          field: \"clientId\",\n          onDelete: \"cascade\"\n        }\n      },\n      userId: {\n        type: \"string\",\n        references: {\n          model: \"user\",\n          field: \"id\",\n          onDelete: \"cascade\"\n        }\n      },\n      scopes: {\n        type: \"string\"\n      },\n      createdAt: {\n        type: \"date\"\n      },\n      updatedAt: {\n        type: \"date\"\n      },\n      consentGiven: {\n        type: \"boolean\"\n      }\n    }\n  }\n};\n\nfunction formatErrorURL(url, error, description) {\n  return `${url.includes(\"?\") ? \"&\" : \"?\"}error=${error}&error_description=${description}`;\n}\nfunction getErrorURL(ctx, error, description) {\n  const baseURL = ctx.context.options.onAPIError?.errorURL || `${ctx.context.baseURL}/error`;\n  const formattedURL = formatErrorURL(baseURL, error, description);\n  return formattedURL;\n}\nasync function authorize(ctx, options) {\n  const handleRedirect = (url) => {\n    const fromFetch = ctx.request?.headers.get(\"sec-fetch-mode\") === \"cors\";\n    if (fromFetch) {\n      return ctx.json({\n        redirect: true,\n        url\n      });\n    } else {\n      throw ctx.redirect(url);\n    }\n  };\n  const opts = {\n    codeExpiresIn: 600,\n    defaultScope: \"openid\",\n    ...options,\n    scopes: [\n      \"openid\",\n      \"profile\",\n      \"email\",\n      \"offline_access\",\n      ...options?.scopes || []\n    ]\n  };\n  if (!ctx.request) {\n    throw new APIError(\"UNAUTHORIZED\", {\n      error_description: \"request not found\",\n      error: \"invalid_request\"\n    });\n  }\n  const session = await getSessionFromCtx(ctx);\n  if (!session) {\n    await ctx.setSignedCookie(\n      \"oidc_login_prompt\",\n      JSON.stringify(ctx.query),\n      ctx.context.secret,\n      {\n        maxAge: 600,\n        path: \"/\",\n        sameSite: \"lax\"\n      }\n    );\n    const queryFromURL = ctx.request.url?.split(\"?\")[1];\n    return handleRedirect(`${options.loginPage}?${queryFromURL}`);\n  }\n  const query = ctx.query;\n  if (!query.client_id) {\n    const errorURL = getErrorURL(\n      ctx,\n      \"invalid_client\",\n      \"client_id is required\"\n    );\n    throw ctx.redirect(errorURL);\n  }\n  if (!query.response_type) {\n    getErrorURL(\n      ctx,\n      \"invalid_request\",\n      \"response_type is required\"\n    );\n    throw ctx.redirect(\n      getErrorURL(ctx, \"invalid_request\", \"response_type is required\")\n    );\n  }\n  const client = await getClient(\n    ctx.query.client_id,\n    ctx.context.adapter,\n    options.trustedClients || []\n  );\n  if (!client) {\n    const errorURL = getErrorURL(\n      ctx,\n      \"invalid_client\",\n      \"client_id is required\"\n    );\n    throw ctx.redirect(errorURL);\n  }\n  const redirectURI = client.redirectURLs.find(\n    (url) => url === ctx.query.redirect_uri\n  );\n  if (!redirectURI || !query.redirect_uri) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"Invalid redirect URI\"\n    });\n  }\n  if (client.disabled) {\n    const errorURL = getErrorURL(ctx, \"client_disabled\", \"client is disabled\");\n    throw ctx.redirect(errorURL);\n  }\n  if (query.response_type !== \"code\") {\n    const errorURL = getErrorURL(\n      ctx,\n      \"unsupported_response_type\",\n      \"unsupported response type\"\n    );\n    throw ctx.redirect(errorURL);\n  }\n  const requestScope = query.scope?.split(\" \").filter((s) => s) || opts.defaultScope.split(\" \");\n  const invalidScopes = requestScope.filter((scope) => {\n    return !opts.scopes.includes(scope);\n  });\n  if (invalidScopes.length) {\n    return handleRedirect(\n      formatErrorURL(\n        query.redirect_uri,\n        \"invalid_scope\",\n        `The following scopes are invalid: ${invalidScopes.join(\", \")}`\n      )\n    );\n  }\n  if ((!query.code_challenge || !query.code_challenge_method) && options.requirePKCE) {\n    return handleRedirect(\n      formatErrorURL(query.redirect_uri, \"invalid_request\", \"pkce is required\")\n    );\n  }\n  if (!query.code_challenge_method) {\n    query.code_challenge_method = \"plain\";\n  }\n  if (![\n    \"s256\",\n    options.allowPlainCodeChallengeMethod ? \"plain\" : \"s256\"\n  ].includes(query.code_challenge_method?.toLowerCase() || \"\")) {\n    return handleRedirect(\n      formatErrorURL(\n        query.redirect_uri,\n        \"invalid_request\",\n        \"invalid code_challenge method\"\n      )\n    );\n  }\n  const code = generateRandomString(32, \"a-z\", \"A-Z\", \"0-9\");\n  const codeExpiresInMs = opts.codeExpiresIn * 1e3;\n  const expiresAt = new Date(Date.now() + codeExpiresInMs);\n  try {\n    await ctx.context.internalAdapter.createVerificationValue(\n      {\n        value: JSON.stringify({\n          clientId: client.clientId,\n          redirectURI: query.redirect_uri,\n          scope: requestScope,\n          userId: session.user.id,\n          authTime: new Date(session.session.createdAt).getTime(),\n          /**\n           * If the prompt is set to `consent`, then we need\n           * to require the user to consent to the scopes.\n           *\n           * This means the code now needs to be treated as a\n           * consent request.\n           *\n           * once the user consents, the code will be updated\n           * with the actual code. This is to prevent the\n           * client from using the code before the user\n           * consents.\n           */\n          requireConsent: query.prompt === \"consent\",\n          state: query.prompt === \"consent\" ? query.state : null,\n          codeChallenge: query.code_challenge,\n          codeChallengeMethod: query.code_challenge_method,\n          nonce: query.nonce\n        }),\n        identifier: code,\n        expiresAt\n      },\n      ctx\n    );\n  } catch (e) {\n    return handleRedirect(\n      formatErrorURL(\n        query.redirect_uri,\n        \"server_error\",\n        \"An error occurred while processing the request\"\n      )\n    );\n  }\n  const redirectURIWithCode = new URL(redirectURI);\n  redirectURIWithCode.searchParams.set(\"code\", code);\n  redirectURIWithCode.searchParams.set(\"state\", ctx.query.state);\n  if (query.prompt !== \"consent\") {\n    return handleRedirect(redirectURIWithCode.toString());\n  }\n  if (client.skipConsent) {\n    return handleRedirect(redirectURIWithCode.toString());\n  }\n  const hasAlreadyConsented = await ctx.context.adapter.findOne({\n    model: \"oauthConsent\",\n    where: [\n      {\n        field: \"clientId\",\n        value: client.clientId\n      },\n      {\n        field: \"userId\",\n        value: session.user.id\n      }\n    ]\n  }).then((res) => !!res?.consentGiven);\n  if (hasAlreadyConsented) {\n    return handleRedirect(redirectURIWithCode.toString());\n  }\n  if (options?.consentPage) {\n    await ctx.setSignedCookie(\"oidc_consent_prompt\", code, ctx.context.secret, {\n      maxAge: 600,\n      path: \"/\",\n      sameSite: \"lax\"\n    });\n    const urlParams = new URLSearchParams();\n    urlParams.set(\"consent_code\", code);\n    urlParams.set(\"client_id\", client.clientId);\n    urlParams.set(\"scope\", requestScope.join(\" \"));\n    const consentURI = `${options.consentPage}?${urlParams.toString()}`;\n    return handleRedirect(consentURI);\n  }\n  const htmlFn = options?.getConsentHTML;\n  if (!htmlFn) {\n    throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n      message: \"No consent page provided\"\n    });\n  }\n  return new Response(\n    htmlFn({\n      scopes: requestScope,\n      clientMetadata: client.metadata,\n      clientIcon: client?.icon,\n      clientId: client.clientId,\n      clientName: client.name,\n      code\n    }),\n    {\n      headers: {\n        \"content-type\": \"text/html\"\n      }\n    }\n  );\n}\n\nconst defaultClientSecretHasher = async (clientSecret) => {\n  const hash = await createHash(\"SHA-256\").digest(\n    new TextEncoder().encode(clientSecret)\n  );\n  const hashed = base64Url.encode(new Uint8Array(hash), {\n    padding: false\n  });\n  return hashed;\n};\n\nconst getJwtPlugin = (ctx) => {\n  return ctx.context.options.plugins?.find(\n    (plugin) => plugin.id === \"jwt\"\n  );\n};\nasync function getClient(clientId, adapter, trustedClients = []) {\n  const trustedClient = trustedClients.find(\n    (client) => client.clientId === clientId\n  );\n  if (trustedClient) {\n    return trustedClient;\n  }\n  const dbClient = await adapter.findOne({\n    model: \"oauthApplication\",\n    where: [{ field: \"clientId\", value: clientId }]\n  }).then((res) => {\n    if (!res) {\n      return null;\n    }\n    return {\n      ...res,\n      redirectURLs: (res.redirectURLs ?? \"\").split(\",\"),\n      metadata: res.metadata ? JSON.parse(res.metadata) : {}\n    };\n  });\n  return dbClient;\n}\nconst getMetadata = (ctx, options) => {\n  const jwtPlugin = getJwtPlugin(ctx);\n  const issuer = jwtPlugin && jwtPlugin.options?.jwt && jwtPlugin.options.jwt.issuer ? jwtPlugin.options.jwt.issuer : ctx.context.options.baseURL;\n  const baseURL = ctx.context.baseURL;\n  const supportedAlgs = options?.useJWTPlugin ? [\"RS256\", \"EdDSA\", \"none\"] : [\"HS256\", \"none\"];\n  return {\n    issuer,\n    authorization_endpoint: `${baseURL}/oauth2/authorize`,\n    token_endpoint: `${baseURL}/oauth2/token`,\n    userinfo_endpoint: `${baseURL}/oauth2/userinfo`,\n    jwks_uri: `${baseURL}/jwks`,\n    registration_endpoint: `${baseURL}/oauth2/register`,\n    scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n    response_types_supported: [\"code\"],\n    response_modes_supported: [\"query\"],\n    grant_types_supported: [\"authorization_code\", \"refresh_token\"],\n    acr_values_supported: [\n      \"urn:mace:incommon:iap:silver\",\n      \"urn:mace:incommon:iap:bronze\"\n    ],\n    subject_types_supported: [\"public\"],\n    id_token_signing_alg_values_supported: supportedAlgs,\n    token_endpoint_auth_methods_supported: [\n      \"client_secret_basic\",\n      \"client_secret_post\",\n      \"none\"\n    ],\n    code_challenge_methods_supported: [\"S256\"],\n    claims_supported: [\n      \"sub\",\n      \"iss\",\n      \"aud\",\n      \"exp\",\n      \"nbf\",\n      \"iat\",\n      \"jti\",\n      \"email\",\n      \"email_verified\",\n      \"name\"\n    ],\n    ...options?.metadata\n  };\n};\nconst oidcProvider = (options) => {\n  const modelName = {\n    oauthClient: \"oauthApplication\",\n    oauthAccessToken: \"oauthAccessToken\",\n    oauthConsent: \"oauthConsent\"\n  };\n  const opts = {\n    codeExpiresIn: 600,\n    defaultScope: \"openid\",\n    accessTokenExpiresIn: 3600,\n    refreshTokenExpiresIn: 604800,\n    allowPlainCodeChallengeMethod: true,\n    storeClientSecret: \"plain\",\n    ...options,\n    scopes: [\n      \"openid\",\n      \"profile\",\n      \"email\",\n      \"offline_access\",\n      ...options?.scopes || []\n    ]\n  };\n  const trustedClients = options.trustedClients || [];\n  async function storeClientSecret(ctx, clientSecret) {\n    if (opts.storeClientSecret === \"encrypted\") {\n      return await symmetricEncrypt({\n        key: ctx.context.secret,\n        data: clientSecret\n      });\n    }\n    if (opts.storeClientSecret === \"hashed\") {\n      return await defaultClientSecretHasher(clientSecret);\n    }\n    if (typeof opts.storeClientSecret === \"object\" && \"hash\" in opts.storeClientSecret) {\n      return await opts.storeClientSecret.hash(clientSecret);\n    }\n    if (typeof opts.storeClientSecret === \"object\" && \"encrypt\" in opts.storeClientSecret) {\n      return await opts.storeClientSecret.encrypt(clientSecret);\n    }\n    return clientSecret;\n  }\n  async function verifyStoredClientSecret(ctx, storedClientSecret, clientSecret) {\n    if (opts.storeClientSecret === \"encrypted\") {\n      return await symmetricDecrypt({\n        key: ctx.context.secret,\n        data: storedClientSecret\n      }) === clientSecret;\n    }\n    if (opts.storeClientSecret === \"hashed\") {\n      const hashedClientSecret = await defaultClientSecretHasher(clientSecret);\n      return hashedClientSecret === storedClientSecret;\n    }\n    if (typeof opts.storeClientSecret === \"object\" && \"hash\" in opts.storeClientSecret) {\n      const hashedClientSecret = await opts.storeClientSecret.hash(clientSecret);\n      return hashedClientSecret === storedClientSecret;\n    }\n    if (typeof opts.storeClientSecret === \"object\" && \"decrypt\" in opts.storeClientSecret) {\n      const decryptedClientSecret = await opts.storeClientSecret.decrypt(storedClientSecret);\n      return decryptedClientSecret === clientSecret;\n    }\n    return clientSecret === storedClientSecret;\n  }\n  return {\n    id: \"oidc\",\n    hooks: {\n      after: [\n        {\n          matcher() {\n            return true;\n          },\n          handler: createAuthMiddleware(async (ctx) => {\n            const cookie = await ctx.getSignedCookie(\n              \"oidc_login_prompt\",\n              ctx.context.secret\n            );\n            const cookieName = ctx.context.authCookies.sessionToken.name;\n            const parsedSetCookieHeader = parseSetCookieHeader(\n              ctx.context.responseHeaders?.get(\"set-cookie\") || \"\"\n            );\n            const hasSessionToken = parsedSetCookieHeader.has(cookieName);\n            if (!cookie || !hasSessionToken) {\n              return;\n            }\n            ctx.setCookie(\"oidc_login_prompt\", \"\", {\n              maxAge: 0\n            });\n            const sessionCookie = parsedSetCookieHeader.get(cookieName)?.value;\n            const sessionToken = sessionCookie?.split(\".\")[0];\n            if (!sessionToken) {\n              return;\n            }\n            const session = await ctx.context.internalAdapter.findSession(sessionToken);\n            if (!session) {\n              return;\n            }\n            ctx.query = JSON.parse(cookie);\n            ctx.query.prompt = \"consent\";\n            ctx.context.session = session;\n            const response = await authorize(ctx, opts);\n            return response;\n          })\n        }\n      ]\n    },\n    endpoints: {\n      getOpenIdConfig: createAuthEndpoint(\n        \"/.well-known/openid-configuration\",\n        {\n          method: \"GET\",\n          metadata: {\n            isAction: false\n          }\n        },\n        async (ctx) => {\n          const metadata = getMetadata(ctx, options);\n          return ctx.json(metadata);\n        }\n      ),\n      oAuth2authorize: createAuthEndpoint(\n        \"/oauth2/authorize\",\n        {\n          method: \"GET\",\n          query: z.record(z.string(), z.any()),\n          metadata: {\n            openapi: {\n              description: \"Authorize an OAuth2 request\",\n              responses: {\n                \"200\": {\n                  description: \"Authorization response generated successfully\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        additionalProperties: true,\n                        description: \"Authorization response, contents depend on the authorize function implementation\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          return authorize(ctx, opts);\n        }\n      ),\n      oAuthConsent: createAuthEndpoint(\n        \"/oauth2/consent\",\n        {\n          method: \"POST\",\n          body: z.object({\n            accept: z.boolean(),\n            consent_code: z.string().optional()\n          }),\n          use: [sessionMiddleware],\n          metadata: {\n            openapi: {\n              description: \"Handle OAuth2 consent. Supports both URL parameter-based flows (consent_code in body) and cookie-based flows (signed cookie).\",\n              requestBody: {\n                required: true,\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      type: \"object\",\n                      properties: {\n                        accept: {\n                          type: \"boolean\",\n                          description: \"Whether the user accepts or denies the consent request\"\n                        },\n                        consent_code: {\n                          type: \"string\",\n                          description: \"The consent code from the authorization request. Optional if using cookie-based flow.\"\n                        }\n                      },\n                      required: [\"accept\"]\n                    }\n                  }\n                }\n              },\n              responses: {\n                \"200\": {\n                  description: \"Consent processed successfully\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          redirectURI: {\n                            type: \"string\",\n                            format: \"uri\",\n                            description: \"The URI to redirect to, either with an authorization code or an error\"\n                          }\n                        },\n                        required: [\"redirectURI\"]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          let consentCode = ctx.body.consent_code || null;\n          if (!consentCode) {\n            consentCode = await ctx.getSignedCookie(\n              \"oidc_consent_prompt\",\n              ctx.context.secret\n            );\n          }\n          if (!consentCode) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"consent_code is required (either in body or cookie)\",\n              error: \"invalid_request\"\n            });\n          }\n          const verification = await ctx.context.internalAdapter.findVerificationValue(\n            consentCode\n          );\n          if (!verification) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"Invalid code\",\n              error: \"invalid_request\"\n            });\n          }\n          if (verification.expiresAt < /* @__PURE__ */ new Date()) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"Code expired\",\n              error: \"invalid_request\"\n            });\n          }\n          ctx.setCookie(\"oidc_consent_prompt\", \"\", {\n            maxAge: 0\n          });\n          const value = JSON.parse(verification.value);\n          if (!value.requireConsent) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"Consent not required\",\n              error: \"invalid_request\"\n            });\n          }\n          if (!ctx.body.accept) {\n            await ctx.context.internalAdapter.deleteVerificationValue(\n              verification.id\n            );\n            return ctx.json({\n              redirectURI: `${value.redirectURI}?error=access_denied&error_description=User denied access`\n            });\n          }\n          const code = generateRandomString(32, \"a-z\", \"A-Z\", \"0-9\");\n          const codeExpiresInMs = opts.codeExpiresIn * 1e3;\n          const expiresAt = new Date(Date.now() + codeExpiresInMs);\n          await ctx.context.internalAdapter.updateVerificationValue(\n            verification.id,\n            {\n              value: JSON.stringify({\n                ...value,\n                requireConsent: false\n              }),\n              identifier: code,\n              expiresAt\n            }\n          );\n          await ctx.context.adapter.create({\n            model: modelName.oauthConsent,\n            data: {\n              clientId: value.clientId,\n              userId: value.userId,\n              scopes: value.scope.join(\" \"),\n              consentGiven: true,\n              createdAt: /* @__PURE__ */ new Date(),\n              updatedAt: /* @__PURE__ */ new Date()\n            }\n          });\n          const redirectURI = new URL(value.redirectURI);\n          redirectURI.searchParams.set(\"code\", code);\n          if (value.state) redirectURI.searchParams.set(\"state\", value.state);\n          return ctx.json({\n            redirectURI: redirectURI.toString()\n          });\n        }\n      ),\n      oAuth2token: createAuthEndpoint(\n        \"/oauth2/token\",\n        {\n          method: \"POST\",\n          body: z.record(z.any(), z.any()),\n          metadata: {\n            isAction: false\n          }\n        },\n        async (ctx) => {\n          let { body } = ctx;\n          if (!body) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"request body not found\",\n              error: \"invalid_request\"\n            });\n          }\n          if (body instanceof FormData) {\n            body = Object.fromEntries(body.entries());\n          }\n          if (!(body instanceof Object)) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"request body is not an object\",\n              error: \"invalid_request\"\n            });\n          }\n          let { client_id, client_secret } = body;\n          const authorization = ctx.request?.headers.get(\"authorization\") || null;\n          if (authorization && !client_id && !client_secret && authorization.startsWith(\"Basic \")) {\n            try {\n              const encoded = authorization.replace(\"Basic \", \"\");\n              const decoded = new TextDecoder().decode(base64.decode(encoded));\n              if (!decoded.includes(\":\")) {\n                throw new APIError(\"UNAUTHORIZED\", {\n                  error_description: \"invalid authorization header format\",\n                  error: \"invalid_client\"\n                });\n              }\n              const [id, secret] = decoded.split(\":\");\n              if (!id || !secret) {\n                throw new APIError(\"UNAUTHORIZED\", {\n                  error_description: \"invalid authorization header format\",\n                  error: \"invalid_client\"\n                });\n              }\n              client_id = id;\n              client_secret = secret;\n            } catch (error) {\n              throw new APIError(\"UNAUTHORIZED\", {\n                error_description: \"invalid authorization header format\",\n                error: \"invalid_client\"\n              });\n            }\n          }\n          const now = Date.now();\n          const iat = Math.floor(now / 1e3);\n          const exp = iat + (opts.accessTokenExpiresIn ?? 3600);\n          const accessTokenExpiresAt = new Date(exp * 1e3);\n          const refreshTokenExpiresAt = new Date(\n            (iat + (opts.refreshTokenExpiresIn ?? 604800)) * 1e3\n          );\n          const {\n            grant_type,\n            code,\n            redirect_uri,\n            refresh_token,\n            code_verifier\n          } = body;\n          if (grant_type === \"refresh_token\") {\n            if (!refresh_token) {\n              throw new APIError(\"BAD_REQUEST\", {\n                error_description: \"refresh_token is required\",\n                error: \"invalid_request\"\n              });\n            }\n            const token = await ctx.context.adapter.findOne({\n              model: modelName.oauthAccessToken,\n              where: [\n                {\n                  field: \"refreshToken\",\n                  value: refresh_token.toString()\n                }\n              ]\n            });\n            if (!token) {\n              throw new APIError(\"UNAUTHORIZED\", {\n                error_description: \"invalid refresh token\",\n                error: \"invalid_grant\"\n              });\n            }\n            if (token.clientId !== client_id?.toString()) {\n              throw new APIError(\"UNAUTHORIZED\", {\n                error_description: \"invalid client_id\",\n                error: \"invalid_client\"\n              });\n            }\n            if (token.refreshTokenExpiresAt < /* @__PURE__ */ new Date()) {\n              throw new APIError(\"UNAUTHORIZED\", {\n                error_description: \"refresh token expired\",\n                error: \"invalid_grant\"\n              });\n            }\n            const accessToken2 = generateRandomString(32, \"a-z\", \"A-Z\");\n            const newRefreshToken = generateRandomString(32, \"a-z\", \"A-Z\");\n            await ctx.context.adapter.create({\n              model: modelName.oauthAccessToken,\n              data: {\n                accessToken: accessToken2,\n                refreshToken: newRefreshToken,\n                accessTokenExpiresAt,\n                refreshTokenExpiresAt,\n                clientId: client_id.toString(),\n                userId: token.userId,\n                scopes: token.scopes,\n                createdAt: new Date(iat * 1e3),\n                updatedAt: new Date(iat * 1e3)\n              }\n            });\n            return ctx.json({\n              access_token: accessToken2,\n              token_type: \"bearer\",\n              expires_in: opts.accessTokenExpiresIn,\n              refresh_token: newRefreshToken,\n              scope: token.scopes\n            });\n          }\n          if (!code) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"code is required\",\n              error: \"invalid_request\"\n            });\n          }\n          if (options.requirePKCE && !code_verifier) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"code verifier is missing\",\n              error: \"invalid_request\"\n            });\n          }\n          const verificationValue = await ctx.context.internalAdapter.findVerificationValue(\n            code.toString()\n          );\n          if (!verificationValue) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"invalid code\",\n              error: \"invalid_grant\"\n            });\n          }\n          if (verificationValue.expiresAt < /* @__PURE__ */ new Date()) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"code expired\",\n              error: \"invalid_grant\"\n            });\n          }\n          await ctx.context.internalAdapter.deleteVerificationValue(\n            verificationValue.id\n          );\n          if (!client_id) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"client_id is required\",\n              error: \"invalid_client\"\n            });\n          }\n          if (!grant_type) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"grant_type is required\",\n              error: \"invalid_request\"\n            });\n          }\n          if (grant_type !== \"authorization_code\") {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"grant_type must be 'authorization_code'\",\n              error: \"unsupported_grant_type\"\n            });\n          }\n          if (!redirect_uri) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"redirect_uri is required\",\n              error: \"invalid_request\"\n            });\n          }\n          const client = await getClient(\n            client_id.toString(),\n            ctx.context.adapter,\n            trustedClients\n          );\n          if (!client) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"invalid client_id\",\n              error: \"invalid_client\"\n            });\n          }\n          if (client.disabled) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"client is disabled\",\n              error: \"invalid_client\"\n            });\n          }\n          const value = JSON.parse(\n            verificationValue.value\n          );\n          if (value.clientId !== client_id.toString()) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"invalid client_id\",\n              error: \"invalid_client\"\n            });\n          }\n          if (value.redirectURI !== redirect_uri.toString()) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"invalid redirect_uri\",\n              error: \"invalid_client\"\n            });\n          }\n          if (value.codeChallenge && !code_verifier) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error_description: \"code verifier is missing\",\n              error: \"invalid_request\"\n            });\n          }\n          if (client.type === \"public\") {\n            if (!code_verifier) {\n              throw new APIError(\"BAD_REQUEST\", {\n                error_description: \"code verifier is required for public clients\",\n                error: \"invalid_request\"\n              });\n            }\n          } else {\n            if (!client.clientSecret || !client_secret) {\n              throw new APIError(\"UNAUTHORIZED\", {\n                error_description: \"client_secret is required for confidential clients\",\n                error: \"invalid_client\"\n              });\n            }\n            const isValidSecret = await verifyStoredClientSecret(\n              ctx,\n              client.clientSecret,\n              client_secret.toString()\n            );\n            if (!isValidSecret) {\n              throw new APIError(\"UNAUTHORIZED\", {\n                error_description: \"invalid client_secret\",\n                error: \"invalid_client\"\n              });\n            }\n          }\n          const challenge = value.codeChallengeMethod === \"plain\" ? code_verifier : await createHash(\"SHA-256\", \"base64urlnopad\").digest(\n            code_verifier\n          );\n          if (challenge !== value.codeChallenge) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"code verification failed\",\n              error: \"invalid_request\"\n            });\n          }\n          const requestedScopes = value.scope;\n          await ctx.context.internalAdapter.deleteVerificationValue(\n            verificationValue.id\n          );\n          const accessToken = generateRandomString(32, \"a-z\", \"A-Z\");\n          const refreshToken = generateRandomString(32, \"A-Z\", \"a-z\");\n          await ctx.context.adapter.create({\n            model: modelName.oauthAccessToken,\n            data: {\n              accessToken,\n              refreshToken,\n              accessTokenExpiresAt,\n              refreshTokenExpiresAt,\n              clientId: client_id.toString(),\n              userId: value.userId,\n              scopes: requestedScopes.join(\" \"),\n              createdAt: new Date(iat * 1e3),\n              updatedAt: new Date(iat * 1e3)\n            }\n          });\n          const user = await ctx.context.internalAdapter.findUserById(\n            value.userId\n          );\n          if (!user) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"user not found\",\n              error: \"invalid_grant\"\n            });\n          }\n          const profile = {\n            given_name: user.name.split(\" \")[0],\n            family_name: user.name.split(\" \")[1],\n            name: user.name,\n            profile: user.image,\n            updated_at: new Date(user.updatedAt).toISOString()\n          };\n          const email = {\n            email: user.email,\n            email_verified: user.emailVerified\n          };\n          const userClaims = {\n            ...requestedScopes.includes(\"profile\") ? profile : {},\n            ...requestedScopes.includes(\"email\") ? email : {}\n          };\n          const additionalUserClaims = options.getAdditionalUserInfoClaim ? await options.getAdditionalUserInfoClaim(\n            user,\n            requestedScopes,\n            client\n          ) : {};\n          const payload = {\n            sub: user.id,\n            aud: client_id.toString(),\n            iat: Date.now(),\n            auth_time: ctx.context.session ? new Date(ctx.context.session.session.createdAt).getTime() : void 0,\n            nonce: value.nonce,\n            acr: \"urn:mace:incommon:iap:silver\",\n            // default to silver - ⚠︎ this should be configurable and should be validated against the client's metadata\n            ...userClaims,\n            ...additionalUserClaims\n          };\n          const expirationTime = Math.floor(Date.now() / 1e3) + opts.accessTokenExpiresIn;\n          let idToken;\n          if (options.useJWTPlugin) {\n            const jwtPlugin = getJwtPlugin(ctx);\n            if (!jwtPlugin) {\n              ctx.context.logger.error(\n                \"OIDC: `useJWTPlugin` is enabled but the JWT plugin is not available. Make sure you have the JWT Plugin in your plugins array or set `useJWTPlugin` to false.\"\n              );\n              throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n                error_description: \"JWT plugin is not enabled\",\n                error: \"internal_server_error\"\n              });\n            }\n            idToken = await getJwtToken(\n              {\n                ...ctx,\n                context: {\n                  ...ctx.context,\n                  session: {\n                    session: {\n                      id: generateRandomString(32, \"a-z\", \"A-Z\"),\n                      createdAt: new Date(iat * 1e3),\n                      updatedAt: new Date(iat * 1e3),\n                      userId: user.id,\n                      expiresAt: accessTokenExpiresAt,\n                      token: accessToken,\n                      ipAddress: ctx.request?.headers.get(\"x-forwarded-for\")\n                    },\n                    user\n                  }\n                }\n              },\n              {\n                ...jwtPlugin.options,\n                jwt: {\n                  ...jwtPlugin.options?.jwt,\n                  getSubject: () => user.id,\n                  audience: client_id.toString(),\n                  issuer: ctx.context.options.baseURL,\n                  expirationTime,\n                  definePayload: () => payload\n                }\n              }\n            );\n          } else {\n            idToken = await new SignJWT(payload).setProtectedHeader({ alg: \"HS256\" }).setIssuedAt(iat).setExpirationTime(accessTokenExpiresAt).sign(new TextEncoder().encode(client.clientSecret));\n          }\n          return ctx.json(\n            {\n              access_token: accessToken,\n              token_type: \"Bearer\",\n              expires_in: opts.accessTokenExpiresIn,\n              refresh_token: requestedScopes.includes(\"offline_access\") ? refreshToken : void 0,\n              scope: requestedScopes.join(\" \"),\n              id_token: requestedScopes.includes(\"openid\") ? idToken : void 0\n            },\n            {\n              headers: {\n                \"Cache-Control\": \"no-store\",\n                Pragma: \"no-cache\"\n              }\n            }\n          );\n        }\n      ),\n      oAuth2userInfo: createAuthEndpoint(\n        \"/oauth2/userinfo\",\n        {\n          method: \"GET\",\n          metadata: {\n            isAction: false,\n            openapi: {\n              description: \"Get OAuth2 user information\",\n              responses: {\n                \"200\": {\n                  description: \"User information retrieved successfully\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          sub: {\n                            type: \"string\",\n                            description: \"Subject identifier (user ID)\"\n                          },\n                          email: {\n                            type: \"string\",\n                            format: \"email\",\n                            nullable: true,\n                            description: \"User's email address, included if 'email' scope is granted\"\n                          },\n                          name: {\n                            type: \"string\",\n                            nullable: true,\n                            description: \"User's full name, included if 'profile' scope is granted\"\n                          },\n                          picture: {\n                            type: \"string\",\n                            format: \"uri\",\n                            nullable: true,\n                            description: \"User's profile picture URL, included if 'profile' scope is granted\"\n                          },\n                          given_name: {\n                            type: \"string\",\n                            nullable: true,\n                            description: \"User's given name, included if 'profile' scope is granted\"\n                          },\n                          family_name: {\n                            type: \"string\",\n                            nullable: true,\n                            description: \"User's family name, included if 'profile' scope is granted\"\n                          },\n                          email_verified: {\n                            type: \"boolean\",\n                            nullable: true,\n                            description: \"Whether the email is verified, included if 'email' scope is granted\"\n                          }\n                        },\n                        required: [\"sub\"]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          if (!ctx.request) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"request not found\",\n              error: \"invalid_request\"\n            });\n          }\n          const authorization = ctx.request.headers.get(\"authorization\");\n          if (!authorization) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"authorization header not found\",\n              error: \"invalid_request\"\n            });\n          }\n          const token = authorization.replace(\"Bearer \", \"\");\n          const accessToken = await ctx.context.adapter.findOne({\n            model: modelName.oauthAccessToken,\n            where: [\n              {\n                field: \"accessToken\",\n                value: token\n              }\n            ]\n          });\n          if (!accessToken) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"invalid access token\",\n              error: \"invalid_token\"\n            });\n          }\n          if (accessToken.accessTokenExpiresAt < /* @__PURE__ */ new Date()) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"The Access Token expired\",\n              error: \"invalid_token\"\n            });\n          }\n          const client = await getClient(\n            accessToken.clientId,\n            ctx.context.adapter,\n            trustedClients\n          );\n          if (!client) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"client not found\",\n              error: \"invalid_token\"\n            });\n          }\n          const user = await ctx.context.internalAdapter.findUserById(\n            accessToken.userId\n          );\n          if (!user) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error_description: \"user not found\",\n              error: \"invalid_token\"\n            });\n          }\n          const requestedScopes = accessToken.scopes.split(\" \");\n          const baseUserClaims = {\n            sub: user.id,\n            email: requestedScopes.includes(\"email\") ? user.email : void 0,\n            name: requestedScopes.includes(\"profile\") ? user.name : void 0,\n            picture: requestedScopes.includes(\"profile\") ? user.image : void 0,\n            given_name: requestedScopes.includes(\"profile\") ? user.name.split(\" \")[0] : void 0,\n            family_name: requestedScopes.includes(\"profile\") ? user.name.split(\" \")[1] : void 0,\n            email_verified: requestedScopes.includes(\"email\") ? user.emailVerified : void 0\n          };\n          const userClaims = options.getAdditionalUserInfoClaim ? await options.getAdditionalUserInfoClaim(\n            user,\n            requestedScopes,\n            client\n          ) : baseUserClaims;\n          return ctx.json({\n            ...baseUserClaims,\n            ...userClaims\n          });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/oauth2/register`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.registerOAuthApplication`\n       *\n       * **client:**\n       * `authClient.oauth2.register`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/oidc-provider#api-method-oauth2-register)\n       */\n      registerOAuthApplication: createAuthEndpoint(\n        \"/oauth2/register\",\n        {\n          method: \"POST\",\n          body: z.object({\n            redirect_uris: z.array(z.string()).meta({\n              description: 'A list of redirect URIs. Eg: [\"https://client.example.com/callback\"]'\n            }),\n            token_endpoint_auth_method: z.enum([\"none\", \"client_secret_basic\", \"client_secret_post\"]).meta({\n              description: 'The authentication method for the token endpoint. Eg: \"client_secret_basic\"'\n            }).default(\"client_secret_basic\").optional(),\n            grant_types: z.array(\n              z.enum([\n                \"authorization_code\",\n                \"implicit\",\n                \"password\",\n                \"client_credentials\",\n                \"refresh_token\",\n                \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n                \"urn:ietf:params:oauth:grant-type:saml2-bearer\"\n              ])\n            ).meta({\n              description: 'The grant types supported by the application. Eg: [\"authorization_code\"]'\n            }).default([\"authorization_code\"]).optional(),\n            response_types: z.array(z.enum([\"code\", \"token\"])).meta({\n              description: 'The response types supported by the application. Eg: [\"code\"]'\n            }).default([\"code\"]).optional(),\n            client_name: z.string().meta({\n              description: 'The name of the application. Eg: \"My App\"'\n            }).optional(),\n            client_uri: z.string().meta({\n              description: 'The URI of the application. Eg: \"https://client.example.com\"'\n            }).optional(),\n            logo_uri: z.string().meta({\n              description: 'The URI of the application logo. Eg: \"https://client.example.com/logo.png\"'\n            }).optional(),\n            scope: z.string().meta({\n              description: 'The scopes supported by the application. Separated by spaces. Eg: \"profile email\"'\n            }).optional(),\n            contacts: z.array(z.string()).meta({\n              description: 'The contact information for the application. Eg: [\"admin@example.com\"]'\n            }).optional(),\n            tos_uri: z.string().meta({\n              description: 'The URI of the application terms of service. Eg: \"https://client.example.com/tos\"'\n            }).optional(),\n            policy_uri: z.string().meta({\n              description: 'The URI of the application privacy policy. Eg: \"https://client.example.com/policy\"'\n            }).optional(),\n            jwks_uri: z.string().meta({\n              description: 'The URI of the application JWKS. Eg: \"https://client.example.com/jwks\"'\n            }).optional(),\n            jwks: z.record(z.any(), z.any()).meta({\n              description: 'The JWKS of the application. Eg: {\"keys\": [{\"kty\": \"RSA\", \"alg\": \"RS256\", \"use\": \"sig\", \"n\": \"...\", \"e\": \"...\"}]}'\n            }).optional(),\n            metadata: z.record(z.any(), z.any()).meta({\n              description: 'The metadata of the application. Eg: {\"key\": \"value\"}'\n            }).optional(),\n            software_id: z.string().meta({\n              description: 'The software ID of the application. Eg: \"my-software\"'\n            }).optional(),\n            software_version: z.string().meta({\n              description: 'The software version of the application. Eg: \"1.0.0\"'\n            }).optional(),\n            software_statement: z.string().meta({\n              description: \"The software statement of the application.\"\n            }).optional()\n          }),\n          metadata: {\n            openapi: {\n              description: \"Register an OAuth2 application\",\n              responses: {\n                \"200\": {\n                  description: \"OAuth2 application registered successfully\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          name: {\n                            type: \"string\",\n                            description: \"Name of the OAuth2 application\"\n                          },\n                          icon: {\n                            type: \"string\",\n                            nullable: true,\n                            description: \"Icon URL for the application\"\n                          },\n                          metadata: {\n                            type: \"object\",\n                            additionalProperties: true,\n                            nullable: true,\n                            description: \"Additional metadata for the application\"\n                          },\n                          clientId: {\n                            type: \"string\",\n                            description: \"Unique identifier for the client\"\n                          },\n                          clientSecret: {\n                            type: \"string\",\n                            description: \"Secret key for the client\"\n                          },\n                          redirectURLs: {\n                            type: \"array\",\n                            items: { type: \"string\", format: \"uri\" },\n                            description: \"List of allowed redirect URLs\"\n                          },\n                          type: {\n                            type: \"string\",\n                            description: \"Type of the client\",\n                            enum: [\"web\"]\n                          },\n                          authenticationScheme: {\n                            type: \"string\",\n                            description: \"Authentication scheme used by the client\",\n                            enum: [\"client_secret\"]\n                          },\n                          disabled: {\n                            type: \"boolean\",\n                            description: \"Whether the client is disabled\",\n                            enum: [false]\n                          },\n                          userId: {\n                            type: \"string\",\n                            nullable: true,\n                            description: \"ID of the user who registered the client, null if registered anonymously\"\n                          },\n                          createdAt: {\n                            type: \"string\",\n                            format: \"date-time\",\n                            description: \"Creation timestamp\"\n                          },\n                          updatedAt: {\n                            type: \"string\",\n                            format: \"date-time\",\n                            description: \"Last update timestamp\"\n                          }\n                        },\n                        required: [\n                          \"name\",\n                          \"clientId\",\n                          \"clientSecret\",\n                          \"redirectURLs\",\n                          \"type\",\n                          \"authenticationScheme\",\n                          \"disabled\",\n                          \"createdAt\",\n                          \"updatedAt\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const body = ctx.body;\n          const session = await getSessionFromCtx(ctx);\n          if (!session && !options.allowDynamicClientRegistration) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              error: \"invalid_token\",\n              error_description: \"Authentication required for client registration\"\n            });\n          }\n          if ((!body.grant_types || body.grant_types.includes(\"authorization_code\") || body.grant_types.includes(\"implicit\")) && (!body.redirect_uris || body.redirect_uris.length === 0)) {\n            throw new APIError(\"BAD_REQUEST\", {\n              error: \"invalid_redirect_uri\",\n              error_description: \"Redirect URIs are required for authorization_code and implicit grant types\"\n            });\n          }\n          if (body.grant_types && body.response_types) {\n            if (body.grant_types.includes(\"authorization_code\") && !body.response_types.includes(\"code\")) {\n              throw new APIError(\"BAD_REQUEST\", {\n                error: \"invalid_client_metadata\",\n                error_description: \"When 'authorization_code' grant type is used, 'code' response type must be included\"\n              });\n            }\n            if (body.grant_types.includes(\"implicit\") && !body.response_types.includes(\"token\")) {\n              throw new APIError(\"BAD_REQUEST\", {\n                error: \"invalid_client_metadata\",\n                error_description: \"When 'implicit' grant type is used, 'token' response type must be included\"\n              });\n            }\n          }\n          const clientId = options.generateClientId?.() || generateRandomString(32, \"a-z\", \"A-Z\");\n          const clientSecret = options.generateClientSecret?.() || generateRandomString(32, \"a-z\", \"A-Z\");\n          const storedClientSecret = await storeClientSecret(ctx, clientSecret);\n          const client = await ctx.context.adapter.create({\n            model: modelName.oauthClient,\n            data: {\n              name: body.client_name,\n              icon: body.logo_uri,\n              metadata: body.metadata ? JSON.stringify(body.metadata) : null,\n              clientId,\n              clientSecret: storedClientSecret,\n              redirectURLs: body.redirect_uris.join(\",\"),\n              type: \"web\",\n              authenticationScheme: body.token_endpoint_auth_method || \"client_secret_basic\",\n              disabled: false,\n              userId: session?.session.userId,\n              createdAt: /* @__PURE__ */ new Date(),\n              updatedAt: /* @__PURE__ */ new Date()\n            }\n          });\n          return ctx.json(\n            {\n              client_id: clientId,\n              ...client.type !== \"public\" ? {\n                client_secret: clientSecret,\n                client_secret_expires_at: 0\n                // 0 means it doesn't expire\n              } : {},\n              client_id_issued_at: Math.floor(Date.now() / 1e3),\n              client_secret_expires_at: 0,\n              // 0 means it doesn't expire\n              redirect_uris: body.redirect_uris,\n              token_endpoint_auth_method: body.token_endpoint_auth_method || \"client_secret_basic\",\n              grant_types: body.grant_types || [\"authorization_code\"],\n              response_types: body.response_types || [\"code\"],\n              client_name: body.client_name,\n              client_uri: body.client_uri,\n              logo_uri: body.logo_uri,\n              scope: body.scope,\n              contacts: body.contacts,\n              tos_uri: body.tos_uri,\n              policy_uri: body.policy_uri,\n              jwks_uri: body.jwks_uri,\n              jwks: body.jwks,\n              software_id: body.software_id,\n              software_version: body.software_version,\n              software_statement: body.software_statement,\n              metadata: body.metadata\n            },\n            {\n              status: 201,\n              headers: {\n                \"Cache-Control\": \"no-store\",\n                Pragma: \"no-cache\"\n              }\n            }\n          );\n        }\n      ),\n      getOAuthClient: createAuthEndpoint(\n        \"/oauth2/client/:id\",\n        {\n          method: \"GET\",\n          use: [sessionMiddleware],\n          metadata: {\n            openapi: {\n              description: \"Get OAuth2 client details\",\n              responses: {\n                \"200\": {\n                  description: \"OAuth2 client retrieved successfully\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          clientId: {\n                            type: \"string\",\n                            description: \"Unique identifier for the client\"\n                          },\n                          name: {\n                            type: \"string\",\n                            description: \"Name of the OAuth2 application\"\n                          },\n                          icon: {\n                            type: \"string\",\n                            nullable: true,\n                            description: \"Icon URL for the application\"\n                          }\n                        },\n                        required: [\"clientId\", \"name\"]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const client = await getClient(\n            ctx.params.id,\n            ctx.context.adapter,\n            trustedClients\n          );\n          if (!client) {\n            throw new APIError(\"NOT_FOUND\", {\n              error_description: \"client not found\",\n              error: \"not_found\"\n            });\n          }\n          return ctx.json({\n            clientId: client.clientId,\n            name: client.name,\n            icon: client.icon\n          });\n        }\n      )\n    },\n    schema: mergeSchema(schema, options?.schema)\n  };\n};\n\nexport { getMetadata as a, getClient as g, oidcProvider as o, schema as s };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8599, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.B-Ud-fSV.mjs"],"sourcesContent":["import * as z from 'zod/v4';\nimport { APIError } from 'better-call';\nimport { a as createAuthEndpoint, g as getSessionFromCtx, s as sessionMiddleware, c as createAuthMiddleware } from './better-auth.DV5EHeYG.mjs';\nimport './better-auth.nqWf7zUe.mjs';\nimport './better-auth.CMQ3rA-I.mjs';\nimport { base64Url } from '@better-auth/utils/base64';\nimport '@better-auth/utils/hmac';\nimport './better-auth.BjBlybv-.mjs';\nimport '@better-auth/utils/binary';\nimport { m as mergeSchema } from './better-auth.Dcv8PS7T.mjs';\nimport './better-auth.DVhkokI7.mjs';\nimport '../plugins/organization/access/index.mjs';\nimport '@better-auth/utils/random';\nimport { createHash } from '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport { g as generateRandomString } from './better-auth.B4Qoxdgc.mjs';\nimport 'kysely';\nimport '@better-auth/utils/otp';\nimport '../plugins/admin/access/index.mjs';\nimport '@better-fetch/fetch';\nimport 'zod';\nimport '../plugins/custom-session/index.mjs';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { g as getIp } from './better-auth.O2VtDkDK.mjs';\nimport { p as parseJSON } from './better-auth.ffWeg50w.mjs';\nimport { s as safeJSONParse } from './better-auth.BZZKN1g7.mjs';\nimport { role } from '../plugins/access/index.mjs';\nimport '@noble/hashes/sha3';\nimport '../plugins/device-authorization/index.mjs';\n\nconst apiKeySchema = ({\n  timeWindow,\n  rateLimitMax\n}) => ({\n  apikey: {\n    fields: {\n      /**\n       * The name of the key.\n       */\n      name: {\n        type: \"string\",\n        required: false,\n        input: false\n      },\n      /**\n       * Shows the first few characters of the API key\n       * This allows you to show those few characters in the UI to make it easier for users to identify the API key.\n       */\n      start: {\n        type: \"string\",\n        required: false,\n        input: false\n      },\n      /**\n       * The prefix of the key.\n       */\n      prefix: {\n        type: \"string\",\n        required: false,\n        input: false\n      },\n      /**\n       * The hashed key value.\n       */\n      key: {\n        type: \"string\",\n        required: true,\n        input: false\n      },\n      /**\n       * The user id of the user who created the key.\n       */\n      userId: {\n        type: \"string\",\n        references: { model: \"user\", field: \"id\" },\n        required: true,\n        input: false\n      },\n      /**\n       * The interval to refill the key in milliseconds.\n       */\n      refillInterval: {\n        type: \"number\",\n        required: false,\n        input: false\n      },\n      /**\n       * The amount to refill the remaining count of the key.\n       */\n      refillAmount: {\n        type: \"number\",\n        required: false,\n        input: false\n      },\n      /**\n       * The date and time when the key was last refilled.\n       */\n      lastRefillAt: {\n        type: \"date\",\n        required: false,\n        input: false\n      },\n      /**\n       * Whether the key is enabled.\n       */\n      enabled: {\n        type: \"boolean\",\n        required: false,\n        input: false,\n        defaultValue: true\n      },\n      /**\n       * Whether the key has rate limiting enabled.\n       */\n      rateLimitEnabled: {\n        type: \"boolean\",\n        required: false,\n        input: false,\n        defaultValue: true\n      },\n      /**\n       * The time window in milliseconds for the rate limit.\n       */\n      rateLimitTimeWindow: {\n        type: \"number\",\n        required: false,\n        input: false,\n        defaultValue: timeWindow\n      },\n      /**\n       * The maximum number of requests allowed within the `rateLimitTimeWindow`.\n       */\n      rateLimitMax: {\n        type: \"number\",\n        required: false,\n        input: false,\n        defaultValue: rateLimitMax\n      },\n      /**\n       * The number of requests made within the rate limit time window\n       */\n      requestCount: {\n        type: \"number\",\n        required: false,\n        input: false,\n        defaultValue: 0\n      },\n      /**\n       * The remaining number of requests before the key is revoked.\n       *\n       * If this is null, then the key is not revoked.\n       *\n       * If `refillInterval` & `refillAmount` are provided, than this will refill accordingly.\n       */\n      remaining: {\n        type: \"number\",\n        required: false,\n        input: false\n      },\n      /**\n       * The date and time of the last request made to the key.\n       */\n      lastRequest: {\n        type: \"date\",\n        required: false,\n        input: false\n      },\n      /**\n       * The date and time when the key will expire.\n       */\n      expiresAt: {\n        type: \"date\",\n        required: false,\n        input: false\n      },\n      /**\n       * The date and time when the key was created.\n       */\n      createdAt: {\n        type: \"date\",\n        required: true,\n        input: false\n      },\n      /**\n       * The date and time when the key was last updated.\n       */\n      updatedAt: {\n        type: \"date\",\n        required: true,\n        input: false\n      },\n      /**\n       * The permissions of the key.\n       */\n      permissions: {\n        type: \"string\",\n        required: false,\n        input: false\n      },\n      /**\n       * Any additional metadata you want to store with the key.\n       */\n      metadata: {\n        type: \"string\",\n        required: false,\n        input: true,\n        transform: {\n          input(value) {\n            return JSON.stringify(value);\n          },\n          output(value) {\n            if (!value) return null;\n            return parseJSON(value);\n          }\n        }\n      }\n    }\n  }\n});\n\nfunction createApiKey({\n  keyGenerator,\n  opts,\n  schema,\n  deleteAllExpiredApiKeys\n}) {\n  return createAuthEndpoint(\n    \"/api-key/create\",\n    {\n      method: \"POST\",\n      body: z.object({\n        name: z.string().meta({ description: \"Name of the Api Key\" }).optional(),\n        expiresIn: z.number().meta({\n          description: \"Expiration time of the Api Key in seconds\"\n        }).min(1).optional().nullable().default(null),\n        userId: z.coerce.string().meta({\n          description: 'User Id of the user that the Api Key belongs to. server-only. Eg: \"user-id\"'\n        }).optional(),\n        prefix: z.string().meta({ description: \"Prefix of the Api Key\" }).regex(/^[a-zA-Z0-9_-]+$/, {\n          message: \"Invalid prefix format, must be alphanumeric and contain only underscores and hyphens.\"\n        }).optional(),\n        remaining: z.number().meta({\n          description: \"Remaining number of requests. Server side only\"\n        }).min(0).optional().nullable().default(null),\n        metadata: z.any().optional(),\n        refillAmount: z.number().meta({\n          description: \"Amount to refill the remaining count of the Api Key. server-only. Eg: 100\"\n        }).min(1).optional(),\n        refillInterval: z.number().meta({\n          description: \"Interval to refill the Api Key in milliseconds. server-only. Eg: 1000\"\n        }).optional(),\n        rateLimitTimeWindow: z.number().meta({\n          description: \"The duration in milliseconds where each request is counted. Once the `maxRequests` is reached, the request will be rejected until the `timeWindow` has passed, at which point the `timeWindow` will be reset. server-only. Eg: 1000\"\n        }).optional(),\n        rateLimitMax: z.number().meta({\n          description: \"Maximum amount of requests allowed within a window. Once the `maxRequests` is reached, the request will be rejected until the `timeWindow` has passed, at which point the `timeWindow` will be reset. server-only. Eg: 100\"\n        }).optional(),\n        rateLimitEnabled: z.boolean().meta({\n          description: \"Whether the key has rate limiting enabled. server-only. Eg: true\"\n        }).optional(),\n        permissions: z.record(z.string(), z.array(z.string())).meta({\n          description: \"Permissions of the Api Key.\"\n        }).optional()\n      }),\n      metadata: {\n        openapi: {\n          description: \"Create a new API key for a user\",\n          responses: {\n            \"200\": {\n              description: \"API key created successfully\",\n              content: {\n                \"application/json\": {\n                  schema: {\n                    type: \"object\",\n                    properties: {\n                      id: {\n                        type: \"string\",\n                        description: \"Unique identifier of the API key\"\n                      },\n                      createdAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        description: \"Creation timestamp\"\n                      },\n                      updatedAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        description: \"Last update timestamp\"\n                      },\n                      name: {\n                        type: \"string\",\n                        nullable: true,\n                        description: \"Name of the API key\"\n                      },\n                      prefix: {\n                        type: \"string\",\n                        nullable: true,\n                        description: \"Prefix of the API key\"\n                      },\n                      start: {\n                        type: \"string\",\n                        nullable: true,\n                        description: \"Starting characters of the key (if configured)\"\n                      },\n                      key: {\n                        type: \"string\",\n                        description: \"The full API key (only returned on creation)\"\n                      },\n                      enabled: {\n                        type: \"boolean\",\n                        description: \"Whether the key is enabled\"\n                      },\n                      expiresAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        nullable: true,\n                        description: \"Expiration timestamp\"\n                      },\n                      userId: {\n                        type: \"string\",\n                        description: \"ID of the user owning the key\"\n                      },\n                      lastRefillAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        nullable: true,\n                        description: \"Last refill timestamp\"\n                      },\n                      lastRequest: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        nullable: true,\n                        description: \"Last request timestamp\"\n                      },\n                      metadata: {\n                        type: \"object\",\n                        nullable: true,\n                        additionalProperties: true,\n                        description: \"Metadata associated with the key\"\n                      },\n                      rateLimitMax: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"Maximum requests in time window\"\n                      },\n                      rateLimitTimeWindow: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"Rate limit time window in milliseconds\"\n                      },\n                      remaining: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"Remaining requests\"\n                      },\n                      refillAmount: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"Amount to refill\"\n                      },\n                      refillInterval: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"Refill interval in milliseconds\"\n                      },\n                      rateLimitEnabled: {\n                        type: \"boolean\",\n                        description: \"Whether rate limiting is enabled\"\n                      },\n                      requestCount: {\n                        type: \"number\",\n                        description: \"Current request count in window\"\n                      },\n                      permissions: {\n                        type: \"object\",\n                        nullable: true,\n                        additionalProperties: {\n                          type: \"array\",\n                          items: { type: \"string\" }\n                        },\n                        description: \"Permissions associated with the key\"\n                      }\n                    },\n                    required: [\n                      \"id\",\n                      \"createdAt\",\n                      \"updatedAt\",\n                      \"key\",\n                      \"enabled\",\n                      \"userId\",\n                      \"rateLimitEnabled\",\n                      \"requestCount\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    async (ctx) => {\n      const {\n        name,\n        expiresIn,\n        prefix,\n        remaining,\n        metadata,\n        refillAmount,\n        refillInterval,\n        permissions,\n        rateLimitMax,\n        rateLimitTimeWindow,\n        rateLimitEnabled\n      } = ctx.body;\n      const session = await getSessionFromCtx(ctx);\n      const authRequired = (ctx.request || ctx.headers) && !ctx.body.userId;\n      const user = session?.user ?? (authRequired ? null : { id: ctx.body.userId });\n      if (!user?.id) {\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: ERROR_CODES.UNAUTHORIZED_SESSION\n        });\n      }\n      if (authRequired) {\n        if (refillAmount !== void 0 || refillInterval !== void 0 || rateLimitMax !== void 0 || rateLimitTimeWindow !== void 0 || rateLimitEnabled !== void 0 || permissions !== void 0 || remaining !== null) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.SERVER_ONLY_PROPERTY\n          });\n        }\n      }\n      if (metadata) {\n        if (opts.enableMetadata === false) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.METADATA_DISABLED\n          });\n        }\n        if (typeof metadata !== \"object\") {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.INVALID_METADATA_TYPE\n          });\n        }\n      }\n      if (refillAmount && !refillInterval) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ERROR_CODES.REFILL_AMOUNT_AND_INTERVAL_REQUIRED\n        });\n      }\n      if (refillInterval && !refillAmount) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ERROR_CODES.REFILL_INTERVAL_AND_AMOUNT_REQUIRED\n        });\n      }\n      if (expiresIn) {\n        if (opts.keyExpiration.disableCustomExpiresTime === true) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.KEY_DISABLED_EXPIRATION\n          });\n        }\n        const expiresIn_in_days = expiresIn / (60 * 60 * 24);\n        if (opts.keyExpiration.minExpiresIn > expiresIn_in_days) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.EXPIRES_IN_IS_TOO_SMALL\n          });\n        } else if (opts.keyExpiration.maxExpiresIn < expiresIn_in_days) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.EXPIRES_IN_IS_TOO_LARGE\n          });\n        }\n      }\n      if (prefix) {\n        if (prefix.length < opts.minimumPrefixLength) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.INVALID_PREFIX_LENGTH\n          });\n        }\n        if (prefix.length > opts.maximumPrefixLength) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.INVALID_PREFIX_LENGTH\n          });\n        }\n      }\n      if (name) {\n        if (name.length < opts.minimumNameLength) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.INVALID_NAME_LENGTH\n          });\n        }\n        if (name.length > opts.maximumNameLength) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.INVALID_NAME_LENGTH\n          });\n        }\n      } else if (opts.requireName) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ERROR_CODES.NAME_REQUIRED\n        });\n      }\n      deleteAllExpiredApiKeys(ctx.context);\n      const key = await keyGenerator({\n        length: opts.defaultKeyLength,\n        prefix: prefix || opts.defaultPrefix\n      });\n      const hashed = opts.disableKeyHashing ? key : await defaultKeyHasher(key);\n      let start = null;\n      if (opts.startingCharactersConfig.shouldStore) {\n        start = key.substring(\n          0,\n          opts.startingCharactersConfig.charactersLength\n        );\n      }\n      const defaultPermissions = opts.permissions?.defaultPermissions ? typeof opts.permissions.defaultPermissions === \"function\" ? await opts.permissions.defaultPermissions(user.id, ctx) : opts.permissions.defaultPermissions : void 0;\n      const permissionsToApply = permissions ? JSON.stringify(permissions) : defaultPermissions ? JSON.stringify(defaultPermissions) : void 0;\n      let data = {\n        createdAt: /* @__PURE__ */ new Date(),\n        updatedAt: /* @__PURE__ */ new Date(),\n        name: name ?? null,\n        prefix: prefix ?? opts.defaultPrefix ?? null,\n        start,\n        key: hashed,\n        enabled: true,\n        expiresAt: expiresIn ? getDate(expiresIn, \"sec\") : opts.keyExpiration.defaultExpiresIn ? getDate(opts.keyExpiration.defaultExpiresIn, \"sec\") : null,\n        userId: user.id,\n        lastRefillAt: null,\n        lastRequest: null,\n        metadata: null,\n        rateLimitMax: rateLimitMax ?? opts.rateLimit.maxRequests ?? null,\n        rateLimitTimeWindow: rateLimitTimeWindow ?? opts.rateLimit.timeWindow ?? null,\n        remaining: remaining === null ? remaining : remaining ?? refillAmount ?? null,\n        refillAmount: refillAmount ?? null,\n        refillInterval: refillInterval ?? null,\n        rateLimitEnabled: rateLimitEnabled === void 0 ? opts.rateLimit.enabled ?? true : rateLimitEnabled,\n        requestCount: 0,\n        //@ts-expect-error - we intentionally save the permissions as string on DB.\n        permissions: permissionsToApply\n      };\n      if (metadata) {\n        data.metadata = schema.apikey.fields.metadata.transform.input(metadata);\n      }\n      const apiKey = await ctx.context.adapter.create({\n        model: API_KEY_TABLE_NAME,\n        data\n      });\n      return ctx.json({\n        ...apiKey,\n        key,\n        metadata: metadata ?? null,\n        permissions: apiKey.permissions ? safeJSONParse(apiKey.permissions) : null\n      });\n    }\n  );\n}\n\nfunction deleteApiKey({\n  opts,\n  schema,\n  deleteAllExpiredApiKeys\n}) {\n  return createAuthEndpoint(\n    \"/api-key/delete\",\n    {\n      method: \"POST\",\n      body: z.object({\n        keyId: z.string().meta({\n          description: \"The id of the Api Key\"\n        })\n      }),\n      use: [sessionMiddleware],\n      metadata: {\n        openapi: {\n          description: \"Delete an existing API key\",\n          requestBody: {\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    keyId: {\n                      type: \"string\",\n                      description: \"The id of the API key to delete\"\n                    }\n                  },\n                  required: [\"keyId\"]\n                }\n              }\n            }\n          },\n          responses: {\n            \"200\": {\n              description: \"API key deleted successfully\",\n              content: {\n                \"application/json\": {\n                  schema: {\n                    type: \"object\",\n                    properties: {\n                      success: {\n                        type: \"boolean\",\n                        description: \"Indicates if the API key was successfully deleted\"\n                      }\n                    },\n                    required: [\"success\"]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    async (ctx) => {\n      const { keyId } = ctx.body;\n      const session = ctx.context.session;\n      if (session.user.banned === true) {\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: ERROR_CODES.USER_BANNED\n        });\n      }\n      const apiKey = await ctx.context.adapter.findOne({\n        model: API_KEY_TABLE_NAME,\n        where: [\n          {\n            field: \"id\",\n            value: keyId\n          }\n        ]\n      });\n      if (!apiKey || apiKey.userId !== session.user.id) {\n        throw new APIError(\"NOT_FOUND\", {\n          message: ERROR_CODES.KEY_NOT_FOUND\n        });\n      }\n      try {\n        await ctx.context.adapter.delete({\n          model: API_KEY_TABLE_NAME,\n          where: [\n            {\n              field: \"id\",\n              value: apiKey.id\n            }\n          ]\n        });\n      } catch (error) {\n        throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n          message: error?.message\n        });\n      }\n      deleteAllExpiredApiKeys(ctx.context);\n      return ctx.json({\n        success: true\n      });\n    }\n  );\n}\n\nfunction getApiKey({\n  opts,\n  schema,\n  deleteAllExpiredApiKeys\n}) {\n  return createAuthEndpoint(\n    \"/api-key/get\",\n    {\n      method: \"GET\",\n      query: z.object({\n        id: z.string().meta({\n          description: \"The id of the Api Key\"\n        })\n      }),\n      use: [sessionMiddleware],\n      metadata: {\n        openapi: {\n          description: \"Retrieve an existing API key by ID\",\n          responses: {\n            \"200\": {\n              description: \"API key retrieved successfully\",\n              content: {\n                \"application/json\": {\n                  schema: {\n                    type: \"object\",\n                    properties: {\n                      id: {\n                        type: \"string\",\n                        description: \"ID\"\n                      },\n                      name: {\n                        type: \"string\",\n                        nullable: true,\n                        description: \"The name of the key\"\n                      },\n                      start: {\n                        type: \"string\",\n                        nullable: true,\n                        description: \"Shows the first few characters of the API key, including the prefix. This allows you to show those few characters in the UI to make it easier for users to identify the API key.\"\n                      },\n                      prefix: {\n                        type: \"string\",\n                        nullable: true,\n                        description: \"The API Key prefix. Stored as plain text.\"\n                      },\n                      userId: {\n                        type: \"string\",\n                        description: \"The owner of the user id\"\n                      },\n                      refillInterval: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"The interval in which the `remaining` count is refilled by day. Example: 1 // every day\"\n                      },\n                      refillAmount: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"The amount to refill\"\n                      },\n                      lastRefillAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        nullable: true,\n                        description: \"The last refill date\"\n                      },\n                      enabled: {\n                        type: \"boolean\",\n                        description: \"Sets if key is enabled or disabled\",\n                        default: true\n                      },\n                      rateLimitEnabled: {\n                        type: \"boolean\",\n                        description: \"Whether the key has rate limiting enabled\"\n                      },\n                      rateLimitTimeWindow: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"The duration in milliseconds\"\n                      },\n                      rateLimitMax: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"Maximum amount of requests allowed within a window\"\n                      },\n                      requestCount: {\n                        type: \"number\",\n                        description: \"The number of requests made within the rate limit time window\"\n                      },\n                      remaining: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"Remaining requests (every time api key is used this should updated and should be updated on refill as well)\"\n                      },\n                      lastRequest: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        nullable: true,\n                        description: \"When last request occurred\"\n                      },\n                      expiresAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        nullable: true,\n                        description: \"Expiry date of a key\"\n                      },\n                      createdAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        description: \"created at\"\n                      },\n                      updatedAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        description: \"updated at\"\n                      },\n                      metadata: {\n                        type: \"object\",\n                        nullable: true,\n                        additionalProperties: true,\n                        description: \"Extra metadata about the apiKey\"\n                      },\n                      permissions: {\n                        type: \"string\",\n                        nullable: true,\n                        description: \"Permissions for the api key (stored as JSON string)\"\n                      }\n                    },\n                    required: [\n                      \"id\",\n                      \"userId\",\n                      \"enabled\",\n                      \"rateLimitEnabled\",\n                      \"requestCount\",\n                      \"createdAt\",\n                      \"updatedAt\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    async (ctx) => {\n      const { id } = ctx.query;\n      const session = ctx.context.session;\n      let apiKey = await ctx.context.adapter.findOne({\n        model: API_KEY_TABLE_NAME,\n        where: [\n          {\n            field: \"id\",\n            value: id\n          },\n          {\n            field: \"userId\",\n            value: session.user.id\n          }\n        ]\n      });\n      if (!apiKey) {\n        throw new APIError(\"NOT_FOUND\", {\n          message: ERROR_CODES.KEY_NOT_FOUND\n        });\n      }\n      deleteAllExpiredApiKeys(ctx.context);\n      apiKey.metadata = schema.apikey.fields.metadata.transform.output(\n        apiKey.metadata\n      );\n      const { key, ...returningApiKey } = apiKey;\n      return ctx.json({\n        ...returningApiKey,\n        permissions: returningApiKey.permissions ? safeJSONParse(returningApiKey.permissions) : null\n      });\n    }\n  );\n}\n\nfunction updateApiKey({\n  opts,\n  schema,\n  deleteAllExpiredApiKeys\n}) {\n  return createAuthEndpoint(\n    \"/api-key/update\",\n    {\n      method: \"POST\",\n      body: z.object({\n        keyId: z.string().meta({\n          description: \"The id of the Api Key\"\n        }),\n        userId: z.coerce.string().meta({\n          description: 'The id of the user which the api key belongs to. server-only. Eg: \"some-user-id\"'\n        }).optional(),\n        name: z.string().meta({\n          description: \"The name of the key\"\n        }).optional(),\n        enabled: z.boolean().meta({\n          description: \"Whether the Api Key is enabled or not\"\n        }).optional(),\n        remaining: z.number().meta({\n          description: \"The number of remaining requests\"\n        }).min(1).optional(),\n        refillAmount: z.number().meta({\n          description: \"The refill amount\"\n        }).optional(),\n        refillInterval: z.number().meta({\n          description: \"The refill interval\"\n        }).optional(),\n        metadata: z.any().optional(),\n        expiresIn: z.number().meta({\n          description: \"Expiration time of the Api Key in seconds\"\n        }).min(1).optional().nullable(),\n        rateLimitEnabled: z.boolean().meta({\n          description: \"Whether the key has rate limiting enabled.\"\n        }).optional(),\n        rateLimitTimeWindow: z.number().meta({\n          description: \"The duration in milliseconds where each request is counted. server-only. Eg: 1000\"\n        }).optional(),\n        rateLimitMax: z.number().meta({\n          description: \"Maximum amount of requests allowed within a window. Once the `maxRequests` is reached, the request will be rejected until the `timeWindow` has passed, at which point the `timeWindow` will be reset. server-only. Eg: 100\"\n        }).optional(),\n        permissions: z.record(z.string(), z.array(z.string())).meta({\n          description: \"Update the permissions on the API Key. server-only.\"\n        }).optional().nullable()\n      }),\n      metadata: {\n        openapi: {\n          description: \"Update an existing API key by ID\",\n          responses: {\n            \"200\": {\n              description: \"API key updated successfully\",\n              content: {\n                \"application/json\": {\n                  schema: {\n                    type: \"object\",\n                    properties: {\n                      id: {\n                        type: \"string\",\n                        description: \"ID\"\n                      },\n                      name: {\n                        type: \"string\",\n                        nullable: true,\n                        description: \"The name of the key\"\n                      },\n                      start: {\n                        type: \"string\",\n                        nullable: true,\n                        description: \"Shows the first few characters of the API key, including the prefix. This allows you to show those few characters in the UI to make it easier for users to identify the API key.\"\n                      },\n                      prefix: {\n                        type: \"string\",\n                        nullable: true,\n                        description: \"The API Key prefix. Stored as plain text.\"\n                      },\n                      userId: {\n                        type: \"string\",\n                        description: \"The owner of the user id\"\n                      },\n                      refillInterval: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"The interval in which the `remaining` count is refilled by day. Example: 1 // every day\"\n                      },\n                      refillAmount: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"The amount to refill\"\n                      },\n                      lastRefillAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        nullable: true,\n                        description: \"The last refill date\"\n                      },\n                      enabled: {\n                        type: \"boolean\",\n                        description: \"Sets if key is enabled or disabled\",\n                        default: true\n                      },\n                      rateLimitEnabled: {\n                        type: \"boolean\",\n                        description: \"Whether the key has rate limiting enabled\"\n                      },\n                      rateLimitTimeWindow: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"The duration in milliseconds\"\n                      },\n                      rateLimitMax: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"Maximum amount of requests allowed within a window\"\n                      },\n                      requestCount: {\n                        type: \"number\",\n                        description: \"The number of requests made within the rate limit time window\"\n                      },\n                      remaining: {\n                        type: \"number\",\n                        nullable: true,\n                        description: \"Remaining requests (every time api key is used this should updated and should be updated on refill as well)\"\n                      },\n                      lastRequest: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        nullable: true,\n                        description: \"When last request occurred\"\n                      },\n                      expiresAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        nullable: true,\n                        description: \"Expiry date of a key\"\n                      },\n                      createdAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        description: \"created at\"\n                      },\n                      updatedAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        description: \"updated at\"\n                      },\n                      metadata: {\n                        type: \"object\",\n                        nullable: true,\n                        additionalProperties: true,\n                        description: \"Extra metadata about the apiKey\"\n                      },\n                      permissions: {\n                        type: \"string\",\n                        nullable: true,\n                        description: \"Permissions for the api key (stored as JSON string)\"\n                      }\n                    },\n                    required: [\n                      \"id\",\n                      \"userId\",\n                      \"enabled\",\n                      \"rateLimitEnabled\",\n                      \"requestCount\",\n                      \"createdAt\",\n                      \"updatedAt\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    async (ctx) => {\n      const {\n        keyId,\n        expiresIn,\n        enabled,\n        metadata,\n        refillAmount,\n        refillInterval,\n        remaining,\n        name,\n        permissions,\n        rateLimitEnabled,\n        rateLimitTimeWindow,\n        rateLimitMax\n      } = ctx.body;\n      const session = await getSessionFromCtx(ctx);\n      const authRequired = (ctx.request || ctx.headers) && !ctx.body.userId;\n      const user = session?.user ?? (authRequired ? null : { id: ctx.body.userId });\n      if (!user?.id) {\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: ERROR_CODES.UNAUTHORIZED_SESSION\n        });\n      }\n      if (authRequired) {\n        if (refillAmount !== void 0 || refillInterval !== void 0 || rateLimitMax !== void 0 || rateLimitTimeWindow !== void 0 || rateLimitEnabled !== void 0 || remaining !== void 0 || permissions !== void 0) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.SERVER_ONLY_PROPERTY\n          });\n        }\n      }\n      const apiKey = await ctx.context.adapter.findOne({\n        model: API_KEY_TABLE_NAME,\n        where: [\n          {\n            field: \"id\",\n            value: keyId\n          },\n          {\n            field: \"userId\",\n            value: user.id\n          }\n        ]\n      });\n      if (!apiKey) {\n        throw new APIError(\"NOT_FOUND\", {\n          message: ERROR_CODES.KEY_NOT_FOUND\n        });\n      }\n      let newValues = {};\n      if (name !== void 0) {\n        if (name.length < opts.minimumNameLength) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.INVALID_NAME_LENGTH\n          });\n        } else if (name.length > opts.maximumNameLength) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.INVALID_NAME_LENGTH\n          });\n        }\n        newValues.name = name;\n      }\n      if (enabled !== void 0) {\n        newValues.enabled = enabled;\n      }\n      if (expiresIn !== void 0) {\n        if (opts.keyExpiration.disableCustomExpiresTime === true) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.KEY_DISABLED_EXPIRATION\n          });\n        }\n        if (expiresIn !== null) {\n          const expiresIn_in_days = expiresIn / (60 * 60 * 24);\n          if (expiresIn_in_days < opts.keyExpiration.minExpiresIn) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ERROR_CODES.EXPIRES_IN_IS_TOO_SMALL\n            });\n          } else if (expiresIn_in_days > opts.keyExpiration.maxExpiresIn) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ERROR_CODES.EXPIRES_IN_IS_TOO_LARGE\n            });\n          }\n        }\n        newValues.expiresAt = expiresIn ? getDate(expiresIn, \"sec\") : null;\n      }\n      if (metadata !== void 0) {\n        if (typeof metadata !== \"object\") {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.INVALID_METADATA_TYPE\n          });\n        }\n        newValues.metadata = schema.apikey.fields.metadata.transform.input(metadata);\n      }\n      if (remaining !== void 0) {\n        newValues.remaining = remaining;\n      }\n      if (refillAmount !== void 0 || refillInterval !== void 0) {\n        if (refillAmount !== void 0 && refillInterval === void 0) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.REFILL_AMOUNT_AND_INTERVAL_REQUIRED\n          });\n        } else if (refillInterval !== void 0 && refillAmount === void 0) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ERROR_CODES.REFILL_INTERVAL_AND_AMOUNT_REQUIRED\n          });\n        }\n        newValues.refillAmount = refillAmount;\n        newValues.refillInterval = refillInterval;\n      }\n      if (rateLimitEnabled !== void 0) {\n        newValues.rateLimitEnabled = rateLimitEnabled;\n      }\n      if (rateLimitTimeWindow !== void 0) {\n        newValues.rateLimitTimeWindow = rateLimitTimeWindow;\n      }\n      if (rateLimitMax !== void 0) {\n        newValues.rateLimitMax = rateLimitMax;\n      }\n      if (permissions !== void 0) {\n        newValues.permissions = JSON.stringify(permissions);\n      }\n      if (Object.keys(newValues).length === 0) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ERROR_CODES.NO_VALUES_TO_UPDATE\n        });\n      }\n      let newApiKey = apiKey;\n      try {\n        let result = await ctx.context.adapter.update({\n          model: API_KEY_TABLE_NAME,\n          where: [\n            {\n              field: \"id\",\n              value: apiKey.id\n            }\n          ],\n          update: {\n            lastRequest: /* @__PURE__ */ new Date(),\n            remaining: apiKey.remaining === null ? null : apiKey.remaining - 1,\n            ...newValues\n          }\n        });\n        if (result) newApiKey = result;\n      } catch (error) {\n        throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n          message: error?.message\n        });\n      }\n      deleteAllExpiredApiKeys(ctx.context);\n      newApiKey.metadata = schema.apikey.fields.metadata.transform.output(\n        newApiKey.metadata\n      );\n      const { key, ...returningApiKey } = newApiKey;\n      return ctx.json({\n        ...returningApiKey,\n        permissions: returningApiKey.permissions ? safeJSONParse(returningApiKey.permissions) : null\n      });\n    }\n  );\n}\n\nfunction isRateLimited(apiKey, opts) {\n  const now = /* @__PURE__ */ new Date();\n  const lastRequest = apiKey.lastRequest;\n  const rateLimitTimeWindow = apiKey.rateLimitTimeWindow;\n  const rateLimitMax = apiKey.rateLimitMax;\n  let requestCount = apiKey.requestCount;\n  if (opts.rateLimit.enabled === false)\n    return {\n      success: true,\n      message: null,\n      update: { lastRequest: now },\n      tryAgainIn: null\n    };\n  if (apiKey.rateLimitEnabled === false)\n    return {\n      success: true,\n      message: null,\n      update: { lastRequest: now },\n      tryAgainIn: null\n    };\n  if (rateLimitTimeWindow === null || rateLimitMax === null) {\n    return {\n      success: true,\n      message: null,\n      update: null,\n      tryAgainIn: null\n    };\n  }\n  if (lastRequest === null) {\n    return {\n      success: true,\n      message: null,\n      update: { lastRequest: now, requestCount: 1 },\n      tryAgainIn: null\n    };\n  }\n  const timeSinceLastRequest = now.getTime() - new Date(lastRequest).getTime();\n  if (timeSinceLastRequest > rateLimitTimeWindow) {\n    return {\n      success: true,\n      message: null,\n      update: { lastRequest: now, requestCount: 1 },\n      tryAgainIn: null\n    };\n  }\n  if (requestCount >= rateLimitMax) {\n    return {\n      success: false,\n      message: ERROR_CODES.RATE_LIMIT_EXCEEDED,\n      update: null,\n      tryAgainIn: Math.ceil(rateLimitTimeWindow - timeSinceLastRequest)\n    };\n  }\n  requestCount++;\n  return {\n    success: true,\n    message: null,\n    tryAgainIn: null,\n    update: { lastRequest: now, requestCount }\n  };\n}\n\nasync function validateApiKey({\n  hashedKey,\n  ctx,\n  opts,\n  schema,\n  permissions\n}) {\n  const apiKey = await ctx.context.adapter.findOne({\n    model: API_KEY_TABLE_NAME,\n    where: [\n      {\n        field: \"key\",\n        value: hashedKey\n      }\n    ]\n  });\n  if (!apiKey) {\n    throw new APIError(\"UNAUTHORIZED\", {\n      message: ERROR_CODES.INVALID_API_KEY\n    });\n  }\n  if (apiKey.enabled === false) {\n    throw new APIError(\"UNAUTHORIZED\", {\n      message: ERROR_CODES.KEY_DISABLED,\n      code: \"KEY_DISABLED\"\n    });\n  }\n  if (apiKey.expiresAt) {\n    const now = (/* @__PURE__ */ new Date()).getTime();\n    const expiresAt = new Date(apiKey.expiresAt).getTime();\n    if (now > expiresAt) {\n      try {\n        ctx.context.adapter.delete({\n          model: API_KEY_TABLE_NAME,\n          where: [\n            {\n              field: \"id\",\n              value: apiKey.id\n            }\n          ]\n        });\n      } catch (error) {\n        ctx.context.logger.error(`Failed to delete expired API keys:`, error);\n      }\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: ERROR_CODES.KEY_EXPIRED,\n        code: \"KEY_EXPIRED\"\n      });\n    }\n  }\n  if (permissions) {\n    const apiKeyPermissions = apiKey.permissions ? safeJSONParse(apiKey.permissions) : null;\n    if (!apiKeyPermissions) {\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: ERROR_CODES.KEY_NOT_FOUND,\n        code: \"KEY_NOT_FOUND\"\n      });\n    }\n    const r = role(apiKeyPermissions);\n    const result = r.authorize(permissions);\n    if (!result.success) {\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: ERROR_CODES.KEY_NOT_FOUND,\n        code: \"KEY_NOT_FOUND\"\n      });\n    }\n  }\n  let remaining = apiKey.remaining;\n  let lastRefillAt = apiKey.lastRefillAt;\n  if (apiKey.remaining === 0 && apiKey.refillAmount === null) {\n    try {\n      ctx.context.adapter.delete({\n        model: API_KEY_TABLE_NAME,\n        where: [\n          {\n            field: \"id\",\n            value: apiKey.id\n          }\n        ]\n      });\n    } catch (error) {\n      ctx.context.logger.error(`Failed to delete expired API keys:`, error);\n    }\n    throw new APIError(\"TOO_MANY_REQUESTS\", {\n      message: ERROR_CODES.USAGE_EXCEEDED,\n      code: \"USAGE_EXCEEDED\"\n    });\n  } else if (remaining !== null) {\n    let now = (/* @__PURE__ */ new Date()).getTime();\n    const refillInterval = apiKey.refillInterval;\n    const refillAmount = apiKey.refillAmount;\n    let lastTime = new Date(lastRefillAt ?? apiKey.createdAt).getTime();\n    if (refillInterval && refillAmount) {\n      const timeSinceLastRequest = (now - lastTime) / (1e3 * 60 * 60 * 24);\n      if (timeSinceLastRequest > refillInterval) {\n        remaining = refillAmount;\n        lastRefillAt = /* @__PURE__ */ new Date();\n      }\n    }\n    if (remaining === 0) {\n      throw new APIError(\"TOO_MANY_REQUESTS\", {\n        message: ERROR_CODES.USAGE_EXCEEDED,\n        code: \"USAGE_EXCEEDED\"\n      });\n    } else {\n      remaining--;\n    }\n  }\n  const { message, success, update, tryAgainIn } = isRateLimited(apiKey, opts);\n  const newApiKey = await ctx.context.adapter.update({\n    model: API_KEY_TABLE_NAME,\n    where: [\n      {\n        field: \"id\",\n        value: apiKey.id\n      }\n    ],\n    update: {\n      ...update,\n      remaining,\n      lastRefillAt\n    }\n  });\n  if (!newApiKey) {\n    throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n      message: ERROR_CODES.FAILED_TO_UPDATE_API_KEY,\n      code: \"INTERNAL_SERVER_ERROR\"\n    });\n  }\n  if (success === false) {\n    throw new APIError(\"UNAUTHORIZED\", {\n      message: message ?? void 0,\n      code: \"RATE_LIMITED\",\n      details: {\n        tryAgainIn\n      }\n    });\n  }\n  return newApiKey;\n}\nfunction verifyApiKey({\n  opts,\n  schema,\n  deleteAllExpiredApiKeys\n}) {\n  return createAuthEndpoint(\n    \"/api-key/verify\",\n    {\n      method: \"POST\",\n      body: z.object({\n        key: z.string().meta({\n          description: \"The key to verify\"\n        }),\n        permissions: z.record(z.string(), z.array(z.string())).meta({\n          description: \"The permissions to verify.\"\n        }).optional()\n      }),\n      metadata: {\n        SERVER_ONLY: true\n      }\n    },\n    async (ctx) => {\n      const { key } = ctx.body;\n      if (key.length < opts.defaultKeyLength) {\n        return ctx.json({\n          valid: false,\n          error: {\n            message: ERROR_CODES.INVALID_API_KEY,\n            code: \"KEY_NOT_FOUND\"\n          },\n          key: null\n        });\n      }\n      if (opts.customAPIKeyValidator) {\n        const isValid = await opts.customAPIKeyValidator({ ctx, key });\n        if (!isValid) {\n          return ctx.json({\n            valid: false,\n            error: {\n              message: ERROR_CODES.INVALID_API_KEY,\n              code: \"KEY_NOT_FOUND\"\n            },\n            key: null\n          });\n        }\n      }\n      const hashed = opts.disableKeyHashing ? key : await defaultKeyHasher(key);\n      let apiKey = null;\n      try {\n        apiKey = await validateApiKey({\n          hashedKey: hashed,\n          permissions: ctx.body.permissions,\n          ctx,\n          opts,\n          schema\n        });\n        await deleteAllExpiredApiKeys(ctx.context);\n      } catch (error) {\n        if (error instanceof APIError) {\n          return ctx.json({\n            valid: false,\n            error: {\n              message: error.body?.message,\n              code: error.body?.code\n            },\n            key: null\n          });\n        }\n        return ctx.json({\n          valid: false,\n          error: {\n            message: ERROR_CODES.INVALID_API_KEY,\n            code: \"INVALID_API_KEY\"\n          },\n          key: null\n        });\n      }\n      const { key: _, ...returningApiKey } = apiKey ?? {\n        key: 1,\n        permissions: void 0\n      };\n      if (\"metadata\" in returningApiKey) {\n        returningApiKey.metadata = schema.apikey.fields.metadata.transform.output(\n          returningApiKey.metadata\n        );\n      }\n      returningApiKey.permissions = returningApiKey.permissions ? safeJSONParse(returningApiKey.permissions) : null;\n      return ctx.json({\n        valid: true,\n        error: null,\n        key: apiKey === null ? null : returningApiKey\n      });\n    }\n  );\n}\n\nfunction listApiKeys({\n  opts,\n  schema,\n  deleteAllExpiredApiKeys\n}) {\n  return createAuthEndpoint(\n    \"/api-key/list\",\n    {\n      method: \"GET\",\n      use: [sessionMiddleware],\n      metadata: {\n        openapi: {\n          description: \"List all API keys for the authenticated user\",\n          responses: {\n            \"200\": {\n              description: \"API keys retrieved successfully\",\n              content: {\n                \"application/json\": {\n                  schema: {\n                    type: \"array\",\n                    items: {\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\",\n                          description: \"ID\"\n                        },\n                        name: {\n                          type: \"string\",\n                          nullable: true,\n                          description: \"The name of the key\"\n                        },\n                        start: {\n                          type: \"string\",\n                          nullable: true,\n                          description: \"Shows the first few characters of the API key, including the prefix. This allows you to show those few characters in the UI to make it easier for users to identify the API key.\"\n                        },\n                        prefix: {\n                          type: \"string\",\n                          nullable: true,\n                          description: \"The API Key prefix. Stored as plain text.\"\n                        },\n                        userId: {\n                          type: \"string\",\n                          description: \"The owner of the user id\"\n                        },\n                        refillInterval: {\n                          type: \"number\",\n                          nullable: true,\n                          description: \"The interval in which the `remaining` count is refilled by day. Example: 1 // every day\"\n                        },\n                        refillAmount: {\n                          type: \"number\",\n                          nullable: true,\n                          description: \"The amount to refill\"\n                        },\n                        lastRefillAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          nullable: true,\n                          description: \"The last refill date\"\n                        },\n                        enabled: {\n                          type: \"boolean\",\n                          description: \"Sets if key is enabled or disabled\",\n                          default: true\n                        },\n                        rateLimitEnabled: {\n                          type: \"boolean\",\n                          description: \"Whether the key has rate limiting enabled\"\n                        },\n                        rateLimitTimeWindow: {\n                          type: \"number\",\n                          nullable: true,\n                          description: \"The duration in milliseconds\"\n                        },\n                        rateLimitMax: {\n                          type: \"number\",\n                          nullable: true,\n                          description: \"Maximum amount of requests allowed within a window\"\n                        },\n                        requestCount: {\n                          type: \"number\",\n                          description: \"The number of requests made within the rate limit time window\"\n                        },\n                        remaining: {\n                          type: \"number\",\n                          nullable: true,\n                          description: \"Remaining requests (every time api key is used this should updated and should be updated on refill as well)\"\n                        },\n                        lastRequest: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          nullable: true,\n                          description: \"When last request occurred\"\n                        },\n                        expiresAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          nullable: true,\n                          description: \"Expiry date of a key\"\n                        },\n                        createdAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          description: \"created at\"\n                        },\n                        updatedAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          description: \"updated at\"\n                        },\n                        metadata: {\n                          type: \"object\",\n                          nullable: true,\n                          additionalProperties: true,\n                          description: \"Extra metadata about the apiKey\"\n                        },\n                        permissions: {\n                          type: \"string\",\n                          nullable: true,\n                          description: \"Permissions for the api key (stored as JSON string)\"\n                        }\n                      },\n                      required: [\n                        \"id\",\n                        \"userId\",\n                        \"enabled\",\n                        \"rateLimitEnabled\",\n                        \"requestCount\",\n                        \"createdAt\",\n                        \"updatedAt\"\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    async (ctx) => {\n      const session = ctx.context.session;\n      let apiKeys = await ctx.context.adapter.findMany({\n        model: API_KEY_TABLE_NAME,\n        where: [\n          {\n            field: \"userId\",\n            value: session.user.id\n          }\n        ]\n      });\n      deleteAllExpiredApiKeys(ctx.context);\n      apiKeys = apiKeys.map((apiKey) => {\n        return {\n          ...apiKey,\n          metadata: schema.apikey.fields.metadata.transform.output(\n            apiKey.metadata\n          )\n        };\n      });\n      let returningApiKey = apiKeys.map((x) => {\n        const { key, ...returningApiKey2 } = x;\n        return {\n          ...returningApiKey2,\n          permissions: returningApiKey2.permissions ? safeJSONParse(returningApiKey2.permissions) : null\n        };\n      });\n      return ctx.json(returningApiKey);\n    }\n  );\n}\n\nfunction deleteAllExpiredApiKeysEndpoint({\n  deleteAllExpiredApiKeys\n}) {\n  return createAuthEndpoint(\n    \"/api-key/delete-all-expired-api-keys\",\n    {\n      method: \"POST\",\n      metadata: {\n        SERVER_ONLY: true,\n        client: false\n      }\n    },\n    async (ctx) => {\n      try {\n        await deleteAllExpiredApiKeys(ctx.context, true);\n      } catch (error) {\n        ctx.context.logger.error(\n          \"[API KEY PLUGIN] Failed to delete expired API keys:\",\n          error\n        );\n        return ctx.json({\n          success: false,\n          error\n        });\n      }\n      return ctx.json({ success: true, error: null });\n    }\n  );\n}\n\nlet lastChecked = null;\nasync function deleteAllExpiredApiKeys(ctx, byPassLastCheckTime = false) {\n  if (lastChecked && !byPassLastCheckTime) {\n    const now = /* @__PURE__ */ new Date();\n    const diff = now.getTime() - lastChecked.getTime();\n    if (diff < 1e4) {\n      return;\n    }\n  }\n  lastChecked = /* @__PURE__ */ new Date();\n  await ctx.adapter.deleteMany({\n    model: API_KEY_TABLE_NAME,\n    where: [\n      {\n        field: \"expiresAt\",\n        operator: \"lt\",\n        value: /* @__PURE__ */ new Date()\n      },\n      {\n        field: \"expiresAt\",\n        operator: \"ne\",\n        value: null\n      }\n    ]\n  }).catch((error) => {\n    ctx.logger.error(`Failed to delete expired API keys:`, error);\n  });\n}\nfunction createApiKeyRoutes({\n  keyGenerator,\n  opts,\n  schema\n}) {\n  return {\n    createApiKey: createApiKey({\n      keyGenerator,\n      opts,\n      schema,\n      deleteAllExpiredApiKeys\n    }),\n    verifyApiKey: verifyApiKey({ opts, schema, deleteAllExpiredApiKeys }),\n    getApiKey: getApiKey({ opts, schema, deleteAllExpiredApiKeys }),\n    updateApiKey: updateApiKey({ opts, schema, deleteAllExpiredApiKeys }),\n    deleteApiKey: deleteApiKey({ opts, schema, deleteAllExpiredApiKeys }),\n    listApiKeys: listApiKeys({ opts, schema, deleteAllExpiredApiKeys }),\n    deleteAllExpiredApiKeys: deleteAllExpiredApiKeysEndpoint({\n      deleteAllExpiredApiKeys\n    })\n  };\n}\n\nconst defaultKeyHasher = async (key) => {\n  const hash = await createHash(\"SHA-256\").digest(\n    new TextEncoder().encode(key)\n  );\n  const hashed = base64Url.encode(new Uint8Array(hash), {\n    padding: false\n  });\n  return hashed;\n};\nconst ERROR_CODES = {\n  INVALID_METADATA_TYPE: \"metadata must be an object or undefined\",\n  REFILL_AMOUNT_AND_INTERVAL_REQUIRED: \"refillAmount is required when refillInterval is provided\",\n  REFILL_INTERVAL_AND_AMOUNT_REQUIRED: \"refillInterval is required when refillAmount is provided\",\n  USER_BANNED: \"User is banned\",\n  UNAUTHORIZED_SESSION: \"Unauthorized or invalid session\",\n  KEY_NOT_FOUND: \"API Key not found\",\n  KEY_DISABLED: \"API Key is disabled\",\n  KEY_EXPIRED: \"API Key has expired\",\n  USAGE_EXCEEDED: \"API Key has reached its usage limit\",\n  KEY_NOT_RECOVERABLE: \"API Key is not recoverable\",\n  EXPIRES_IN_IS_TOO_SMALL: \"The expiresIn is smaller than the predefined minimum value.\",\n  EXPIRES_IN_IS_TOO_LARGE: \"The expiresIn is larger than the predefined maximum value.\",\n  INVALID_REMAINING: \"The remaining count is either too large or too small.\",\n  INVALID_PREFIX_LENGTH: \"The prefix length is either too large or too small.\",\n  INVALID_NAME_LENGTH: \"The name length is either too large or too small.\",\n  METADATA_DISABLED: \"Metadata is disabled.\",\n  RATE_LIMIT_EXCEEDED: \"Rate limit exceeded.\",\n  NO_VALUES_TO_UPDATE: \"No values to update.\",\n  KEY_DISABLED_EXPIRATION: \"Custom key expiration values are disabled.\",\n  INVALID_API_KEY: \"Invalid API key.\",\n  INVALID_USER_ID_FROM_API_KEY: \"The user id from the API key is invalid.\",\n  INVALID_API_KEY_GETTER_RETURN_TYPE: \"API Key getter returned an invalid key type. Expected string.\",\n  SERVER_ONLY_PROPERTY: \"The property you're trying to set can only be set from the server auth instance only.\",\n  FAILED_TO_UPDATE_API_KEY: \"Failed to update API key\",\n  NAME_REQUIRED: \"API Key name is required.\"\n};\nconst API_KEY_TABLE_NAME = \"apikey\";\nconst apiKey = (options) => {\n  const opts = {\n    ...options,\n    apiKeyHeaders: options?.apiKeyHeaders ?? \"x-api-key\",\n    defaultKeyLength: options?.defaultKeyLength || 64,\n    maximumPrefixLength: options?.maximumPrefixLength ?? 32,\n    minimumPrefixLength: options?.minimumPrefixLength ?? 1,\n    maximumNameLength: options?.maximumNameLength ?? 32,\n    minimumNameLength: options?.minimumNameLength ?? 1,\n    enableMetadata: options?.enableMetadata ?? false,\n    disableKeyHashing: options?.disableKeyHashing ?? false,\n    requireName: options?.requireName ?? false,\n    rateLimit: {\n      enabled: options?.rateLimit?.enabled === void 0 ? true : options?.rateLimit?.enabled,\n      timeWindow: options?.rateLimit?.timeWindow ?? 1e3 * 60 * 60 * 24,\n      maxRequests: options?.rateLimit?.maxRequests ?? 10\n    },\n    keyExpiration: {\n      defaultExpiresIn: options?.keyExpiration?.defaultExpiresIn ?? null,\n      disableCustomExpiresTime: options?.keyExpiration?.disableCustomExpiresTime ?? false,\n      maxExpiresIn: options?.keyExpiration?.maxExpiresIn ?? 365,\n      minExpiresIn: options?.keyExpiration?.minExpiresIn ?? 1\n    },\n    startingCharactersConfig: {\n      shouldStore: options?.startingCharactersConfig?.shouldStore ?? true,\n      charactersLength: options?.startingCharactersConfig?.charactersLength ?? 6\n    },\n    disableSessionForAPIKeys: options?.disableSessionForAPIKeys ?? false\n  };\n  const schema = mergeSchema(\n    apiKeySchema({\n      rateLimitMax: opts.rateLimit.maxRequests,\n      timeWindow: opts.rateLimit.timeWindow\n    }),\n    opts.schema\n  );\n  const getter = opts.customAPIKeyGetter || ((ctx) => {\n    if (Array.isArray(opts.apiKeyHeaders)) {\n      for (const header of opts.apiKeyHeaders) {\n        const value = ctx.headers?.get(header);\n        if (value) {\n          return value;\n        }\n      }\n    } else {\n      return ctx.headers?.get(opts.apiKeyHeaders);\n    }\n  });\n  const keyGenerator = opts.customKeyGenerator || (async (options2) => {\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n    let apiKey2 = `${options2.prefix || \"\"}`;\n    for (let i = 0; i < options2.length; i++) {\n      const randomIndex = Math.floor(Math.random() * characters.length);\n      apiKey2 += characters[randomIndex];\n    }\n    return apiKey2;\n  });\n  const routes = createApiKeyRoutes({ keyGenerator, opts, schema });\n  return {\n    id: \"api-key\",\n    $ERROR_CODES: ERROR_CODES,\n    hooks: {\n      before: [\n        {\n          matcher: (ctx) => !!getter(ctx) && opts.disableSessionForAPIKeys === false,\n          handler: createAuthMiddleware(async (ctx) => {\n            const key = getter(ctx);\n            if (typeof key !== \"string\") {\n              throw new APIError(\"BAD_REQUEST\", {\n                message: ERROR_CODES.INVALID_API_KEY_GETTER_RETURN_TYPE\n              });\n            }\n            if (key.length < opts.defaultKeyLength) {\n              throw new APIError(\"FORBIDDEN\", {\n                message: ERROR_CODES.INVALID_API_KEY\n              });\n            }\n            if (opts.customAPIKeyValidator) {\n              const isValid = await opts.customAPIKeyValidator({ ctx, key });\n              if (!isValid) {\n                throw new APIError(\"FORBIDDEN\", {\n                  message: ERROR_CODES.INVALID_API_KEY\n                });\n              }\n            }\n            const hashed = opts.disableKeyHashing ? key : await defaultKeyHasher(key);\n            const apiKey2 = await validateApiKey({\n              hashedKey: hashed,\n              ctx,\n              opts,\n              schema\n            });\n            deleteAllExpiredApiKeys(ctx.context).catch((err) => {\n              ctx.context.logger.error(\n                \"Failed to delete expired API keys:\",\n                err\n              );\n            });\n            const user = await ctx.context.internalAdapter.findUserById(\n              apiKey2.userId\n            );\n            if (!user) {\n              throw new APIError(\"UNAUTHORIZED\", {\n                message: ERROR_CODES.INVALID_USER_ID_FROM_API_KEY\n              });\n            }\n            const session = {\n              user,\n              session: {\n                id: apiKey2.id,\n                token: key,\n                userId: apiKey2.userId,\n                userAgent: ctx.request?.headers.get(\"user-agent\") ?? null,\n                ipAddress: ctx.request ? getIp(ctx.request, ctx.context.options) : null,\n                createdAt: /* @__PURE__ */ new Date(),\n                updatedAt: /* @__PURE__ */ new Date(),\n                expiresAt: apiKey2.expiresAt || getDate(\n                  ctx.context.options.session?.expiresIn || 60 * 60 * 24 * 7,\n                  // 7 days\n                  \"ms\"\n                )\n              }\n            };\n            ctx.context.session = session;\n            if (ctx.path === \"/get-session\") {\n              return session;\n            } else {\n              return {\n                context: ctx\n              };\n            }\n          })\n        }\n      ]\n    },\n    endpoints: {\n      /**\n       * ### Endpoint\n       *\n       * POST `/api-key/create`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.createApiKey`\n       *\n       * **client:**\n       * `authClient.apiKey.create`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/api-key#api-method-api-key-create)\n       */\n      createApiKey: routes.createApiKey,\n      /**\n       * ### Endpoint\n       *\n       * POST `/api-key/verify`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.verifyApiKey`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/api-key#api-method-api-key-verify)\n       */\n      verifyApiKey: routes.verifyApiKey,\n      /**\n       * ### Endpoint\n       *\n       * GET `/api-key/get`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.getApiKey`\n       *\n       * **client:**\n       * `authClient.apiKey.get`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/api-key#api-method-api-key-get)\n       */\n      getApiKey: routes.getApiKey,\n      /**\n       * ### Endpoint\n       *\n       * POST `/api-key/update`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.updateApiKey`\n       *\n       * **client:**\n       * `authClient.apiKey.update`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/api-key#api-method-api-key-update)\n       */\n      updateApiKey: routes.updateApiKey,\n      /**\n       * ### Endpoint\n       *\n       * POST `/api-key/delete`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.deleteApiKey`\n       *\n       * **client:**\n       * `authClient.apiKey.delete`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/api-key#api-method-api-key-delete)\n       */\n      deleteApiKey: routes.deleteApiKey,\n      /**\n       * ### Endpoint\n       *\n       * GET `/api-key/list`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.listApiKeys`\n       *\n       * **client:**\n       * `authClient.apiKey.list`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/api-key#api-method-api-key-list)\n       */\n      listApiKeys: routes.listApiKeys,\n      /**\n       * ### Endpoint\n       *\n       * POST `/api-key/delete-all-expired-api-keys`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.deleteAllExpiredApiKeys`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/api-key#api-method-api-key-delete-all-expired-api-keys)\n       */\n      deleteAllExpiredApiKeys: routes.deleteAllExpiredApiKeys\n    },\n    schema\n  };\n};\n\nconst oneTimeToken = (options) => {\n  const opts = {\n    storeToken: \"plain\",\n    ...options\n  };\n  async function storeToken(ctx, token) {\n    if (opts.storeToken === \"hashed\") {\n      return await defaultKeyHasher(token);\n    }\n    if (typeof opts.storeToken === \"object\" && \"type\" in opts.storeToken && opts.storeToken.type === \"custom-hasher\") {\n      return await opts.storeToken.hash(token);\n    }\n    return token;\n  }\n  return {\n    id: \"one-time-token\",\n    endpoints: {\n      /**\n       * ### Endpoint\n       *\n       * GET `/one-time-token/generate`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.generateOneTimeToken`\n       *\n       * **client:**\n       * `authClient.oneTimeToken.generate`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/one-time-token#api-method-one-time-token-generate)\n       */\n      generateOneTimeToken: createAuthEndpoint(\n        \"/one-time-token/generate\",\n        {\n          method: \"GET\",\n          use: [sessionMiddleware]\n        },\n        async (c) => {\n          if (opts?.disableClientRequest && c.request) {\n            throw c.error(\"BAD_REQUEST\", {\n              message: \"Client requests are disabled\"\n            });\n          }\n          const session = c.context.session;\n          const token = opts?.generateToken ? await opts.generateToken(session, c) : generateRandomString(32);\n          const expiresAt = new Date(\n            Date.now() + (opts?.expiresIn ?? 3) * 60 * 1e3\n          );\n          const storedToken = await storeToken(c, token);\n          await c.context.internalAdapter.createVerificationValue({\n            value: session.session.token,\n            identifier: `one-time-token:${storedToken}`,\n            expiresAt\n          });\n          return c.json({ token });\n        }\n      ),\n      /**\n       * ### Endpoint\n       *\n       * POST `/one-time-token/verify`\n       *\n       * ### API Methods\n       *\n       * **server:**\n       * `auth.api.verifyOneTimeToken`\n       *\n       * **client:**\n       * `authClient.oneTimeToken.verify`\n       *\n       * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/one-time-token#api-method-one-time-token-verify)\n       */\n      verifyOneTimeToken: createAuthEndpoint(\n        \"/one-time-token/verify\",\n        {\n          method: \"POST\",\n          body: z.object({\n            token: z.string().meta({\n              description: 'The token to verify. Eg: \"some-token\"'\n            })\n          })\n        },\n        async (c) => {\n          const { token } = c.body;\n          const storedToken = await storeToken(c, token);\n          const verificationValue = await c.context.internalAdapter.findVerificationValue(\n            `one-time-token:${storedToken}`\n          );\n          if (!verificationValue) {\n            throw c.error(\"BAD_REQUEST\", {\n              message: \"Invalid token\"\n            });\n          }\n          if (verificationValue.expiresAt < /* @__PURE__ */ new Date()) {\n            await c.context.internalAdapter.deleteVerificationValue(\n              verificationValue.id\n            );\n            throw c.error(\"BAD_REQUEST\", {\n              message: \"Token expired\"\n            });\n          }\n          await c.context.internalAdapter.deleteVerificationValue(\n            verificationValue.id\n          );\n          const session = await c.context.internalAdapter.findSession(\n            verificationValue.value\n          );\n          if (!session) {\n            throw c.error(\"BAD_REQUEST\", {\n              message: \"Session not found\"\n            });\n          }\n          return c.json(session);\n        }\n      )\n    }\n  };\n};\n\nexport { API_KEY_TABLE_NAME as A, ERROR_CODES as E, apiKey as a, defaultKeyHasher as d, oneTimeToken as o };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 10738, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.DlWzob1-.mjs"],"sourcesContent":["import { checkEndpointConflicts, getEndpoints, router } from '../api/index.mjs';\nimport { defu } from 'defu';\nimport { hashToBase64, verifyPassword, hashPassword } from '../crypto/index.mjs';\nimport { a as getAdapter, c as createInternalAdapter, e as getMigrations } from './better-auth.CSVCtb77.mjs';\nimport { g as getAuthTables } from './better-auth.B_PTVODM.mjs';\nimport 'zod/v4';\nimport './better-auth.Dcv8PS7T.mjs';\nimport { g as getCookies, c as createCookieGetter } from './better-auth.UfVWArIB.mjs';\nimport { a as logger, c as createLogger } from './better-auth.BjBlybv-.mjs';\nimport { U as socialProviders } from './better-auth.nqWf7zUe.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport './better-auth.B4Qoxdgc.mjs';\nimport { e as env, g as getEnvVar, i as isTest, c as getBooleanEnvVar, E as ENV, a as isProduction } from './better-auth.CMQ3rA-I.mjs';\nimport { c as checkPassword } from './better-auth.YwDQhoPc.mjs';\nimport { a as getBaseURL, g as getOrigin } from './better-auth.CuS_eDdK.mjs';\nimport { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport { betterFetch } from '@better-fetch/fetch';\nimport '@better-auth/utils/random';\nimport { g as getKyselyDatabaseType } from './better-auth.B8b3lep0.mjs';\nimport { B as BASE_ERROR_CODES } from './better-auth.DV5EHeYG.mjs';\n\nconst DEFAULT_SECRET = \"better-auth-secret-123456789\";\n\nlet packageJSONCache;\nasync function readRootPackageJson() {\n  if (packageJSONCache) return packageJSONCache;\n  try {\n    const cwd = typeof process !== \"undefined\" && typeof process.cwd === \"function\" ? process.cwd() : \"\";\n    if (!cwd) return void 0;\n    const importRuntime = (m) => Function(\"mm\", \"return import(mm)\")(m);\n    const [{ default: fs }, { default: path }] = await Promise.all([\n      importRuntime(\"fs/promises\"),\n      importRuntime(\"path\")\n    ]);\n    const raw = await fs.readFile(path.join(cwd, \"package.json\"), \"utf-8\");\n    packageJSONCache = JSON.parse(raw);\n    return packageJSONCache;\n  } catch {\n  }\n  return void 0;\n}\nasync function getPackageVersion(pkg) {\n  if (packageJSONCache) {\n    return packageJSONCache.dependencies?.[pkg] || packageJSONCache.devDependencies?.[pkg] || packageJSONCache.peerDependencies?.[pkg];\n  }\n  try {\n    const cwd = typeof process !== \"undefined\" && typeof process.cwd === \"function\" ? process.cwd() : \"\";\n    if (!cwd) throw new Error(\"no-cwd\");\n    const importRuntime = (m) => Function(\"mm\", \"return import(mm)\")(m);\n    const [{ default: fs }, { default: path }] = await Promise.all([\n      importRuntime(\"fs/promises\"),\n      importRuntime(\"path\")\n    ]);\n    const pkgJsonPath = path.join(cwd, \"node_modules\", pkg, \"package.json\");\n    const raw = await fs.readFile(pkgJsonPath, \"utf-8\");\n    const json = JSON.parse(raw);\n    const resolved = json.version || await getVersionFromLocalPackageJson(pkg) || void 0;\n    return resolved;\n  } catch {\n  }\n  const fromRoot = await getVersionFromLocalPackageJson(pkg);\n  return fromRoot;\n}\nasync function getVersionFromLocalPackageJson(pkg) {\n  const json = await readRootPackageJson();\n  if (!json) return void 0;\n  const allDeps = {\n    ...json.dependencies,\n    ...json.devDependencies,\n    ...json.peerDependencies\n  };\n  return allDeps[pkg];\n}\nasync function getNameFromLocalPackageJson() {\n  const json = await readRootPackageJson();\n  return json?.name;\n}\n\nlet projectIdCached = null;\nasync function getProjectId(baseUrl) {\n  if (projectIdCached) return projectIdCached;\n  const projectName = await getNameFromLocalPackageJson();\n  if (projectName) {\n    projectIdCached = await hashToBase64(\n      baseUrl ? baseUrl + projectName : projectName\n    );\n    return projectIdCached;\n  }\n  if (baseUrl) {\n    projectIdCached = await hashToBase64(baseUrl);\n    return projectIdCached;\n  }\n  projectIdCached = generateId(32);\n  return projectIdCached;\n}\n\nconst importRuntime = (m) => {\n  return Function(\"mm\", \"return import(mm)\")(m);\n};\n\nfunction getVendor() {\n  const hasAny = (...keys) => keys.some((k) => Boolean(env[k]));\n  if (hasAny(\"CF_PAGES\", \"CF_PAGES_URL\", \"CF_ACCOUNT_ID\") || typeof navigator !== \"undefined\" && navigator.userAgent === \"Cloudflare-Workers\") {\n    return \"cloudflare\";\n  }\n  if (hasAny(\"VERCEL\", \"VERCEL_URL\", \"VERCEL_ENV\")) return \"vercel\";\n  if (hasAny(\"NETLIFY\", \"NETLIFY_URL\")) return \"netlify\";\n  if (hasAny(\n    \"RENDER\",\n    \"RENDER_URL\",\n    \"RENDER_INTERNAL_HOSTNAME\",\n    \"RENDER_SERVICE_ID\"\n  )) {\n    return \"render\";\n  }\n  if (hasAny(\"AWS_LAMBDA_FUNCTION_NAME\", \"AWS_EXECUTION_ENV\", \"LAMBDA_TASK_ROOT\")) {\n    return \"aws\";\n  }\n  if (hasAny(\n    \"GOOGLE_CLOUD_FUNCTION_NAME\",\n    \"GOOGLE_CLOUD_PROJECT\",\n    \"GCP_PROJECT\",\n    \"K_SERVICE\"\n  )) {\n    return \"gcp\";\n  }\n  if (hasAny(\n    \"AZURE_FUNCTION_NAME\",\n    \"FUNCTIONS_WORKER_RUNTIME\",\n    \"WEBSITE_INSTANCE_ID\",\n    \"WEBSITE_SITE_NAME\"\n  )) {\n    return \"azure\";\n  }\n  if (hasAny(\"DENO_DEPLOYMENT_ID\", \"DENO_REGION\")) return \"deno-deploy\";\n  if (hasAny(\"FLY_APP_NAME\", \"FLY_REGION\", \"FLY_ALLOC_ID\")) return \"fly-io\";\n  if (hasAny(\"RAILWAY_STATIC_URL\", \"RAILWAY_ENVIRONMENT_NAME\"))\n    return \"railway\";\n  if (hasAny(\"DYNO\", \"HEROKU_APP_NAME\")) return \"heroku\";\n  if (hasAny(\"DO_DEPLOYMENT_ID\", \"DO_APP_NAME\", \"DIGITALOCEAN\"))\n    return \"digitalocean\";\n  if (hasAny(\"KOYEB\", \"KOYEB_DEPLOYMENT_ID\", \"KOYEB_APP_NAME\")) return \"koyeb\";\n  return null;\n}\nasync function detectSystemInfo() {\n  try {\n    if (getVendor() === \"cloudflare\") return \"cloudflare\";\n    const os = await importRuntime(\"os\");\n    const cpus = os.cpus();\n    return {\n      deploymentVendor: getVendor(),\n      systemPlatform: os.platform(),\n      systemRelease: os.release(),\n      systemArchitecture: os.arch(),\n      cpuCount: cpus.length,\n      cpuModel: cpus.length ? cpus[0].model : null,\n      cpuSpeed: cpus.length ? cpus[0].speed : null,\n      memory: os.totalmem(),\n      isWSL: await isWsl(),\n      isDocker: await isDocker(),\n      isTTY: typeof process !== \"undefined\" && process.stdout ? process.stdout.isTTY : null\n    };\n  } catch (e) {\n    return {\n      systemPlatform: null,\n      systemRelease: null,\n      systemArchitecture: null,\n      cpuCount: null,\n      cpuModel: null,\n      cpuSpeed: null,\n      memory: null,\n      isWSL: null,\n      isDocker: null,\n      isTTY: null\n    };\n  }\n}\nlet isDockerCached;\nasync function hasDockerEnv() {\n  if (getVendor() === \"cloudflare\") return false;\n  try {\n    const fs = await importRuntime(\"fs\");\n    fs.statSync(\"/.dockerenv\");\n    return true;\n  } catch {\n    return false;\n  }\n}\nasync function hasDockerCGroup() {\n  if (getVendor() === \"cloudflare\") return false;\n  try {\n    const fs = await importRuntime(\"fs\");\n    return fs.readFileSync(\"/proc/self/cgroup\", \"utf8\").includes(\"docker\");\n  } catch {\n    return false;\n  }\n}\nasync function isDocker() {\n  if (getVendor() === \"cloudflare\") return false;\n  if (isDockerCached === void 0) {\n    isDockerCached = await hasDockerEnv() || await hasDockerCGroup();\n  }\n  return isDockerCached;\n}\nasync function isWsl() {\n  try {\n    if (getVendor() === \"cloudflare\") return false;\n    if (typeof process === \"undefined\" || process.platform !== \"linux\") {\n      return false;\n    }\n    const fs = await importRuntime(\"fs\");\n    const os = await importRuntime(\"os\");\n    if (os.release().toLowerCase().includes(\"microsoft\")) {\n      if (await isInsideContainer()) {\n        return false;\n      }\n      return true;\n    }\n    return fs.readFileSync(\"/proc/version\", \"utf8\").toLowerCase().includes(\"microsoft\") ? !await isInsideContainer() : false;\n  } catch {\n    return false;\n  }\n}\nlet isInsideContainerCached;\nconst hasContainerEnv = async () => {\n  if (getVendor() === \"cloudflare\") return false;\n  try {\n    const fs = await importRuntime(\"fs\");\n    fs.statSync(\"/run/.containerenv\");\n    return true;\n  } catch {\n    return false;\n  }\n};\nasync function isInsideContainer() {\n  if (isInsideContainerCached === void 0) {\n    isInsideContainerCached = await hasContainerEnv() || await isDocker();\n  }\n  return isInsideContainerCached;\n}\nfunction isCI() {\n  return env.CI !== \"false\" && (\"BUILD_ID\" in env || // Jenkins, Cloudbees\n  \"BUILD_NUMBER\" in env || // Jenkins, TeamCity (fixed typo: extra space removed)\n  \"CI\" in env || // Travis CI, CircleCI, Cirrus CI, Gitlab CI, Appveyor, CodeShip, dsari, Cloudflare\n  \"CI_APP_ID\" in env || // Appflow\n  \"CI_BUILD_ID\" in env || // Appflow\n  \"CI_BUILD_NUMBER\" in env || // Appflow\n  \"CI_NAME\" in env || // Codeship and others\n  \"CONTINUOUS_INTEGRATION\" in env || // Travis CI, Cirrus CI\n  \"RUN_ID\" in env);\n}\n\nfunction detectRuntime() {\n  if (typeof Deno !== \"undefined\") {\n    const denoVersion = Deno?.version?.deno ?? null;\n    return { name: \"deno\", version: denoVersion };\n  }\n  if (typeof Bun !== \"undefined\") {\n    const bunVersion = Bun?.version ?? null;\n    return { name: \"bun\", version: bunVersion };\n  }\n  if (typeof process !== \"undefined\" && process?.versions?.node) {\n    return { name: \"node\", version: process.versions.node ?? null };\n  }\n  return { name: \"edge\", version: null };\n}\nfunction detectEnvironment() {\n  return getEnvVar(\"NODE_ENV\") === \"production\" ? \"production\" : isCI() ? \"ci\" : isTest() ? \"test\" : \"development\";\n}\n\nconst DATABASES = {\n  pg: \"postgresql\",\n  mysql: \"mysql\",\n  mariadb: \"mariadb\",\n  sqlite3: \"sqlite\",\n  \"better-sqlite3\": \"sqlite\",\n  \"@prisma/client\": \"prisma\",\n  mongoose: \"mongodb\",\n  mongodb: \"mongodb\",\n  \"drizzle-orm\": \"drizzle\"\n};\nasync function detectDatabase() {\n  for (const [pkg, name] of Object.entries(DATABASES)) {\n    const version = await getPackageVersion(pkg);\n    if (version) return { name, version };\n  }\n  return void 0;\n}\n\nconst FRAMEWORKS = {\n  next: \"next\",\n  nuxt: \"nuxt\",\n  \"@remix-run/server-runtime\": \"remix\",\n  astro: \"astro\",\n  \"@sveltejs/kit\": \"sveltekit\",\n  \"solid-start\": \"solid-start\",\n  \"tanstack-start\": \"tanstack-start\",\n  hono: \"hono\",\n  express: \"express\",\n  elysia: \"elysia\",\n  expo: \"expo\"\n};\nasync function detectFramework() {\n  for (const [pkg, name] of Object.entries(FRAMEWORKS)) {\n    const version = await getPackageVersion(pkg);\n    if (version) return { name, version };\n  }\n  return void 0;\n}\n\nfunction detectPackageManager() {\n  const userAgent = env.npm_config_user_agent;\n  if (!userAgent) {\n    return void 0;\n  }\n  const pmSpec = userAgent.split(\" \")[0];\n  const separatorPos = pmSpec.lastIndexOf(\"/\");\n  const name = pmSpec.substring(0, separatorPos);\n  return {\n    name: name === \"npminstall\" ? \"cnpm\" : name,\n    version: pmSpec.substring(separatorPos + 1)\n  };\n}\n\nfunction getTelemetryAuthConfig(options, context) {\n  return {\n    database: context?.database,\n    adapter: context?.adapter,\n    emailVerification: {\n      sendVerificationEmail: !!options.emailVerification?.sendVerificationEmail,\n      sendOnSignUp: !!options.emailVerification?.sendOnSignUp,\n      sendOnSignIn: !!options.emailVerification?.sendOnSignIn,\n      autoSignInAfterVerification: !!options.emailVerification?.autoSignInAfterVerification,\n      expiresIn: options.emailVerification?.expiresIn,\n      onEmailVerification: !!options.emailVerification?.onEmailVerification,\n      afterEmailVerification: !!options.emailVerification?.afterEmailVerification\n    },\n    emailAndPassword: {\n      enabled: !!options.emailAndPassword?.enabled,\n      disableSignUp: !!options.emailAndPassword?.disableSignUp,\n      requireEmailVerification: !!options.emailAndPassword?.requireEmailVerification,\n      maxPasswordLength: options.emailAndPassword?.maxPasswordLength,\n      minPasswordLength: options.emailAndPassword?.minPasswordLength,\n      sendResetPassword: !!options.emailAndPassword?.sendResetPassword,\n      resetPasswordTokenExpiresIn: options.emailAndPassword?.resetPasswordTokenExpiresIn,\n      onPasswordReset: !!options.emailAndPassword?.onPasswordReset,\n      password: {\n        hash: !!options.emailAndPassword?.password?.hash,\n        verify: !!options.emailAndPassword?.password?.verify\n      },\n      autoSignIn: !!options.emailAndPassword?.autoSignIn,\n      revokeSessionsOnPasswordReset: !!options.emailAndPassword?.revokeSessionsOnPasswordReset\n    },\n    socialProviders: Object.keys(options.socialProviders || {}).map((p) => {\n      const provider = options.socialProviders?.[p];\n      if (!provider) return {};\n      return {\n        id: p,\n        mapProfileToUser: !!provider.mapProfileToUser,\n        disableDefaultScope: !!provider.disableDefaultScope,\n        disableIdTokenSignIn: !!provider.disableIdTokenSignIn,\n        disableImplicitSignUp: provider.disableImplicitSignUp,\n        disableSignUp: provider.disableSignUp,\n        getUserInfo: !!provider.getUserInfo,\n        overrideUserInfoOnSignIn: !!provider.overrideUserInfoOnSignIn,\n        prompt: provider.prompt,\n        verifyIdToken: !!provider.verifyIdToken,\n        scope: provider.scope,\n        refreshAccessToken: !!provider.refreshAccessToken\n      };\n    }),\n    plugins: options.plugins?.map((p) => p.id.toString()),\n    user: {\n      modelName: options.user?.modelName,\n      fields: options.user?.fields,\n      additionalFields: options.user?.additionalFields,\n      changeEmail: {\n        enabled: options.user?.changeEmail?.enabled,\n        sendChangeEmailVerification: !!options.user?.changeEmail?.sendChangeEmailVerification\n      }\n    },\n    verification: {\n      modelName: options.verification?.modelName,\n      disableCleanup: options.verification?.disableCleanup,\n      fields: options.verification?.fields\n    },\n    session: {\n      modelName: options.session?.modelName,\n      additionalFields: options.session?.additionalFields,\n      cookieCache: {\n        enabled: options.session?.cookieCache?.enabled,\n        maxAge: options.session?.cookieCache?.maxAge\n      },\n      disableSessionRefresh: options.session?.disableSessionRefresh,\n      expiresIn: options.session?.expiresIn,\n      fields: options.session?.fields,\n      freshAge: options.session?.freshAge,\n      preserveSessionInDatabase: options.session?.preserveSessionInDatabase,\n      storeSessionInDatabase: options.session?.storeSessionInDatabase,\n      updateAge: options.session?.updateAge\n    },\n    account: {\n      modelName: options.account?.modelName,\n      fields: options.account?.fields,\n      encryptOAuthTokens: options.account?.encryptOAuthTokens,\n      updateAccountOnSignIn: options.account?.updateAccountOnSignIn,\n      accountLinking: {\n        enabled: options.account?.accountLinking?.enabled,\n        trustedProviders: options.account?.accountLinking?.trustedProviders,\n        updateUserInfoOnLink: options.account?.accountLinking?.updateUserInfoOnLink,\n        allowUnlinkingAll: options.account?.accountLinking?.allowUnlinkingAll\n      }\n    },\n    hooks: {\n      after: !!options.hooks?.after,\n      before: !!options.hooks?.before\n    },\n    secondaryStorage: !!options.secondaryStorage,\n    advanced: {\n      cookiePrefix: !!options.advanced?.cookiePrefix,\n      //this shouldn't be tracked\n      cookies: !!options.advanced?.cookies,\n      crossSubDomainCookies: {\n        domain: !!options.advanced?.crossSubDomainCookies?.domain,\n        enabled: options.advanced?.crossSubDomainCookies?.enabled,\n        additionalCookies: options.advanced?.crossSubDomainCookies?.additionalCookies\n      },\n      database: {\n        useNumberId: !!options.advanced?.database?.useNumberId,\n        generateId: options.advanced?.database?.generateId,\n        defaultFindManyLimit: options.advanced?.database?.defaultFindManyLimit\n      },\n      useSecureCookies: options.advanced?.useSecureCookies,\n      ipAddress: {\n        disableIpTracking: options.advanced?.ipAddress?.disableIpTracking,\n        ipAddressHeaders: options.advanced?.ipAddress?.ipAddressHeaders\n      },\n      disableCSRFCheck: options.advanced?.disableCSRFCheck,\n      cookieAttributes: {\n        expires: options.advanced?.defaultCookieAttributes?.expires,\n        secure: options.advanced?.defaultCookieAttributes?.secure,\n        sameSite: options.advanced?.defaultCookieAttributes?.sameSite,\n        domain: !!options.advanced?.defaultCookieAttributes?.domain,\n        path: options.advanced?.defaultCookieAttributes?.path,\n        httpOnly: options.advanced?.defaultCookieAttributes?.httpOnly\n      }\n    },\n    trustedOrigins: options.trustedOrigins?.length,\n    rateLimit: {\n      storage: options.rateLimit?.storage,\n      modelName: options.rateLimit?.modelName,\n      window: options.rateLimit?.window,\n      customStorage: !!options.rateLimit?.customStorage,\n      enabled: options.rateLimit?.enabled,\n      max: options.rateLimit?.max\n    },\n    onAPIError: {\n      errorURL: options.onAPIError?.errorURL,\n      onError: !!options.onAPIError?.onError,\n      throw: options.onAPIError?.throw\n    },\n    logger: {\n      disabled: options.logger?.disabled,\n      level: options.logger?.level,\n      log: !!options.logger?.log\n    },\n    databaseHooks: {\n      user: {\n        create: {\n          after: !!options.databaseHooks?.user?.create?.after,\n          before: !!options.databaseHooks?.user?.create?.before\n        },\n        update: {\n          after: !!options.databaseHooks?.user?.update?.after,\n          before: !!options.databaseHooks?.user?.update?.before\n        }\n      },\n      session: {\n        create: {\n          after: !!options.databaseHooks?.session?.create?.after,\n          before: !!options.databaseHooks?.session?.create?.before\n        },\n        update: {\n          after: !!options.databaseHooks?.session?.update?.after,\n          before: !!options.databaseHooks?.session?.update?.before\n        }\n      },\n      account: {\n        create: {\n          after: !!options.databaseHooks?.account?.create?.after,\n          before: !!options.databaseHooks?.account?.create?.before\n        },\n        update: {\n          after: !!options.databaseHooks?.account?.update?.after,\n          before: !!options.databaseHooks?.account?.update?.before\n        }\n      },\n      verification: {\n        create: {\n          after: !!options.databaseHooks?.verification?.create?.after,\n          before: !!options.databaseHooks?.verification?.create?.before\n        },\n        update: {\n          after: !!options.databaseHooks?.verification?.update?.after,\n          before: !!options.databaseHooks?.verification?.update?.before\n        }\n      }\n    }\n  };\n}\n\nasync function createTelemetry(options, context) {\n  const debugEnabled = options.telemetry?.debug || getBooleanEnvVar(\"BETTER_AUTH_TELEMETRY_DEBUG\", false);\n  const TELEMETRY_ENDPOINT = ENV.BETTER_AUTH_TELEMETRY_ENDPOINT;\n  const track = async (event) => {\n    try {\n      if (context?.customTrack) {\n        await context.customTrack(event);\n      } else {\n        if (debugEnabled) {\n          await Promise.resolve(\n            logger.info(\"telemetry event\", JSON.stringify(event, null, 2))\n          );\n        } else {\n          await betterFetch(TELEMETRY_ENDPOINT, {\n            method: \"POST\",\n            body: event\n          });\n        }\n      }\n    } catch {\n    }\n  };\n  const isEnabled = async () => {\n    const telemetryEnabled = options.telemetry?.enabled !== void 0 ? options.telemetry.enabled : false;\n    const envEnabled = getBooleanEnvVar(\"BETTER_AUTH_TELEMETRY\", false);\n    return (envEnabled || telemetryEnabled) && (context?.skipTestCheck || !isTest());\n  };\n  const enabled = await isEnabled();\n  let anonymousId;\n  if (enabled) {\n    anonymousId = await getProjectId(options.baseURL);\n    const payload = {\n      config: getTelemetryAuthConfig(options),\n      runtime: detectRuntime(),\n      database: await detectDatabase(),\n      framework: await detectFramework(),\n      environment: detectEnvironment(),\n      systemInfo: await detectSystemInfo(),\n      packageManager: detectPackageManager()\n    };\n    void track({ type: \"init\", payload, anonymousId });\n  }\n  return {\n    publish: async (event) => {\n      if (!enabled) return;\n      if (!anonymousId) {\n        anonymousId = await getProjectId(options.baseURL);\n      }\n      await track({\n        type: event.type,\n        payload: event.payload,\n        anonymousId\n      });\n    }\n  };\n}\n\nconst init = async (options) => {\n  const adapter = await getAdapter(options);\n  const plugins = options.plugins || [];\n  const internalPlugins = getInternalPlugins(options);\n  const logger = createLogger(options.logger);\n  const baseURL = getBaseURL(options.baseURL, options.basePath);\n  const secret = options.secret || env.BETTER_AUTH_SECRET || env.AUTH_SECRET || DEFAULT_SECRET;\n  if (secret === DEFAULT_SECRET) {\n    if (isProduction) {\n      logger.error(\n        \"You are using the default secret. Please set `BETTER_AUTH_SECRET` in your environment variables or pass `secret` in your auth config.\"\n      );\n    }\n  }\n  options = {\n    ...options,\n    secret,\n    baseURL: baseURL ? new URL(baseURL).origin : \"\",\n    basePath: options.basePath || \"/api/auth\",\n    plugins: plugins.concat(internalPlugins)\n  };\n  checkEndpointConflicts(options, logger);\n  const cookies = getCookies(options);\n  const tables = getAuthTables(options);\n  const providers = Object.entries(\n    options.socialProviders || {}\n  ).map(([key, config]) => {\n    if (config == null) {\n      return null;\n    }\n    if (config.enabled === false) {\n      return null;\n    }\n    if (!config.clientId) {\n      logger.warn(\n        `Social provider ${key} is missing clientId or clientSecret`\n      );\n    }\n    const provider = socialProviders[key](config);\n    provider.disableImplicitSignUp = config.disableImplicitSignUp;\n    return provider;\n  }).filter((x) => x !== null);\n  const generateIdFunc = ({ model, size }) => {\n    if (typeof options.advanced?.generateId === \"function\") {\n      return options.advanced.generateId({ model, size });\n    }\n    if (typeof options?.advanced?.database?.generateId === \"function\") {\n      return options.advanced.database.generateId({ model, size });\n    }\n    return generateId(size);\n  };\n  const { publish } = await createTelemetry(options, {\n    adapter: adapter.id,\n    database: typeof options.database === \"function\" ? \"adapter\" : getKyselyDatabaseType(options.database) || \"unknown\"\n  });\n  let ctx = {\n    appName: options.appName || \"Better Auth\",\n    socialProviders: providers,\n    options,\n    tables,\n    trustedOrigins: getTrustedOrigins(options),\n    baseURL: baseURL || \"\",\n    sessionConfig: {\n      updateAge: options.session?.updateAge !== void 0 ? options.session.updateAge : 24 * 60 * 60,\n      // 24 hours\n      expiresIn: options.session?.expiresIn || 60 * 60 * 24 * 7,\n      // 7 days\n      freshAge: options.session?.freshAge === void 0 ? 60 * 60 * 24 : options.session.freshAge\n    },\n    secret,\n    rateLimit: {\n      ...options.rateLimit,\n      enabled: options.rateLimit?.enabled ?? isProduction,\n      window: options.rateLimit?.window || 10,\n      max: options.rateLimit?.max || 100,\n      storage: options.rateLimit?.storage || (options.secondaryStorage ? \"secondary-storage\" : \"memory\")\n    },\n    authCookies: cookies,\n    logger,\n    generateId: generateIdFunc,\n    session: null,\n    secondaryStorage: options.secondaryStorage,\n    password: {\n      hash: options.emailAndPassword?.password?.hash || hashPassword,\n      verify: options.emailAndPassword?.password?.verify || verifyPassword,\n      config: {\n        minPasswordLength: options.emailAndPassword?.minPasswordLength || 8,\n        maxPasswordLength: options.emailAndPassword?.maxPasswordLength || 128\n      },\n      checkPassword\n    },\n    setNewSession(session) {\n      this.newSession = session;\n    },\n    newSession: null,\n    adapter,\n    internalAdapter: createInternalAdapter(adapter, {\n      options,\n      logger,\n      hooks: options.databaseHooks ? [options.databaseHooks] : []}),\n    createAuthCookie: createCookieGetter(options),\n    async runMigrations() {\n      if (!options.database || \"updateMany\" in options.database) {\n        throw new BetterAuthError(\n          \"Database is not provided or it's an adapter. Migrations are only supported with a database instance.\"\n        );\n      }\n      const { runMigrations } = await getMigrations(options);\n      await runMigrations();\n    },\n    publishTelemetry: publish\n  };\n  let { context } = runPluginInit(ctx);\n  return context;\n};\nfunction runPluginInit(ctx) {\n  let options = ctx.options;\n  const plugins = options.plugins || [];\n  let context = ctx;\n  const dbHooks = [];\n  for (const plugin of plugins) {\n    if (plugin.init) {\n      const result = plugin.init(context);\n      if (typeof result === \"object\") {\n        if (result.options) {\n          const { databaseHooks, ...restOpts } = result.options;\n          if (databaseHooks) {\n            dbHooks.push(databaseHooks);\n          }\n          options = defu(options, restOpts);\n        }\n        if (result.context) {\n          context = {\n            ...context,\n            ...result.context\n          };\n        }\n      }\n    }\n  }\n  dbHooks.push(options.databaseHooks);\n  context.internalAdapter = createInternalAdapter(ctx.adapter, {\n    options,\n    logger: ctx.logger,\n    hooks: dbHooks.filter((u) => u !== void 0),\n    generateId: ctx.generateId\n  });\n  context.options = options;\n  return { context };\n}\nfunction getInternalPlugins(options) {\n  const plugins = [];\n  if (options.advanced?.crossSubDomainCookies?.enabled) ;\n  return plugins;\n}\nfunction getTrustedOrigins(options) {\n  const baseURL = getBaseURL(options.baseURL, options.basePath);\n  if (!baseURL) {\n    return [];\n  }\n  const trustedOrigins = [new URL(baseURL).origin];\n  if (options.trustedOrigins && Array.isArray(options.trustedOrigins)) {\n    trustedOrigins.push(...options.trustedOrigins);\n  }\n  const envTrustedOrigins = env.BETTER_AUTH_TRUSTED_ORIGINS;\n  if (envTrustedOrigins) {\n    trustedOrigins.push(...envTrustedOrigins.split(\",\"));\n  }\n  if (trustedOrigins.filter((x) => !x).length) {\n    throw new BetterAuthError(\n      \"A provided trusted origin is invalid, make sure your trusted origins list is properly defined.\"\n    );\n  }\n  return trustedOrigins;\n}\n\nconst betterAuth = (options) => {\n  const authContext = init(options);\n  const { api } = getEndpoints(authContext, options);\n  const errorCodes = options.plugins?.reduce((acc, plugin) => {\n    if (plugin.$ERROR_CODES) {\n      return {\n        ...acc,\n        ...plugin.$ERROR_CODES\n      };\n    }\n    return acc;\n  }, {});\n  return {\n    handler: async (request) => {\n      const ctx = await authContext;\n      const basePath = ctx.options.basePath || \"/api/auth\";\n      if (!ctx.options.baseURL) {\n        const baseURL = getBaseURL(void 0, basePath, request);\n        if (baseURL) {\n          ctx.baseURL = baseURL;\n          ctx.options.baseURL = getOrigin(ctx.baseURL) || void 0;\n        } else {\n          throw new BetterAuthError(\n            \"Could not get base URL from request. Please provide a valid base URL.\"\n          );\n        }\n      }\n      ctx.trustedOrigins = [\n        ...options.trustedOrigins ? Array.isArray(options.trustedOrigins) ? options.trustedOrigins : await options.trustedOrigins(request) : [],\n        ctx.options.baseURL\n      ];\n      const { handler } = router(ctx, options);\n      return handler(request);\n    },\n    api,\n    options,\n    $context: authContext,\n    $Infer: {},\n    $ERROR_CODES: {\n      ...errorCodes,\n      ...BASE_ERROR_CODES\n    }\n  };\n};\n\nexport { betterAuth as b, createTelemetry as c, getTelemetryAuthConfig as g };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 11580, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/better-auth/dist/shared/better-auth.D-2CmEwz.mjs"],"sourcesContent":["function capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport { capitalizeFirstLetter as c };\n"],"names":[],"mappings":";;;;AAAA,SAAS,sBAAsB,GAAG;IAChC,OAAO,IAAI,MAAM,CAAC,GAAG,WAAW,KAAK,IAAI,KAAK,CAAC;AACjD","ignoreList":[0],"debugId":null}}]
}