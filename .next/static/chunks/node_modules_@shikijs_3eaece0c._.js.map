{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/%40shikijs/types/dist/index.mjs"],"sourcesContent":["class ShikiError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ShikiError\";\n  }\n}\n\nexport { ShikiError };\n"],"names":[],"mappings":";;;;AAAA,MAAM,mBAAmB;IACvB,YAAY,OAAO,CAAE;QACnB,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;IACd;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/%40shikijs/core/dist/index.mjs"],"sourcesContent":["import { ShikiError as ShikiError$1 } from '@shikijs/types';\nexport * from '@shikijs/types';\nimport { FontStyle, INITIAL, EncodedTokenMetadata, Registry as Registry$1, Theme } from '@shikijs/vscode-textmate';\nimport { toHtml } from 'hast-util-to-html';\n\nfunction resolveColorReplacements(theme, options) {\n  const replacements = typeof theme === \"string\" ? {} : { ...theme.colorReplacements };\n  const themeName = typeof theme === \"string\" ? theme : theme.name;\n  for (const [key, value] of Object.entries(options?.colorReplacements || {})) {\n    if (typeof value === \"string\")\n      replacements[key] = value;\n    else if (key === themeName)\n      Object.assign(replacements, value);\n  }\n  return replacements;\n}\nfunction applyColorReplacements(color, replacements) {\n  if (!color)\n    return color;\n  return replacements?.[color?.toLowerCase()] || color;\n}\n\nfunction toArray(x) {\n  return Array.isArray(x) ? x : [x];\n}\nasync function normalizeGetter(p) {\n  return Promise.resolve(typeof p === \"function\" ? p() : p).then((r) => r.default || r);\n}\nfunction isPlainLang(lang) {\n  return !lang || [\"plaintext\", \"txt\", \"text\", \"plain\"].includes(lang);\n}\nfunction isSpecialLang(lang) {\n  return lang === \"ansi\" || isPlainLang(lang);\n}\nfunction isNoneTheme(theme) {\n  return theme === \"none\";\n}\nfunction isSpecialTheme(theme) {\n  return isNoneTheme(theme);\n}\n\nfunction addClassToHast(node, className) {\n  if (!className)\n    return node;\n  node.properties ||= {};\n  node.properties.class ||= [];\n  if (typeof node.properties.class === \"string\")\n    node.properties.class = node.properties.class.split(/\\s+/g);\n  if (!Array.isArray(node.properties.class))\n    node.properties.class = [];\n  const targets = Array.isArray(className) ? className : className.split(/\\s+/g);\n  for (const c of targets) {\n    if (c && !node.properties.class.includes(c))\n      node.properties.class.push(c);\n  }\n  return node;\n}\n\nfunction splitLines(code, preserveEnding = false) {\n  const parts = code.split(/(\\r?\\n)/g);\n  let index = 0;\n  const lines = [];\n  for (let i = 0; i < parts.length; i += 2) {\n    const line = preserveEnding ? parts[i] + (parts[i + 1] || \"\") : parts[i];\n    lines.push([line, index]);\n    index += parts[i].length;\n    index += parts[i + 1]?.length || 0;\n  }\n  return lines;\n}\nfunction createPositionConverter(code) {\n  const lines = splitLines(code, true).map(([line]) => line);\n  function indexToPos(index) {\n    if (index === code.length) {\n      return {\n        line: lines.length - 1,\n        character: lines[lines.length - 1].length\n      };\n    }\n    let character = index;\n    let line = 0;\n    for (const lineText of lines) {\n      if (character < lineText.length)\n        break;\n      character -= lineText.length;\n      line++;\n    }\n    return { line, character };\n  }\n  function posToIndex(line, character) {\n    let index = 0;\n    for (let i = 0; i < line; i++)\n      index += lines[i].length;\n    index += character;\n    return index;\n  }\n  return {\n    lines,\n    indexToPos,\n    posToIndex\n  };\n}\nfunction guessEmbeddedLanguages(code, _lang, highlighter) {\n  const langs = /* @__PURE__ */ new Set();\n  for (const match of code.matchAll(/lang=[\"']([\\w-]+)[\"']/g)) {\n    langs.add(match[1]);\n  }\n  for (const match of code.matchAll(/(?:```|~~~)([\\w-]+)/g)) {\n    langs.add(match[1]);\n  }\n  for (const match of code.matchAll(/\\\\begin\\{([\\w-]+)\\}/g)) {\n    langs.add(match[1]);\n  }\n  if (!highlighter)\n    return Array.from(langs);\n  const bundle = highlighter.getBundledLanguages();\n  return Array.from(langs).filter((l) => l && bundle[l]);\n}\n\nconst DEFAULT_COLOR_LIGHT_DARK = \"light-dark()\";\nconst COLOR_KEYS = [\"color\", \"background-color\"];\n\nfunction splitToken(token, offsets) {\n  let lastOffset = 0;\n  const tokens = [];\n  for (const offset of offsets) {\n    if (offset > lastOffset) {\n      tokens.push({\n        ...token,\n        content: token.content.slice(lastOffset, offset),\n        offset: token.offset + lastOffset\n      });\n    }\n    lastOffset = offset;\n  }\n  if (lastOffset < token.content.length) {\n    tokens.push({\n      ...token,\n      content: token.content.slice(lastOffset),\n      offset: token.offset + lastOffset\n    });\n  }\n  return tokens;\n}\nfunction splitTokens(tokens, breakpoints) {\n  const sorted = Array.from(breakpoints instanceof Set ? breakpoints : new Set(breakpoints)).sort((a, b) => a - b);\n  if (!sorted.length)\n    return tokens;\n  return tokens.map((line) => {\n    return line.flatMap((token) => {\n      const breakpointsInToken = sorted.filter((i) => token.offset < i && i < token.offset + token.content.length).map((i) => i - token.offset).sort((a, b) => a - b);\n      if (!breakpointsInToken.length)\n        return token;\n      return splitToken(token, breakpointsInToken);\n    });\n  });\n}\nfunction flatTokenVariants(merged, variantsOrder, cssVariablePrefix, defaultColor, colorsRendering = \"css-vars\") {\n  const token = {\n    content: merged.content,\n    explanation: merged.explanation,\n    offset: merged.offset\n  };\n  const styles = variantsOrder.map((t) => getTokenStyleObject(merged.variants[t]));\n  const styleKeys = new Set(styles.flatMap((t) => Object.keys(t)));\n  const mergedStyles = {};\n  const varKey = (idx, key) => {\n    const keyName = key === \"color\" ? \"\" : key === \"background-color\" ? \"-bg\" : `-${key}`;\n    return cssVariablePrefix + variantsOrder[idx] + (key === \"color\" ? \"\" : keyName);\n  };\n  styles.forEach((cur, idx) => {\n    for (const key of styleKeys) {\n      const value = cur[key] || \"inherit\";\n      if (idx === 0 && defaultColor && COLOR_KEYS.includes(key)) {\n        if (defaultColor === DEFAULT_COLOR_LIGHT_DARK && styles.length > 1) {\n          const lightIndex = variantsOrder.findIndex((t) => t === \"light\");\n          const darkIndex = variantsOrder.findIndex((t) => t === \"dark\");\n          if (lightIndex === -1 || darkIndex === -1)\n            throw new ShikiError$1('When using `defaultColor: \"light-dark()\"`, you must provide both `light` and `dark` themes');\n          const lightValue = styles[lightIndex][key] || \"inherit\";\n          const darkValue = styles[darkIndex][key] || \"inherit\";\n          mergedStyles[key] = `light-dark(${lightValue}, ${darkValue})`;\n          if (colorsRendering === \"css-vars\")\n            mergedStyles[varKey(idx, key)] = value;\n        } else {\n          mergedStyles[key] = value;\n        }\n      } else {\n        if (colorsRendering === \"css-vars\")\n          mergedStyles[varKey(idx, key)] = value;\n      }\n    }\n  });\n  token.htmlStyle = mergedStyles;\n  return token;\n}\nfunction getTokenStyleObject(token) {\n  const styles = {};\n  if (token.color)\n    styles.color = token.color;\n  if (token.bgColor)\n    styles[\"background-color\"] = token.bgColor;\n  if (token.fontStyle) {\n    if (token.fontStyle & FontStyle.Italic)\n      styles[\"font-style\"] = \"italic\";\n    if (token.fontStyle & FontStyle.Bold)\n      styles[\"font-weight\"] = \"bold\";\n    const decorations = [];\n    if (token.fontStyle & FontStyle.Underline)\n      decorations.push(\"underline\");\n    if (token.fontStyle & FontStyle.Strikethrough)\n      decorations.push(\"line-through\");\n    if (decorations.length)\n      styles[\"text-decoration\"] = decorations.join(\" \");\n  }\n  return styles;\n}\nfunction stringifyTokenStyle(token) {\n  if (typeof token === \"string\")\n    return token;\n  return Object.entries(token).map(([key, value]) => `${key}:${value}`).join(\";\");\n}\n\nconst _grammarStateMap = /* @__PURE__ */ new WeakMap();\nfunction setLastGrammarStateToMap(keys, state) {\n  _grammarStateMap.set(keys, state);\n}\nfunction getLastGrammarStateFromMap(keys) {\n  return _grammarStateMap.get(keys);\n}\nclass GrammarState {\n  /**\n   * Theme to Stack mapping\n   */\n  _stacks = {};\n  lang;\n  get themes() {\n    return Object.keys(this._stacks);\n  }\n  get theme() {\n    return this.themes[0];\n  }\n  get _stack() {\n    return this._stacks[this.theme];\n  }\n  /**\n   * Static method to create a initial grammar state.\n   */\n  static initial(lang, themes) {\n    return new GrammarState(\n      Object.fromEntries(toArray(themes).map((theme) => [theme, INITIAL])),\n      lang\n    );\n  }\n  constructor(...args) {\n    if (args.length === 2) {\n      const [stacksMap, lang] = args;\n      this.lang = lang;\n      this._stacks = stacksMap;\n    } else {\n      const [stack, lang, theme] = args;\n      this.lang = lang;\n      this._stacks = { [theme]: stack };\n    }\n  }\n  /**\n   * Get the internal stack object.\n   * @internal\n   */\n  getInternalStack(theme = this.theme) {\n    return this._stacks[theme];\n  }\n  getScopes(theme = this.theme) {\n    return getScopes(this._stacks[theme]);\n  }\n  toJSON() {\n    return {\n      lang: this.lang,\n      theme: this.theme,\n      themes: this.themes,\n      scopes: this.getScopes()\n    };\n  }\n}\nfunction getScopes(stack) {\n  const scopes = [];\n  const visited = /* @__PURE__ */ new Set();\n  function pushScope(stack2) {\n    if (visited.has(stack2))\n      return;\n    visited.add(stack2);\n    const name = stack2?.nameScopesList?.scopeName;\n    if (name)\n      scopes.push(name);\n    if (stack2.parent)\n      pushScope(stack2.parent);\n  }\n  pushScope(stack);\n  return scopes;\n}\nfunction getGrammarStack(state, theme) {\n  if (!(state instanceof GrammarState))\n    throw new ShikiError$1(\"Invalid grammar state\");\n  return state.getInternalStack(theme);\n}\n\nfunction transformerDecorations() {\n  const map = /* @__PURE__ */ new WeakMap();\n  function getContext(shiki) {\n    if (!map.has(shiki.meta)) {\n      let normalizePosition = function(p) {\n        if (typeof p === \"number\") {\n          if (p < 0 || p > shiki.source.length)\n            throw new ShikiError$1(`Invalid decoration offset: ${p}. Code length: ${shiki.source.length}`);\n          return {\n            ...converter.indexToPos(p),\n            offset: p\n          };\n        } else {\n          const line = converter.lines[p.line];\n          if (line === void 0)\n            throw new ShikiError$1(`Invalid decoration position ${JSON.stringify(p)}. Lines length: ${converter.lines.length}`);\n          let character = p.character;\n          if (character < 0)\n            character = line.length + character;\n          if (character < 0 || character > line.length)\n            throw new ShikiError$1(`Invalid decoration position ${JSON.stringify(p)}. Line ${p.line} length: ${line.length}`);\n          return {\n            ...p,\n            character,\n            offset: converter.posToIndex(p.line, character)\n          };\n        }\n      };\n      const converter = createPositionConverter(shiki.source);\n      const decorations = (shiki.options.decorations || []).map((d) => ({\n        ...d,\n        start: normalizePosition(d.start),\n        end: normalizePosition(d.end)\n      }));\n      verifyIntersections(decorations);\n      map.set(shiki.meta, {\n        decorations,\n        converter,\n        source: shiki.source\n      });\n    }\n    return map.get(shiki.meta);\n  }\n  return {\n    name: \"shiki:decorations\",\n    tokens(tokens) {\n      if (!this.options.decorations?.length)\n        return;\n      const ctx = getContext(this);\n      const breakpoints = ctx.decorations.flatMap((d) => [d.start.offset, d.end.offset]);\n      const splitted = splitTokens(tokens, breakpoints);\n      return splitted;\n    },\n    code(codeEl) {\n      if (!this.options.decorations?.length)\n        return;\n      const ctx = getContext(this);\n      const lines = Array.from(codeEl.children).filter((i) => i.type === \"element\" && i.tagName === \"span\");\n      if (lines.length !== ctx.converter.lines.length)\n        throw new ShikiError$1(`Number of lines in code element (${lines.length}) does not match the number of lines in the source (${ctx.converter.lines.length}). Failed to apply decorations.`);\n      function applyLineSection(line, start, end, decoration) {\n        const lineEl = lines[line];\n        let text = \"\";\n        let startIndex = -1;\n        let endIndex = -1;\n        if (start === 0)\n          startIndex = 0;\n        if (end === 0)\n          endIndex = 0;\n        if (end === Number.POSITIVE_INFINITY)\n          endIndex = lineEl.children.length;\n        if (startIndex === -1 || endIndex === -1) {\n          for (let i = 0; i < lineEl.children.length; i++) {\n            text += stringify(lineEl.children[i]);\n            if (startIndex === -1 && text.length === start)\n              startIndex = i + 1;\n            if (endIndex === -1 && text.length === end)\n              endIndex = i + 1;\n          }\n        }\n        if (startIndex === -1)\n          throw new ShikiError$1(`Failed to find start index for decoration ${JSON.stringify(decoration.start)}`);\n        if (endIndex === -1)\n          throw new ShikiError$1(`Failed to find end index for decoration ${JSON.stringify(decoration.end)}`);\n        const children = lineEl.children.slice(startIndex, endIndex);\n        if (!decoration.alwaysWrap && children.length === lineEl.children.length) {\n          applyDecoration(lineEl, decoration, \"line\");\n        } else if (!decoration.alwaysWrap && children.length === 1 && children[0].type === \"element\") {\n          applyDecoration(children[0], decoration, \"token\");\n        } else {\n          const wrapper = {\n            type: \"element\",\n            tagName: \"span\",\n            properties: {},\n            children\n          };\n          applyDecoration(wrapper, decoration, \"wrapper\");\n          lineEl.children.splice(startIndex, children.length, wrapper);\n        }\n      }\n      function applyLine(line, decoration) {\n        lines[line] = applyDecoration(lines[line], decoration, \"line\");\n      }\n      function applyDecoration(el, decoration, type) {\n        const properties = decoration.properties || {};\n        const transform = decoration.transform || ((i) => i);\n        el.tagName = decoration.tagName || \"span\";\n        el.properties = {\n          ...el.properties,\n          ...properties,\n          class: el.properties.class\n        };\n        if (decoration.properties?.class)\n          addClassToHast(el, decoration.properties.class);\n        el = transform(el, type) || el;\n        return el;\n      }\n      const lineApplies = [];\n      const sorted = ctx.decorations.sort((a, b) => b.start.offset - a.start.offset || a.end.offset - b.end.offset);\n      for (const decoration of sorted) {\n        const { start, end } = decoration;\n        if (start.line === end.line) {\n          applyLineSection(start.line, start.character, end.character, decoration);\n        } else if (start.line < end.line) {\n          applyLineSection(start.line, start.character, Number.POSITIVE_INFINITY, decoration);\n          for (let i = start.line + 1; i < end.line; i++)\n            lineApplies.unshift(() => applyLine(i, decoration));\n          applyLineSection(end.line, 0, end.character, decoration);\n        }\n      }\n      lineApplies.forEach((i) => i());\n    }\n  };\n}\nfunction verifyIntersections(items) {\n  for (let i = 0; i < items.length; i++) {\n    const foo = items[i];\n    if (foo.start.offset > foo.end.offset)\n      throw new ShikiError$1(`Invalid decoration range: ${JSON.stringify(foo.start)} - ${JSON.stringify(foo.end)}`);\n    for (let j = i + 1; j < items.length; j++) {\n      const bar = items[j];\n      const isFooHasBarStart = foo.start.offset <= bar.start.offset && bar.start.offset < foo.end.offset;\n      const isFooHasBarEnd = foo.start.offset < bar.end.offset && bar.end.offset <= foo.end.offset;\n      const isBarHasFooStart = bar.start.offset <= foo.start.offset && foo.start.offset < bar.end.offset;\n      const isBarHasFooEnd = bar.start.offset < foo.end.offset && foo.end.offset <= bar.end.offset;\n      if (isFooHasBarStart || isFooHasBarEnd || isBarHasFooStart || isBarHasFooEnd) {\n        if (isFooHasBarStart && isFooHasBarEnd)\n          continue;\n        if (isBarHasFooStart && isBarHasFooEnd)\n          continue;\n        if (isBarHasFooStart && foo.start.offset === foo.end.offset)\n          continue;\n        if (isFooHasBarEnd && bar.start.offset === bar.end.offset)\n          continue;\n        throw new ShikiError$1(`Decorations ${JSON.stringify(foo.start)} and ${JSON.stringify(bar.start)} intersect.`);\n      }\n    }\n  }\n}\nfunction stringify(el) {\n  if (el.type === \"text\")\n    return el.value;\n  if (el.type === \"element\")\n    return el.children.map(stringify).join(\"\");\n  return \"\";\n}\n\nconst builtInTransformers = [\n  /* @__PURE__ */ transformerDecorations()\n];\nfunction getTransformers(options) {\n  const transformers = sortTransformersByEnforcement(options.transformers || []);\n  return [\n    ...transformers.pre,\n    ...transformers.normal,\n    ...transformers.post,\n    ...builtInTransformers\n  ];\n}\nfunction sortTransformersByEnforcement(transformers) {\n  const pre = [];\n  const post = [];\n  const normal = [];\n  for (const transformer of transformers) {\n    switch (transformer.enforce) {\n      case \"pre\":\n        pre.push(transformer);\n        break;\n      case \"post\":\n        post.push(transformer);\n        break;\n      default:\n        normal.push(transformer);\n    }\n  }\n  return { pre, post, normal };\n}\n\n// src/colors.ts\nvar namedColors = [\n  \"black\",\n  \"red\",\n  \"green\",\n  \"yellow\",\n  \"blue\",\n  \"magenta\",\n  \"cyan\",\n  \"white\",\n  \"brightBlack\",\n  \"brightRed\",\n  \"brightGreen\",\n  \"brightYellow\",\n  \"brightBlue\",\n  \"brightMagenta\",\n  \"brightCyan\",\n  \"brightWhite\"\n];\n\n// src/decorations.ts\nvar decorations = {\n  1: \"bold\",\n  2: \"dim\",\n  3: \"italic\",\n  4: \"underline\",\n  7: \"reverse\",\n  8: \"hidden\",\n  9: \"strikethrough\"\n};\n\n// src/parser.ts\nfunction findSequence(value, position) {\n  const nextEscape = value.indexOf(\"\\x1B\", position);\n  if (nextEscape !== -1) {\n    if (value[nextEscape + 1] === \"[\") {\n      const nextClose = value.indexOf(\"m\", nextEscape);\n      if (nextClose !== -1) {\n        return {\n          sequence: value.substring(nextEscape + 2, nextClose).split(\";\"),\n          startPosition: nextEscape,\n          position: nextClose + 1\n        };\n      }\n    }\n  }\n  return {\n    position: value.length\n  };\n}\nfunction parseColor(sequence) {\n  const colorMode = sequence.shift();\n  if (colorMode === \"2\") {\n    const rgb = sequence.splice(0, 3).map((x) => Number.parseInt(x));\n    if (rgb.length !== 3 || rgb.some((x) => Number.isNaN(x)))\n      return;\n    return {\n      type: \"rgb\",\n      rgb\n    };\n  } else if (colorMode === \"5\") {\n    const index = sequence.shift();\n    if (index) {\n      return { type: \"table\", index: Number(index) };\n    }\n  }\n}\nfunction parseSequence(sequence) {\n  const commands = [];\n  while (sequence.length > 0) {\n    const code = sequence.shift();\n    if (!code)\n      continue;\n    const codeInt = Number.parseInt(code);\n    if (Number.isNaN(codeInt))\n      continue;\n    if (codeInt === 0) {\n      commands.push({ type: \"resetAll\" });\n    } else if (codeInt <= 9) {\n      const decoration = decorations[codeInt];\n      if (decoration) {\n        commands.push({\n          type: \"setDecoration\",\n          value: decorations[codeInt]\n        });\n      }\n    } else if (codeInt <= 29) {\n      const decoration = decorations[codeInt - 20];\n      if (decoration) {\n        commands.push({\n          type: \"resetDecoration\",\n          value: decoration\n        });\n        if (decoration === \"dim\") {\n          commands.push({\n            type: \"resetDecoration\",\n            value: \"bold\"\n          });\n        }\n      }\n    } else if (codeInt <= 37) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 30] }\n      });\n    } else if (codeInt === 38) {\n      const color = parseColor(sequence);\n      if (color) {\n        commands.push({\n          type: \"setForegroundColor\",\n          value: color\n        });\n      }\n    } else if (codeInt === 39) {\n      commands.push({\n        type: \"resetForegroundColor\"\n      });\n    } else if (codeInt <= 47) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 40] }\n      });\n    } else if (codeInt === 48) {\n      const color = parseColor(sequence);\n      if (color) {\n        commands.push({\n          type: \"setBackgroundColor\",\n          value: color\n        });\n      }\n    } else if (codeInt === 49) {\n      commands.push({\n        type: \"resetBackgroundColor\"\n      });\n    } else if (codeInt === 53) {\n      commands.push({\n        type: \"setDecoration\",\n        value: \"overline\"\n      });\n    } else if (codeInt === 55) {\n      commands.push({\n        type: \"resetDecoration\",\n        value: \"overline\"\n      });\n    } else if (codeInt >= 90 && codeInt <= 97) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 90 + 8] }\n      });\n    } else if (codeInt >= 100 && codeInt <= 107) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 100 + 8] }\n      });\n    }\n  }\n  return commands;\n}\nfunction createAnsiSequenceParser() {\n  let foreground = null;\n  let background = null;\n  let decorations2 = /* @__PURE__ */ new Set();\n  return {\n    parse(value) {\n      const tokens = [];\n      let position = 0;\n      do {\n        const findResult = findSequence(value, position);\n        const text = findResult.sequence ? value.substring(position, findResult.startPosition) : value.substring(position);\n        if (text.length > 0) {\n          tokens.push({\n            value: text,\n            foreground,\n            background,\n            decorations: new Set(decorations2)\n          });\n        }\n        if (findResult.sequence) {\n          const commands = parseSequence(findResult.sequence);\n          for (const styleToken of commands) {\n            if (styleToken.type === \"resetAll\") {\n              foreground = null;\n              background = null;\n              decorations2.clear();\n            } else if (styleToken.type === \"resetForegroundColor\") {\n              foreground = null;\n            } else if (styleToken.type === \"resetBackgroundColor\") {\n              background = null;\n            } else if (styleToken.type === \"resetDecoration\") {\n              decorations2.delete(styleToken.value);\n            }\n          }\n          for (const styleToken of commands) {\n            if (styleToken.type === \"setForegroundColor\") {\n              foreground = styleToken.value;\n            } else if (styleToken.type === \"setBackgroundColor\") {\n              background = styleToken.value;\n            } else if (styleToken.type === \"setDecoration\") {\n              decorations2.add(styleToken.value);\n            }\n          }\n        }\n        position = findResult.position;\n      } while (position < value.length);\n      return tokens;\n    }\n  };\n}\n\n// src/palette.ts\nvar defaultNamedColorsMap = {\n  black: \"#000000\",\n  red: \"#bb0000\",\n  green: \"#00bb00\",\n  yellow: \"#bbbb00\",\n  blue: \"#0000bb\",\n  magenta: \"#ff00ff\",\n  cyan: \"#00bbbb\",\n  white: \"#eeeeee\",\n  brightBlack: \"#555555\",\n  brightRed: \"#ff5555\",\n  brightGreen: \"#00ff00\",\n  brightYellow: \"#ffff55\",\n  brightBlue: \"#5555ff\",\n  brightMagenta: \"#ff55ff\",\n  brightCyan: \"#55ffff\",\n  brightWhite: \"#ffffff\"\n};\nfunction createColorPalette(namedColorsMap = defaultNamedColorsMap) {\n  function namedColor(name) {\n    return namedColorsMap[name];\n  }\n  function rgbColor(rgb) {\n    return `#${rgb.map((x) => Math.max(0, Math.min(x, 255)).toString(16).padStart(2, \"0\")).join(\"\")}`;\n  }\n  let colorTable;\n  function getColorTable() {\n    if (colorTable) {\n      return colorTable;\n    }\n    colorTable = [];\n    for (let i = 0; i < namedColors.length; i++) {\n      colorTable.push(namedColor(namedColors[i]));\n    }\n    let levels = [0, 95, 135, 175, 215, 255];\n    for (let r = 0; r < 6; r++) {\n      for (let g = 0; g < 6; g++) {\n        for (let b = 0; b < 6; b++) {\n          colorTable.push(rgbColor([levels[r], levels[g], levels[b]]));\n        }\n      }\n    }\n    let level = 8;\n    for (let i = 0; i < 24; i++, level += 10) {\n      colorTable.push(rgbColor([level, level, level]));\n    }\n    return colorTable;\n  }\n  function tableColor(index) {\n    return getColorTable()[index];\n  }\n  function value(color) {\n    switch (color.type) {\n      case \"named\":\n        return namedColor(color.name);\n      case \"rgb\":\n        return rgbColor(color.rgb);\n      case \"table\":\n        return tableColor(color.index);\n    }\n  }\n  return {\n    value\n  };\n}\n\nfunction tokenizeAnsiWithTheme(theme, fileContents, options) {\n  const colorReplacements = resolveColorReplacements(theme, options);\n  const lines = splitLines(fileContents);\n  const colorPalette = createColorPalette(\n    Object.fromEntries(\n      namedColors.map((name) => [\n        name,\n        theme.colors?.[`terminal.ansi${name[0].toUpperCase()}${name.substring(1)}`]\n      ])\n    )\n  );\n  const parser = createAnsiSequenceParser();\n  return lines.map(\n    (line) => parser.parse(line[0]).map((token) => {\n      let color;\n      let bgColor;\n      if (token.decorations.has(\"reverse\")) {\n        color = token.background ? colorPalette.value(token.background) : theme.bg;\n        bgColor = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n      } else {\n        color = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n        bgColor = token.background ? colorPalette.value(token.background) : void 0;\n      }\n      color = applyColorReplacements(color, colorReplacements);\n      bgColor = applyColorReplacements(bgColor, colorReplacements);\n      if (token.decorations.has(\"dim\"))\n        color = dimColor(color);\n      let fontStyle = FontStyle.None;\n      if (token.decorations.has(\"bold\"))\n        fontStyle |= FontStyle.Bold;\n      if (token.decorations.has(\"italic\"))\n        fontStyle |= FontStyle.Italic;\n      if (token.decorations.has(\"underline\"))\n        fontStyle |= FontStyle.Underline;\n      if (token.decorations.has(\"strikethrough\"))\n        fontStyle |= FontStyle.Strikethrough;\n      return {\n        content: token.value,\n        offset: line[1],\n        // TODO: more accurate offset? might need to fork ansi-sequence-parser\n        color,\n        bgColor,\n        fontStyle\n      };\n    })\n  );\n}\nfunction dimColor(color) {\n  const hexMatch = color.match(/#([0-9a-f]{3})([0-9a-f]{3})?([0-9a-f]{2})?/);\n  if (hexMatch) {\n    if (hexMatch[3]) {\n      const alpha = Math.round(Number.parseInt(hexMatch[3], 16) / 2).toString(16).padStart(2, \"0\");\n      return `#${hexMatch[1]}${hexMatch[2]}${alpha}`;\n    } else if (hexMatch[2]) {\n      return `#${hexMatch[1]}${hexMatch[2]}80`;\n    } else {\n      return `#${Array.from(hexMatch[1]).map((x) => `${x}${x}`).join(\"\")}80`;\n    }\n  }\n  const cssVarMatch = color.match(/var\\((--[\\w-]+-ansi-[\\w-]+)\\)/);\n  if (cssVarMatch)\n    return `var(${cssVarMatch[1]}-dim)`;\n  return color;\n}\n\nfunction codeToTokensBase(internal, code, options = {}) {\n  const {\n    lang = \"text\",\n    theme: themeName = internal.getLoadedThemes()[0]\n  } = options;\n  if (isPlainLang(lang) || isNoneTheme(themeName))\n    return splitLines(code).map((line) => [{ content: line[0], offset: line[1] }]);\n  const { theme, colorMap } = internal.setTheme(themeName);\n  if (lang === \"ansi\")\n    return tokenizeAnsiWithTheme(theme, code, options);\n  const _grammar = internal.getLanguage(lang);\n  if (options.grammarState) {\n    if (options.grammarState.lang !== _grammar.name) {\n      throw new ShikiError$1(`Grammar state language \"${options.grammarState.lang}\" does not match highlight language \"${_grammar.name}\"`);\n    }\n    if (!options.grammarState.themes.includes(theme.name)) {\n      throw new ShikiError$1(`Grammar state themes \"${options.grammarState.themes}\" do not contain highlight theme \"${theme.name}\"`);\n    }\n  }\n  return tokenizeWithTheme(code, _grammar, theme, colorMap, options);\n}\nfunction getLastGrammarState(...args) {\n  if (args.length === 2) {\n    return getLastGrammarStateFromMap(args[1]);\n  }\n  const [internal, code, options = {}] = args;\n  const {\n    lang = \"text\",\n    theme: themeName = internal.getLoadedThemes()[0]\n  } = options;\n  if (isPlainLang(lang) || isNoneTheme(themeName))\n    throw new ShikiError$1(\"Plain language does not have grammar state\");\n  if (lang === \"ansi\")\n    throw new ShikiError$1(\"ANSI language does not have grammar state\");\n  const { theme, colorMap } = internal.setTheme(themeName);\n  const _grammar = internal.getLanguage(lang);\n  return new GrammarState(\n    _tokenizeWithTheme(code, _grammar, theme, colorMap, options).stateStack,\n    _grammar.name,\n    theme.name\n  );\n}\nfunction tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n  const result = _tokenizeWithTheme(code, grammar, theme, colorMap, options);\n  const grammarState = new GrammarState(\n    _tokenizeWithTheme(code, grammar, theme, colorMap, options).stateStack,\n    grammar.name,\n    theme.name\n  );\n  setLastGrammarStateToMap(result.tokens, grammarState);\n  return result.tokens;\n}\nfunction _tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n  const colorReplacements = resolveColorReplacements(theme, options);\n  const {\n    tokenizeMaxLineLength = 0,\n    tokenizeTimeLimit = 500\n  } = options;\n  const lines = splitLines(code);\n  let stateStack = options.grammarState ? getGrammarStack(options.grammarState, theme.name) ?? INITIAL : options.grammarContextCode != null ? _tokenizeWithTheme(\n    options.grammarContextCode,\n    grammar,\n    theme,\n    colorMap,\n    {\n      ...options,\n      grammarState: void 0,\n      grammarContextCode: void 0\n    }\n  ).stateStack : INITIAL;\n  let actual = [];\n  const final = [];\n  for (let i = 0, len = lines.length; i < len; i++) {\n    const [line, lineOffset] = lines[i];\n    if (line === \"\") {\n      actual = [];\n      final.push([]);\n      continue;\n    }\n    if (tokenizeMaxLineLength > 0 && line.length >= tokenizeMaxLineLength) {\n      actual = [];\n      final.push([{\n        content: line,\n        offset: lineOffset,\n        color: \"\",\n        fontStyle: 0\n      }]);\n      continue;\n    }\n    let resultWithScopes;\n    let tokensWithScopes;\n    let tokensWithScopesIndex;\n    if (options.includeExplanation) {\n      resultWithScopes = grammar.tokenizeLine(line, stateStack, tokenizeTimeLimit);\n      tokensWithScopes = resultWithScopes.tokens;\n      tokensWithScopesIndex = 0;\n    }\n    const result = grammar.tokenizeLine2(line, stateStack, tokenizeTimeLimit);\n    const tokensLength = result.tokens.length / 2;\n    for (let j = 0; j < tokensLength; j++) {\n      const startIndex = result.tokens[2 * j];\n      const nextStartIndex = j + 1 < tokensLength ? result.tokens[2 * j + 2] : line.length;\n      if (startIndex === nextStartIndex)\n        continue;\n      const metadata = result.tokens[2 * j + 1];\n      const color = applyColorReplacements(\n        colorMap[EncodedTokenMetadata.getForeground(metadata)],\n        colorReplacements\n      );\n      const fontStyle = EncodedTokenMetadata.getFontStyle(metadata);\n      const token = {\n        content: line.substring(startIndex, nextStartIndex),\n        offset: lineOffset + startIndex,\n        color,\n        fontStyle\n      };\n      if (options.includeExplanation) {\n        const themeSettingsSelectors = [];\n        if (options.includeExplanation !== \"scopeName\") {\n          for (const setting of theme.settings) {\n            let selectors;\n            switch (typeof setting.scope) {\n              case \"string\":\n                selectors = setting.scope.split(/,/).map((scope) => scope.trim());\n                break;\n              case \"object\":\n                selectors = setting.scope;\n                break;\n              default:\n                continue;\n            }\n            themeSettingsSelectors.push({\n              settings: setting,\n              selectors: selectors.map((selector) => selector.split(/ /))\n            });\n          }\n        }\n        token.explanation = [];\n        let offset = 0;\n        while (startIndex + offset < nextStartIndex) {\n          const tokenWithScopes = tokensWithScopes[tokensWithScopesIndex];\n          const tokenWithScopesText = line.substring(\n            tokenWithScopes.startIndex,\n            tokenWithScopes.endIndex\n          );\n          offset += tokenWithScopesText.length;\n          token.explanation.push({\n            content: tokenWithScopesText,\n            scopes: options.includeExplanation === \"scopeName\" ? explainThemeScopesNameOnly(\n              tokenWithScopes.scopes\n            ) : explainThemeScopesFull(\n              themeSettingsSelectors,\n              tokenWithScopes.scopes\n            )\n          });\n          tokensWithScopesIndex += 1;\n        }\n      }\n      actual.push(token);\n    }\n    final.push(actual);\n    actual = [];\n    stateStack = result.ruleStack;\n  }\n  return {\n    tokens: final,\n    stateStack\n  };\n}\nfunction explainThemeScopesNameOnly(scopes) {\n  return scopes.map((scope) => ({ scopeName: scope }));\n}\nfunction explainThemeScopesFull(themeSelectors, scopes) {\n  const result = [];\n  for (let i = 0, len = scopes.length; i < len; i++) {\n    const scope = scopes[i];\n    result[i] = {\n      scopeName: scope,\n      themeMatches: explainThemeScope(themeSelectors, scope, scopes.slice(0, i))\n    };\n  }\n  return result;\n}\nfunction matchesOne(selector, scope) {\n  return selector === scope || scope.substring(0, selector.length) === selector && scope[selector.length] === \".\";\n}\nfunction matches(selectors, scope, parentScopes) {\n  if (!matchesOne(selectors[selectors.length - 1], scope))\n    return false;\n  let selectorParentIndex = selectors.length - 2;\n  let parentIndex = parentScopes.length - 1;\n  while (selectorParentIndex >= 0 && parentIndex >= 0) {\n    if (matchesOne(selectors[selectorParentIndex], parentScopes[parentIndex]))\n      selectorParentIndex -= 1;\n    parentIndex -= 1;\n  }\n  if (selectorParentIndex === -1)\n    return true;\n  return false;\n}\nfunction explainThemeScope(themeSettingsSelectors, scope, parentScopes) {\n  const result = [];\n  for (const { selectors, settings } of themeSettingsSelectors) {\n    for (const selectorPieces of selectors) {\n      if (matches(selectorPieces, scope, parentScopes)) {\n        result.push(settings);\n        break;\n      }\n    }\n  }\n  return result;\n}\n\nfunction codeToTokensWithThemes(internal, code, options) {\n  const themes = Object.entries(options.themes).filter((i) => i[1]).map((i) => ({ color: i[0], theme: i[1] }));\n  const themedTokens = themes.map((t) => {\n    const tokens2 = codeToTokensBase(internal, code, {\n      ...options,\n      theme: t.theme\n    });\n    const state = getLastGrammarStateFromMap(tokens2);\n    const theme = typeof t.theme === \"string\" ? t.theme : t.theme.name;\n    return {\n      tokens: tokens2,\n      state,\n      theme\n    };\n  });\n  const tokens = syncThemesTokenization(\n    ...themedTokens.map((i) => i.tokens)\n  );\n  const mergedTokens = tokens[0].map(\n    (line, lineIdx) => line.map((_token, tokenIdx) => {\n      const mergedToken = {\n        content: _token.content,\n        variants: {},\n        offset: _token.offset\n      };\n      if (\"includeExplanation\" in options && options.includeExplanation) {\n        mergedToken.explanation = _token.explanation;\n      }\n      tokens.forEach((t, themeIdx) => {\n        const {\n          content: _,\n          explanation: __,\n          offset: ___,\n          ...styles\n        } = t[lineIdx][tokenIdx];\n        mergedToken.variants[themes[themeIdx].color] = styles;\n      });\n      return mergedToken;\n    })\n  );\n  const mergedGrammarState = themedTokens[0].state ? new GrammarState(\n    Object.fromEntries(themedTokens.map((s) => [s.theme, s.state?.getInternalStack(s.theme)])),\n    themedTokens[0].state.lang\n  ) : void 0;\n  if (mergedGrammarState)\n    setLastGrammarStateToMap(mergedTokens, mergedGrammarState);\n  return mergedTokens;\n}\nfunction syncThemesTokenization(...themes) {\n  const outThemes = themes.map(() => []);\n  const count = themes.length;\n  for (let i = 0; i < themes[0].length; i++) {\n    const lines = themes.map((t) => t[i]);\n    const outLines = outThemes.map(() => []);\n    outThemes.forEach((t, i2) => t.push(outLines[i2]));\n    const indexes = lines.map(() => 0);\n    const current = lines.map((l) => l[0]);\n    while (current.every((t) => t)) {\n      const minLength = Math.min(...current.map((t) => t.content.length));\n      for (let n = 0; n < count; n++) {\n        const token = current[n];\n        if (token.content.length === minLength) {\n          outLines[n].push(token);\n          indexes[n] += 1;\n          current[n] = lines[n][indexes[n]];\n        } else {\n          outLines[n].push({\n            ...token,\n            content: token.content.slice(0, minLength)\n          });\n          current[n] = {\n            ...token,\n            content: token.content.slice(minLength),\n            offset: token.offset + minLength\n          };\n        }\n      }\n    }\n  }\n  return outThemes;\n}\n\nfunction codeToTokens(internal, code, options) {\n  let bg;\n  let fg;\n  let tokens;\n  let themeName;\n  let rootStyle;\n  let grammarState;\n  if (\"themes\" in options) {\n    const {\n      defaultColor = \"light\",\n      cssVariablePrefix = \"--shiki-\",\n      colorsRendering = \"css-vars\"\n    } = options;\n    const themes = Object.entries(options.themes).filter((i) => i[1]).map((i) => ({ color: i[0], theme: i[1] })).sort((a, b) => a.color === defaultColor ? -1 : b.color === defaultColor ? 1 : 0);\n    if (themes.length === 0)\n      throw new ShikiError$1(\"`themes` option must not be empty\");\n    const themeTokens = codeToTokensWithThemes(\n      internal,\n      code,\n      options\n    );\n    grammarState = getLastGrammarStateFromMap(themeTokens);\n    if (defaultColor && DEFAULT_COLOR_LIGHT_DARK !== defaultColor && !themes.find((t) => t.color === defaultColor))\n      throw new ShikiError$1(`\\`themes\\` option must contain the defaultColor key \\`${defaultColor}\\``);\n    const themeRegs = themes.map((t) => internal.getTheme(t.theme));\n    const themesOrder = themes.map((t) => t.color);\n    tokens = themeTokens.map((line) => line.map((token) => flatTokenVariants(token, themesOrder, cssVariablePrefix, defaultColor, colorsRendering)));\n    if (grammarState)\n      setLastGrammarStateToMap(tokens, grammarState);\n    const themeColorReplacements = themes.map((t) => resolveColorReplacements(t.theme, options));\n    fg = mapThemeColors(themes, themeRegs, themeColorReplacements, cssVariablePrefix, defaultColor, \"fg\", colorsRendering);\n    bg = mapThemeColors(themes, themeRegs, themeColorReplacements, cssVariablePrefix, defaultColor, \"bg\", colorsRendering);\n    themeName = `shiki-themes ${themeRegs.map((t) => t.name).join(\" \")}`;\n    rootStyle = defaultColor ? void 0 : [fg, bg].join(\";\");\n  } else if (\"theme\" in options) {\n    const colorReplacements = resolveColorReplacements(options.theme, options);\n    tokens = codeToTokensBase(\n      internal,\n      code,\n      options\n    );\n    const _theme = internal.getTheme(options.theme);\n    bg = applyColorReplacements(_theme.bg, colorReplacements);\n    fg = applyColorReplacements(_theme.fg, colorReplacements);\n    themeName = _theme.name;\n    grammarState = getLastGrammarStateFromMap(tokens);\n  } else {\n    throw new ShikiError$1(\"Invalid options, either `theme` or `themes` must be provided\");\n  }\n  return {\n    tokens,\n    fg,\n    bg,\n    themeName,\n    rootStyle,\n    grammarState\n  };\n}\nfunction mapThemeColors(themes, themeRegs, themeColorReplacements, cssVariablePrefix, defaultColor, property, colorsRendering) {\n  return themes.map((t, idx) => {\n    const value = applyColorReplacements(themeRegs[idx][property], themeColorReplacements[idx]) || \"inherit\";\n    const cssVar = `${cssVariablePrefix + t.color}${property === \"bg\" ? \"-bg\" : \"\"}:${value}`;\n    if (idx === 0 && defaultColor) {\n      if (defaultColor === DEFAULT_COLOR_LIGHT_DARK && themes.length > 1) {\n        const lightIndex = themes.findIndex((t2) => t2.color === \"light\");\n        const darkIndex = themes.findIndex((t2) => t2.color === \"dark\");\n        if (lightIndex === -1 || darkIndex === -1)\n          throw new ShikiError$1('When using `defaultColor: \"light-dark()\"`, you must provide both `light` and `dark` themes');\n        const lightValue = applyColorReplacements(themeRegs[lightIndex][property], themeColorReplacements[lightIndex]) || \"inherit\";\n        const darkValue = applyColorReplacements(themeRegs[darkIndex][property], themeColorReplacements[darkIndex]) || \"inherit\";\n        return `light-dark(${lightValue}, ${darkValue});${cssVar}`;\n      }\n      return value;\n    }\n    if (colorsRendering === \"css-vars\") {\n      return cssVar;\n    }\n    return null;\n  }).filter((i) => !!i).join(\";\");\n}\n\nfunction codeToHast(internal, code, options, transformerContext = {\n  meta: {},\n  options,\n  codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n  codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options)\n}) {\n  let input = code;\n  for (const transformer of getTransformers(options))\n    input = transformer.preprocess?.call(transformerContext, input, options) || input;\n  let {\n    tokens,\n    fg,\n    bg,\n    themeName,\n    rootStyle,\n    grammarState\n  } = codeToTokens(internal, input, options);\n  const {\n    mergeWhitespaces = true,\n    mergeSameStyleTokens = false\n  } = options;\n  if (mergeWhitespaces === true)\n    tokens = mergeWhitespaceTokens(tokens);\n  else if (mergeWhitespaces === \"never\")\n    tokens = splitWhitespaceTokens(tokens);\n  if (mergeSameStyleTokens) {\n    tokens = mergeAdjacentStyledTokens(tokens);\n  }\n  const contextSource = {\n    ...transformerContext,\n    get source() {\n      return input;\n    }\n  };\n  for (const transformer of getTransformers(options))\n    tokens = transformer.tokens?.call(contextSource, tokens) || tokens;\n  return tokensToHast(\n    tokens,\n    {\n      ...options,\n      fg,\n      bg,\n      themeName,\n      rootStyle\n    },\n    contextSource,\n    grammarState\n  );\n}\nfunction tokensToHast(tokens, options, transformerContext, grammarState = getLastGrammarStateFromMap(tokens)) {\n  const transformers = getTransformers(options);\n  const lines = [];\n  const root = {\n    type: \"root\",\n    children: []\n  };\n  const {\n    structure = \"classic\",\n    tabindex = \"0\"\n  } = options;\n  let preNode = {\n    type: \"element\",\n    tagName: \"pre\",\n    properties: {\n      class: `shiki ${options.themeName || \"\"}`,\n      style: options.rootStyle || `background-color:${options.bg};color:${options.fg}`,\n      ...tabindex !== false && tabindex != null ? {\n        tabindex: tabindex.toString()\n      } : {},\n      ...Object.fromEntries(\n        Array.from(\n          Object.entries(options.meta || {})\n        ).filter(([key]) => !key.startsWith(\"_\"))\n      )\n    },\n    children: []\n  };\n  let codeNode = {\n    type: \"element\",\n    tagName: \"code\",\n    properties: {},\n    children: lines\n  };\n  const lineNodes = [];\n  const context = {\n    ...transformerContext,\n    structure,\n    addClassToHast,\n    get source() {\n      return transformerContext.source;\n    },\n    get tokens() {\n      return tokens;\n    },\n    get options() {\n      return options;\n    },\n    get root() {\n      return root;\n    },\n    get pre() {\n      return preNode;\n    },\n    get code() {\n      return codeNode;\n    },\n    get lines() {\n      return lineNodes;\n    }\n  };\n  tokens.forEach((line, idx) => {\n    if (idx) {\n      if (structure === \"inline\")\n        root.children.push({ type: \"element\", tagName: \"br\", properties: {}, children: [] });\n      else if (structure === \"classic\")\n        lines.push({ type: \"text\", value: \"\\n\" });\n    }\n    let lineNode = {\n      type: \"element\",\n      tagName: \"span\",\n      properties: { class: \"line\" },\n      children: []\n    };\n    let col = 0;\n    for (const token of line) {\n      let tokenNode = {\n        type: \"element\",\n        tagName: \"span\",\n        properties: {\n          ...token.htmlAttrs\n        },\n        children: [{ type: \"text\", value: token.content }]\n      };\n      const style = stringifyTokenStyle(token.htmlStyle || getTokenStyleObject(token));\n      if (style)\n        tokenNode.properties.style = style;\n      for (const transformer of transformers)\n        tokenNode = transformer?.span?.call(context, tokenNode, idx + 1, col, lineNode, token) || tokenNode;\n      if (structure === \"inline\")\n        root.children.push(tokenNode);\n      else if (structure === \"classic\")\n        lineNode.children.push(tokenNode);\n      col += token.content.length;\n    }\n    if (structure === \"classic\") {\n      for (const transformer of transformers)\n        lineNode = transformer?.line?.call(context, lineNode, idx + 1) || lineNode;\n      lineNodes.push(lineNode);\n      lines.push(lineNode);\n    }\n  });\n  if (structure === \"classic\") {\n    for (const transformer of transformers)\n      codeNode = transformer?.code?.call(context, codeNode) || codeNode;\n    preNode.children.push(codeNode);\n    for (const transformer of transformers)\n      preNode = transformer?.pre?.call(context, preNode) || preNode;\n    root.children.push(preNode);\n  }\n  let result = root;\n  for (const transformer of transformers)\n    result = transformer?.root?.call(context, result) || result;\n  if (grammarState)\n    setLastGrammarStateToMap(result, grammarState);\n  return result;\n}\nfunction mergeWhitespaceTokens(tokens) {\n  return tokens.map((line) => {\n    const newLine = [];\n    let carryOnContent = \"\";\n    let firstOffset = 0;\n    line.forEach((token, idx) => {\n      const isDecorated = token.fontStyle && (token.fontStyle & FontStyle.Underline || token.fontStyle & FontStyle.Strikethrough);\n      const couldMerge = !isDecorated;\n      if (couldMerge && token.content.match(/^\\s+$/) && line[idx + 1]) {\n        if (!firstOffset)\n          firstOffset = token.offset;\n        carryOnContent += token.content;\n      } else {\n        if (carryOnContent) {\n          if (couldMerge) {\n            newLine.push({\n              ...token,\n              offset: firstOffset,\n              content: carryOnContent + token.content\n            });\n          } else {\n            newLine.push(\n              {\n                content: carryOnContent,\n                offset: firstOffset\n              },\n              token\n            );\n          }\n          firstOffset = 0;\n          carryOnContent = \"\";\n        } else {\n          newLine.push(token);\n        }\n      }\n    });\n    return newLine;\n  });\n}\nfunction splitWhitespaceTokens(tokens) {\n  return tokens.map((line) => {\n    return line.flatMap((token) => {\n      if (token.content.match(/^\\s+$/))\n        return token;\n      const match = token.content.match(/^(\\s*)(.*?)(\\s*)$/);\n      if (!match)\n        return token;\n      const [, leading, content, trailing] = match;\n      if (!leading && !trailing)\n        return token;\n      const expanded = [{\n        ...token,\n        offset: token.offset + leading.length,\n        content\n      }];\n      if (leading) {\n        expanded.unshift({\n          content: leading,\n          offset: token.offset\n        });\n      }\n      if (trailing) {\n        expanded.push({\n          content: trailing,\n          offset: token.offset + leading.length + content.length\n        });\n      }\n      return expanded;\n    });\n  });\n}\nfunction mergeAdjacentStyledTokens(tokens) {\n  return tokens.map((line) => {\n    const newLine = [];\n    for (const token of line) {\n      if (newLine.length === 0) {\n        newLine.push({ ...token });\n        continue;\n      }\n      const prevToken = newLine[newLine.length - 1];\n      const prevStyle = stringifyTokenStyle(prevToken.htmlStyle || getTokenStyleObject(prevToken));\n      const currentStyle = stringifyTokenStyle(token.htmlStyle || getTokenStyleObject(token));\n      const isPrevDecorated = prevToken.fontStyle && (prevToken.fontStyle & FontStyle.Underline || prevToken.fontStyle & FontStyle.Strikethrough);\n      const isDecorated = token.fontStyle && (token.fontStyle & FontStyle.Underline || token.fontStyle & FontStyle.Strikethrough);\n      if (!isPrevDecorated && !isDecorated && prevStyle === currentStyle) {\n        prevToken.content += token.content;\n      } else {\n        newLine.push({ ...token });\n      }\n    }\n    return newLine;\n  });\n}\n\nconst hastToHtml = toHtml;\nfunction codeToHtml(internal, code, options) {\n  const context = {\n    meta: {},\n    options,\n    codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n    codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options)\n  };\n  let result = hastToHtml(codeToHast(internal, code, options, context));\n  for (const transformer of getTransformers(options))\n    result = transformer.postprocess?.call(context, result, options) || result;\n  return result;\n}\n\nconst VSCODE_FALLBACK_EDITOR_FG = { light: \"#333333\", dark: \"#bbbbbb\" };\nconst VSCODE_FALLBACK_EDITOR_BG = { light: \"#fffffe\", dark: \"#1e1e1e\" };\nconst RESOLVED_KEY = \"__shiki_resolved\";\nfunction normalizeTheme(rawTheme) {\n  if (rawTheme?.[RESOLVED_KEY])\n    return rawTheme;\n  const theme = {\n    ...rawTheme\n  };\n  if (theme.tokenColors && !theme.settings) {\n    theme.settings = theme.tokenColors;\n    delete theme.tokenColors;\n  }\n  theme.type ||= \"dark\";\n  theme.colorReplacements = { ...theme.colorReplacements };\n  theme.settings ||= [];\n  let { bg, fg } = theme;\n  if (!bg || !fg) {\n    const globalSetting = theme.settings ? theme.settings.find((s) => !s.name && !s.scope) : void 0;\n    if (globalSetting?.settings?.foreground)\n      fg = globalSetting.settings.foreground;\n    if (globalSetting?.settings?.background)\n      bg = globalSetting.settings.background;\n    if (!fg && theme?.colors?.[\"editor.foreground\"])\n      fg = theme.colors[\"editor.foreground\"];\n    if (!bg && theme?.colors?.[\"editor.background\"])\n      bg = theme.colors[\"editor.background\"];\n    if (!fg)\n      fg = theme.type === \"light\" ? VSCODE_FALLBACK_EDITOR_FG.light : VSCODE_FALLBACK_EDITOR_FG.dark;\n    if (!bg)\n      bg = theme.type === \"light\" ? VSCODE_FALLBACK_EDITOR_BG.light : VSCODE_FALLBACK_EDITOR_BG.dark;\n    theme.fg = fg;\n    theme.bg = bg;\n  }\n  if (!(theme.settings[0] && theme.settings[0].settings && !theme.settings[0].scope)) {\n    theme.settings.unshift({\n      settings: {\n        foreground: theme.fg,\n        background: theme.bg\n      }\n    });\n  }\n  let replacementCount = 0;\n  const replacementMap = /* @__PURE__ */ new Map();\n  function getReplacementColor(value) {\n    if (replacementMap.has(value))\n      return replacementMap.get(value);\n    replacementCount += 1;\n    const hex = `#${replacementCount.toString(16).padStart(8, \"0\").toLowerCase()}`;\n    if (theme.colorReplacements?.[`#${hex}`])\n      return getReplacementColor(value);\n    replacementMap.set(value, hex);\n    return hex;\n  }\n  theme.settings = theme.settings.map((setting) => {\n    const replaceFg = setting.settings?.foreground && !setting.settings.foreground.startsWith(\"#\");\n    const replaceBg = setting.settings?.background && !setting.settings.background.startsWith(\"#\");\n    if (!replaceFg && !replaceBg)\n      return setting;\n    const clone = {\n      ...setting,\n      settings: {\n        ...setting.settings\n      }\n    };\n    if (replaceFg) {\n      const replacement = getReplacementColor(setting.settings.foreground);\n      theme.colorReplacements[replacement] = setting.settings.foreground;\n      clone.settings.foreground = replacement;\n    }\n    if (replaceBg) {\n      const replacement = getReplacementColor(setting.settings.background);\n      theme.colorReplacements[replacement] = setting.settings.background;\n      clone.settings.background = replacement;\n    }\n    return clone;\n  });\n  for (const key of Object.keys(theme.colors || {})) {\n    if (key === \"editor.foreground\" || key === \"editor.background\" || key.startsWith(\"terminal.ansi\")) {\n      if (!theme.colors[key]?.startsWith(\"#\")) {\n        const replacement = getReplacementColor(theme.colors[key]);\n        theme.colorReplacements[replacement] = theme.colors[key];\n        theme.colors[key] = replacement;\n      }\n    }\n  }\n  Object.defineProperty(theme, RESOLVED_KEY, {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n  return theme;\n}\n\nasync function resolveLangs(langs) {\n  return Array.from(new Set((await Promise.all(\n    langs.filter((l) => !isSpecialLang(l)).map(async (lang) => await normalizeGetter(lang).then((r) => Array.isArray(r) ? r : [r]))\n  )).flat()));\n}\nasync function resolveThemes(themes) {\n  const resolved = await Promise.all(\n    themes.map(\n      async (theme) => isSpecialTheme(theme) ? null : normalizeTheme(await normalizeGetter(theme))\n    )\n  );\n  return resolved.filter((i) => !!i);\n}\n\nlet _emitDeprecation = 3;\nlet _emitError = false;\nfunction enableDeprecationWarnings(emitDeprecation = true, emitError = false) {\n  _emitDeprecation = emitDeprecation;\n  _emitError = emitError;\n}\nfunction warnDeprecated(message, version = 3) {\n  if (!_emitDeprecation)\n    return;\n  if (typeof _emitDeprecation === \"number\" && version > _emitDeprecation)\n    return;\n  if (_emitError) {\n    throw new Error(`[SHIKI DEPRECATE]: ${message}`);\n  } else {\n    console.trace(`[SHIKI DEPRECATE]: ${message}`);\n  }\n}\n\nclass ShikiError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ShikiError\";\n  }\n}\n\nclass Registry extends Registry$1 {\n  constructor(_resolver, _themes, _langs, _alias = {}) {\n    super(_resolver);\n    this._resolver = _resolver;\n    this._themes = _themes;\n    this._langs = _langs;\n    this._alias = _alias;\n    this._themes.map((t) => this.loadTheme(t));\n    this.loadLanguages(this._langs);\n  }\n  _resolvedThemes = /* @__PURE__ */ new Map();\n  _resolvedGrammars = /* @__PURE__ */ new Map();\n  _langMap = /* @__PURE__ */ new Map();\n  _langGraph = /* @__PURE__ */ new Map();\n  _textmateThemeCache = /* @__PURE__ */ new WeakMap();\n  _loadedThemesCache = null;\n  _loadedLanguagesCache = null;\n  getTheme(theme) {\n    if (typeof theme === \"string\")\n      return this._resolvedThemes.get(theme);\n    else\n      return this.loadTheme(theme);\n  }\n  loadTheme(theme) {\n    const _theme = normalizeTheme(theme);\n    if (_theme.name) {\n      this._resolvedThemes.set(_theme.name, _theme);\n      this._loadedThemesCache = null;\n    }\n    return _theme;\n  }\n  getLoadedThemes() {\n    if (!this._loadedThemesCache)\n      this._loadedThemesCache = [...this._resolvedThemes.keys()];\n    return this._loadedThemesCache;\n  }\n  // Override and re-implement this method to cache the textmate themes as `TextMateTheme.createFromRawTheme`\n  // is expensive. Themes can switch often especially for dual-theme support.\n  //\n  // The parent class also accepts `colorMap` as the second parameter, but since we don't use that,\n  // we omit here so it's easier to cache the themes.\n  setTheme(theme) {\n    let textmateTheme = this._textmateThemeCache.get(theme);\n    if (!textmateTheme) {\n      textmateTheme = Theme.createFromRawTheme(theme);\n      this._textmateThemeCache.set(theme, textmateTheme);\n    }\n    this._syncRegistry.setTheme(textmateTheme);\n  }\n  getGrammar(name) {\n    if (this._alias[name]) {\n      const resolved = /* @__PURE__ */ new Set([name]);\n      while (this._alias[name]) {\n        name = this._alias[name];\n        if (resolved.has(name))\n          throw new ShikiError(`Circular alias \\`${Array.from(resolved).join(\" -> \")} -> ${name}\\``);\n        resolved.add(name);\n      }\n    }\n    return this._resolvedGrammars.get(name);\n  }\n  loadLanguage(lang) {\n    if (this.getGrammar(lang.name))\n      return;\n    const embeddedLazilyBy = new Set(\n      [...this._langMap.values()].filter((i) => i.embeddedLangsLazy?.includes(lang.name))\n    );\n    this._resolver.addLanguage(lang);\n    const grammarConfig = {\n      balancedBracketSelectors: lang.balancedBracketSelectors || [\"*\"],\n      unbalancedBracketSelectors: lang.unbalancedBracketSelectors || []\n    };\n    this._syncRegistry._rawGrammars.set(lang.scopeName, lang);\n    const g = this.loadGrammarWithConfiguration(lang.scopeName, 1, grammarConfig);\n    g.name = lang.name;\n    this._resolvedGrammars.set(lang.name, g);\n    if (lang.aliases) {\n      lang.aliases.forEach((alias) => {\n        this._alias[alias] = lang.name;\n      });\n    }\n    this._loadedLanguagesCache = null;\n    if (embeddedLazilyBy.size) {\n      for (const e of embeddedLazilyBy) {\n        this._resolvedGrammars.delete(e.name);\n        this._loadedLanguagesCache = null;\n        this._syncRegistry?._injectionGrammars?.delete(e.scopeName);\n        this._syncRegistry?._grammars?.delete(e.scopeName);\n        this.loadLanguage(this._langMap.get(e.name));\n      }\n    }\n  }\n  dispose() {\n    super.dispose();\n    this._resolvedThemes.clear();\n    this._resolvedGrammars.clear();\n    this._langMap.clear();\n    this._langGraph.clear();\n    this._loadedThemesCache = null;\n  }\n  loadLanguages(langs) {\n    for (const lang of langs)\n      this.resolveEmbeddedLanguages(lang);\n    const langsGraphArray = Array.from(this._langGraph.entries());\n    const missingLangs = langsGraphArray.filter(([_, lang]) => !lang);\n    if (missingLangs.length) {\n      const dependents = langsGraphArray.filter(([_, lang]) => lang && lang.embeddedLangs?.some((l) => missingLangs.map(([name]) => name).includes(l))).filter((lang) => !missingLangs.includes(lang));\n      throw new ShikiError(`Missing languages ${missingLangs.map(([name]) => `\\`${name}\\``).join(\", \")}, required by ${dependents.map(([name]) => `\\`${name}\\``).join(\", \")}`);\n    }\n    for (const [_, lang] of langsGraphArray)\n      this._resolver.addLanguage(lang);\n    for (const [_, lang] of langsGraphArray)\n      this.loadLanguage(lang);\n  }\n  getLoadedLanguages() {\n    if (!this._loadedLanguagesCache) {\n      this._loadedLanguagesCache = [\n        .../* @__PURE__ */ new Set([...this._resolvedGrammars.keys(), ...Object.keys(this._alias)])\n      ];\n    }\n    return this._loadedLanguagesCache;\n  }\n  resolveEmbeddedLanguages(lang) {\n    this._langMap.set(lang.name, lang);\n    this._langGraph.set(lang.name, lang);\n    if (lang.embeddedLangs) {\n      for (const embeddedLang of lang.embeddedLangs)\n        this._langGraph.set(embeddedLang, this._langMap.get(embeddedLang));\n    }\n  }\n}\n\nclass Resolver {\n  _langs = /* @__PURE__ */ new Map();\n  _scopeToLang = /* @__PURE__ */ new Map();\n  _injections = /* @__PURE__ */ new Map();\n  _onigLib;\n  constructor(engine, langs) {\n    this._onigLib = {\n      createOnigScanner: (patterns) => engine.createScanner(patterns),\n      createOnigString: (s) => engine.createString(s)\n    };\n    langs.forEach((i) => this.addLanguage(i));\n  }\n  get onigLib() {\n    return this._onigLib;\n  }\n  getLangRegistration(langIdOrAlias) {\n    return this._langs.get(langIdOrAlias);\n  }\n  loadGrammar(scopeName) {\n    return this._scopeToLang.get(scopeName);\n  }\n  addLanguage(l) {\n    this._langs.set(l.name, l);\n    if (l.aliases) {\n      l.aliases.forEach((a) => {\n        this._langs.set(a, l);\n      });\n    }\n    this._scopeToLang.set(l.scopeName, l);\n    if (l.injectTo) {\n      l.injectTo.forEach((i) => {\n        if (!this._injections.get(i))\n          this._injections.set(i, []);\n        this._injections.get(i).push(l.scopeName);\n      });\n    }\n  }\n  getInjections(scopeName) {\n    const scopeParts = scopeName.split(\".\");\n    let injections = [];\n    for (let i = 1; i <= scopeParts.length; i++) {\n      const subScopeName = scopeParts.slice(0, i).join(\".\");\n      injections = [...injections, ...this._injections.get(subScopeName) || []];\n    }\n    return injections;\n  }\n}\n\nlet instancesCount = 0;\nfunction createShikiInternalSync(options) {\n  instancesCount += 1;\n  if (options.warnings !== false && instancesCount >= 10 && instancesCount % 10 === 0)\n    console.warn(`[Shiki] ${instancesCount} instances have been created. Shiki is supposed to be used as a singleton, consider refactoring your code to cache your highlighter instance; Or call \\`highlighter.dispose()\\` to release unused instances.`);\n  let isDisposed = false;\n  if (!options.engine)\n    throw new ShikiError(\"`engine` option is required for synchronous mode\");\n  const langs = (options.langs || []).flat(1);\n  const themes = (options.themes || []).flat(1).map(normalizeTheme);\n  const resolver = new Resolver(options.engine, langs);\n  const _registry = new Registry(resolver, themes, langs, options.langAlias);\n  let _lastTheme;\n  function getLanguage(name) {\n    ensureNotDisposed();\n    const _lang = _registry.getGrammar(typeof name === \"string\" ? name : name.name);\n    if (!_lang)\n      throw new ShikiError(`Language \\`${name}\\` not found, you may need to load it first`);\n    return _lang;\n  }\n  function getTheme(name) {\n    if (name === \"none\")\n      return { bg: \"\", fg: \"\", name: \"none\", settings: [], type: \"dark\" };\n    ensureNotDisposed();\n    const _theme = _registry.getTheme(name);\n    if (!_theme)\n      throw new ShikiError(`Theme \\`${name}\\` not found, you may need to load it first`);\n    return _theme;\n  }\n  function setTheme(name) {\n    ensureNotDisposed();\n    const theme = getTheme(name);\n    if (_lastTheme !== name) {\n      _registry.setTheme(theme);\n      _lastTheme = name;\n    }\n    const colorMap = _registry.getColorMap();\n    return {\n      theme,\n      colorMap\n    };\n  }\n  function getLoadedThemes() {\n    ensureNotDisposed();\n    return _registry.getLoadedThemes();\n  }\n  function getLoadedLanguages() {\n    ensureNotDisposed();\n    return _registry.getLoadedLanguages();\n  }\n  function loadLanguageSync(...langs2) {\n    ensureNotDisposed();\n    _registry.loadLanguages(langs2.flat(1));\n  }\n  async function loadLanguage(...langs2) {\n    return loadLanguageSync(await resolveLangs(langs2));\n  }\n  function loadThemeSync(...themes2) {\n    ensureNotDisposed();\n    for (const theme of themes2.flat(1)) {\n      _registry.loadTheme(theme);\n    }\n  }\n  async function loadTheme(...themes2) {\n    ensureNotDisposed();\n    return loadThemeSync(await resolveThemes(themes2));\n  }\n  function ensureNotDisposed() {\n    if (isDisposed)\n      throw new ShikiError(\"Shiki instance has been disposed\");\n  }\n  function dispose() {\n    if (isDisposed)\n      return;\n    isDisposed = true;\n    _registry.dispose();\n    instancesCount -= 1;\n  }\n  return {\n    setTheme,\n    getTheme,\n    getLanguage,\n    getLoadedThemes,\n    getLoadedLanguages,\n    loadLanguage,\n    loadLanguageSync,\n    loadTheme,\n    loadThemeSync,\n    dispose,\n    [Symbol.dispose]: dispose\n  };\n}\n\nasync function createShikiInternal(options) {\n  if (!options.engine) {\n    warnDeprecated(\"`engine` option is required. Use `createOnigurumaEngine` or `createJavaScriptRegexEngine` to create an engine.\");\n  }\n  const [\n    themes,\n    langs,\n    engine\n  ] = await Promise.all([\n    resolveThemes(options.themes || []),\n    resolveLangs(options.langs || []),\n    options.engine\n  ]);\n  return createShikiInternalSync({\n    ...options,\n    themes,\n    langs,\n    engine\n  });\n}\n\nasync function createHighlighterCore(options) {\n  const internal = await createShikiInternal(options);\n  return {\n    getLastGrammarState: (...args) => getLastGrammarState(internal, ...args),\n    codeToTokensBase: (code, options2) => codeToTokensBase(internal, code, options2),\n    codeToTokensWithThemes: (code, options2) => codeToTokensWithThemes(internal, code, options2),\n    codeToTokens: (code, options2) => codeToTokens(internal, code, options2),\n    codeToHast: (code, options2) => codeToHast(internal, code, options2),\n    codeToHtml: (code, options2) => codeToHtml(internal, code, options2),\n    getBundledLanguages: () => ({}),\n    getBundledThemes: () => ({}),\n    ...internal,\n    getInternalContext: () => internal\n  };\n}\nfunction createHighlighterCoreSync(options) {\n  const internal = createShikiInternalSync(options);\n  return {\n    getLastGrammarState: (...args) => getLastGrammarState(internal, ...args),\n    codeToTokensBase: (code, options2) => codeToTokensBase(internal, code, options2),\n    codeToTokensWithThemes: (code, options2) => codeToTokensWithThemes(internal, code, options2),\n    codeToTokens: (code, options2) => codeToTokens(internal, code, options2),\n    codeToHast: (code, options2) => codeToHast(internal, code, options2),\n    codeToHtml: (code, options2) => codeToHtml(internal, code, options2),\n    getBundledLanguages: () => ({}),\n    getBundledThemes: () => ({}),\n    ...internal,\n    getInternalContext: () => internal\n  };\n}\nfunction makeSingletonHighlighterCore(createHighlighter) {\n  let _shiki;\n  async function getSingletonHighlighterCore2(options) {\n    if (!_shiki) {\n      _shiki = createHighlighter({\n        ...options,\n        themes: options.themes || [],\n        langs: options.langs || []\n      });\n      return _shiki;\n    } else {\n      const s = await _shiki;\n      await Promise.all([\n        s.loadTheme(...options.themes || []),\n        s.loadLanguage(...options.langs || [])\n      ]);\n      return s;\n    }\n  }\n  return getSingletonHighlighterCore2;\n}\nconst getSingletonHighlighterCore = /* @__PURE__ */ makeSingletonHighlighterCore(createHighlighterCore);\n\nfunction createdBundledHighlighter(options) {\n  const bundledLanguages = options.langs;\n  const bundledThemes = options.themes;\n  const engine = options.engine;\n  async function createHighlighter(options2) {\n    function resolveLang(lang) {\n      if (typeof lang === \"string\") {\n        if (isSpecialLang(lang))\n          return [];\n        lang = options2.langAlias?.[lang] || lang;\n        const bundle = bundledLanguages[lang];\n        if (!bundle)\n          throw new ShikiError$1(`Language \\`${lang}\\` is not included in this bundle. You may want to load it from external source.`);\n        return bundle;\n      }\n      return lang;\n    }\n    function resolveTheme(theme) {\n      if (isSpecialTheme(theme))\n        return \"none\";\n      if (typeof theme === \"string\") {\n        const bundle = bundledThemes[theme];\n        if (!bundle)\n          throw new ShikiError$1(`Theme \\`${theme}\\` is not included in this bundle. You may want to load it from external source.`);\n        return bundle;\n      }\n      return theme;\n    }\n    const _themes = (options2.themes ?? []).map((i) => resolveTheme(i));\n    const langs = (options2.langs ?? []).map((i) => resolveLang(i));\n    const core = await createHighlighterCore({\n      engine: options2.engine ?? engine(),\n      ...options2,\n      themes: _themes,\n      langs\n    });\n    return {\n      ...core,\n      loadLanguage(...langs2) {\n        return core.loadLanguage(...langs2.map(resolveLang));\n      },\n      loadTheme(...themes) {\n        return core.loadTheme(...themes.map(resolveTheme));\n      },\n      getBundledLanguages() {\n        return bundledLanguages;\n      },\n      getBundledThemes() {\n        return bundledThemes;\n      }\n    };\n  }\n  return createHighlighter;\n}\nfunction makeSingletonHighlighter(createHighlighter) {\n  let _shiki;\n  async function getSingletonHighlighter(options = {}) {\n    if (!_shiki) {\n      _shiki = createHighlighter({\n        ...options,\n        themes: options.themes || [],\n        langs: options.langs || []\n      });\n      return _shiki;\n    } else {\n      const s = await _shiki;\n      await Promise.all([\n        s.loadTheme(...options.themes || []),\n        s.loadLanguage(...options.langs || [])\n      ]);\n      return s;\n    }\n  }\n  return getSingletonHighlighter;\n}\nfunction createSingletonShorthands(createHighlighter, config) {\n  const getSingletonHighlighter = makeSingletonHighlighter(createHighlighter);\n  async function get(code, options) {\n    const shiki = await getSingletonHighlighter({\n      langs: [options.lang],\n      themes: \"theme\" in options ? [options.theme] : Object.values(options.themes)\n    });\n    const langs = await config?.guessEmbeddedLanguages?.(code, options.lang, shiki);\n    if (langs) {\n      await shiki.loadLanguage(...langs);\n    }\n    return shiki;\n  }\n  return {\n    getSingletonHighlighter(options) {\n      return getSingletonHighlighter(options);\n    },\n    async codeToHtml(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToHtml(code, options);\n    },\n    async codeToHast(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToHast(code, options);\n    },\n    async codeToTokens(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToTokens(code, options);\n    },\n    async codeToTokensBase(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToTokensBase(code, options);\n    },\n    async codeToTokensWithThemes(code, options) {\n      const shiki = await get(code, options);\n      return shiki.codeToTokensWithThemes(code, options);\n    },\n    async getLastGrammarState(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: [options.theme]\n      });\n      return shiki.getLastGrammarState(code, options);\n    }\n  };\n}\n\nfunction createCssVariablesTheme(options = {}) {\n  const {\n    name = \"css-variables\",\n    variablePrefix = \"--shiki-\",\n    fontStyle = true\n  } = options;\n  const variable = (name2) => {\n    if (options.variableDefaults?.[name2])\n      return `var(${variablePrefix}${name2}, ${options.variableDefaults[name2]})`;\n    return `var(${variablePrefix}${name2})`;\n  };\n  const theme = {\n    name,\n    type: \"dark\",\n    colors: {\n      \"editor.foreground\": variable(\"foreground\"),\n      \"editor.background\": variable(\"background\"),\n      \"terminal.ansiBlack\": variable(\"ansi-black\"),\n      \"terminal.ansiRed\": variable(\"ansi-red\"),\n      \"terminal.ansiGreen\": variable(\"ansi-green\"),\n      \"terminal.ansiYellow\": variable(\"ansi-yellow\"),\n      \"terminal.ansiBlue\": variable(\"ansi-blue\"),\n      \"terminal.ansiMagenta\": variable(\"ansi-magenta\"),\n      \"terminal.ansiCyan\": variable(\"ansi-cyan\"),\n      \"terminal.ansiWhite\": variable(\"ansi-white\"),\n      \"terminal.ansiBrightBlack\": variable(\"ansi-bright-black\"),\n      \"terminal.ansiBrightRed\": variable(\"ansi-bright-red\"),\n      \"terminal.ansiBrightGreen\": variable(\"ansi-bright-green\"),\n      \"terminal.ansiBrightYellow\": variable(\"ansi-bright-yellow\"),\n      \"terminal.ansiBrightBlue\": variable(\"ansi-bright-blue\"),\n      \"terminal.ansiBrightMagenta\": variable(\"ansi-bright-magenta\"),\n      \"terminal.ansiBrightCyan\": variable(\"ansi-bright-cyan\"),\n      \"terminal.ansiBrightWhite\": variable(\"ansi-bright-white\")\n    },\n    tokenColors: [\n      {\n        scope: [\n          \"keyword.operator.accessor\",\n          \"meta.group.braces.round.function.arguments\",\n          \"meta.template.expression\",\n          \"markup.fenced_code meta.embedded.block\"\n        ],\n        settings: {\n          foreground: variable(\"foreground\")\n        }\n      },\n      {\n        scope: \"emphasis\",\n        settings: {\n          fontStyle: \"italic\"\n        }\n      },\n      {\n        scope: [\"strong\", \"markup.heading.markdown\", \"markup.bold.markdown\"],\n        settings: {\n          fontStyle: \"bold\"\n        }\n      },\n      {\n        scope: [\"markup.italic.markdown\"],\n        settings: {\n          fontStyle: \"italic\"\n        }\n      },\n      {\n        scope: \"meta.link.inline.markdown\",\n        settings: {\n          fontStyle: \"underline\",\n          foreground: variable(\"token-link\")\n        }\n      },\n      {\n        scope: [\"string\", \"markup.fenced_code\", \"markup.inline\"],\n        settings: {\n          foreground: variable(\"token-string\")\n        }\n      },\n      {\n        scope: [\"comment\", \"string.quoted.docstring.multi\"],\n        settings: {\n          foreground: variable(\"token-comment\")\n        }\n      },\n      {\n        scope: [\n          \"constant.numeric\",\n          \"constant.language\",\n          \"constant.other.placeholder\",\n          \"constant.character.format.placeholder\",\n          \"variable.language.this\",\n          \"variable.other.object\",\n          \"variable.other.class\",\n          \"variable.other.constant\",\n          \"meta.property-name\",\n          \"meta.property-value\",\n          \"support\"\n        ],\n        settings: {\n          foreground: variable(\"token-constant\")\n        }\n      },\n      {\n        scope: [\n          \"keyword\",\n          \"storage.modifier\",\n          \"storage.type\",\n          \"storage.control.clojure\",\n          \"entity.name.function.clojure\",\n          \"entity.name.tag.yaml\",\n          \"support.function.node\",\n          \"support.type.property-name.json\",\n          \"punctuation.separator.key-value\",\n          \"punctuation.definition.template-expression\"\n        ],\n        settings: {\n          foreground: variable(\"token-keyword\")\n        }\n      },\n      {\n        scope: \"variable.parameter.function\",\n        settings: {\n          foreground: variable(\"token-parameter\")\n        }\n      },\n      {\n        scope: [\n          \"support.function\",\n          \"entity.name.type\",\n          \"entity.other.inherited-class\",\n          \"meta.function-call\",\n          \"meta.instance.constructor\",\n          \"entity.other.attribute-name\",\n          \"entity.name.function\",\n          \"constant.keyword.clojure\"\n        ],\n        settings: {\n          foreground: variable(\"token-function\")\n        }\n      },\n      {\n        scope: [\n          \"entity.name.tag\",\n          \"string.quoted\",\n          \"string.regexp\",\n          \"string.interpolated\",\n          \"string.template\",\n          \"string.unquoted.plain.out.yaml\",\n          \"keyword.other.template\"\n        ],\n        settings: {\n          foreground: variable(\"token-string-expression\")\n        }\n      },\n      {\n        scope: [\n          \"punctuation.definition.arguments\",\n          \"punctuation.definition.dict\",\n          \"punctuation.separator\",\n          \"meta.function-call.arguments\"\n        ],\n        settings: {\n          foreground: variable(\"token-punctuation\")\n        }\n      },\n      {\n        // [Custom] Markdown links\n        scope: [\n          \"markup.underline.link\",\n          \"punctuation.definition.metadata.markdown\"\n        ],\n        settings: {\n          foreground: variable(\"token-link\")\n        }\n      },\n      {\n        // [Custom] Markdown list\n        scope: [\"beginning.punctuation.definition.list.markdown\"],\n        settings: {\n          foreground: variable(\"token-string\")\n        }\n      },\n      {\n        // [Custom] Markdown punctuation definition brackets\n        scope: [\n          \"punctuation.definition.string.begin.markdown\",\n          \"punctuation.definition.string.end.markdown\",\n          \"string.other.link.title.markdown\",\n          \"string.other.link.description.markdown\"\n        ],\n        settings: {\n          foreground: variable(\"token-keyword\")\n        }\n      },\n      {\n        // [Custom] Diff\n        scope: [\n          \"markup.inserted\",\n          \"meta.diff.header.to-file\",\n          \"punctuation.definition.inserted\"\n        ],\n        settings: {\n          foreground: variable(\"token-inserted\")\n        }\n      },\n      {\n        scope: [\n          \"markup.deleted\",\n          \"meta.diff.header.from-file\",\n          \"punctuation.definition.deleted\"\n        ],\n        settings: {\n          foreground: variable(\"token-deleted\")\n        }\n      },\n      {\n        scope: [\n          \"markup.changed\",\n          \"punctuation.definition.changed\"\n        ],\n        settings: {\n          foreground: variable(\"token-changed\")\n        }\n      }\n    ]\n  };\n  if (!fontStyle) {\n    theme.tokenColors = theme.tokenColors?.map((tokenColor) => {\n      if (tokenColor.settings?.fontStyle)\n        delete tokenColor.settings.fontStyle;\n      return tokenColor;\n    });\n  }\n  return theme;\n}\n\nexport { addClassToHast, applyColorReplacements, codeToHast, codeToHtml, codeToTokens, codeToTokensBase, codeToTokensWithThemes, createCssVariablesTheme, createHighlighterCore, createHighlighterCoreSync, createPositionConverter, createShikiInternal, createShikiInternalSync, createSingletonShorthands, createdBundledHighlighter, enableDeprecationWarnings, flatTokenVariants, getSingletonHighlighterCore, getTokenStyleObject, guessEmbeddedLanguages, hastToHtml, isNoneTheme, isPlainLang, isSpecialLang, isSpecialTheme, makeSingletonHighlighter, makeSingletonHighlighterCore, normalizeGetter, normalizeTheme, resolveColorReplacements, splitLines, splitToken, splitTokens, stringifyTokenStyle, toArray, tokenizeAnsiWithTheme, tokenizeWithTheme, tokensToHast, transformerDecorations, warnDeprecated };\n"],"names":[],"mappings":"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8BAA8B,SAAS;YACvC,2BAA2B,SAAS;YACpC,4BAA4B,SAAS;QACvC;QACA,aAAa;YACX;gBACE,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;gBACD,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,OAAO;gBACP,UAAU;oBACR,WAAW;gBACb;YACF;YACA;gBACE,OAAO;oBAAC;oBAAU;oBAA2B;iBAAuB;gBACpE,UAAU;oBACR,WAAW;gBACb;YACF;YACA;gBACE,OAAO;oBAAC;iBAAyB;gBACjC,UAAU;oBACR,WAAW;gBACb;YACF;YACA;gBACE,OAAO;gBACP,UAAU;oBACR,WAAW;oBACX,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,OAAO;oBAAC;oBAAU;oBAAsB;iBAAgB;gBACxD,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,OAAO;oBAAC;oBAAW;iBAAgC;gBACnD,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,OAAO;gBACP,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,OAAO;oBACL;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;iBACD;gBACD,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;gBACD,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,0BAA0B;gBAC1B,OAAO;oBACL;oBACA;iBACD;gBACD,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,yBAAyB;gBACzB,OAAO;oBAAC;iBAAiD;gBACzD,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,oDAAoD;gBACpD,OAAO;oBACL;oBACA;oBACA;oBACA;iBACD;gBACD,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,gBAAgB;gBAChB,OAAO;oBACL;oBACA;oBACA;iBACD;gBACD,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,OAAO;oBACL;oBACA;oBACA;iBACD;gBACD,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;YACA;gBACE,OAAO;oBACL;oBACA;iBACD;gBACD,UAAU;oBACR,YAAY,SAAS;gBACvB;YACF;SACD;IACH;IACA,IAAI,CAAC,WAAW;YACM;QAApB,MAAM,WAAW,IAAG,qBAAA,MAAM,WAAW,cAAjB,yCAAA,mBAAmB,GAAG,CAAC,CAAC;gBACtC;YAAJ,KAAI,uBAAA,WAAW,QAAQ,cAAnB,2CAAA,qBAAqB,SAAS,EAChC,OAAO,WAAW,QAAQ,CAAC,SAAS;YACtC,OAAO;QACT;IACF;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2431, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/%40shikijs/engine-oniguruma/dist/index.mjs"],"sourcesContent":["class ShikiError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ShikiError\";\n  }\n}\n\nfunction getHeapMax() {\n  return 2147483648;\n}\nfunction _emscripten_get_now() {\n  return typeof performance !== \"undefined\" ? performance.now() : Date.now();\n}\nconst alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\nasync function main(init) {\n  let wasmMemory;\n  let buffer;\n  const binding = {};\n  function updateGlobalBufferAndViews(buf) {\n    buffer = buf;\n    binding.HEAPU8 = new Uint8Array(buf);\n    binding.HEAPU32 = new Uint32Array(buf);\n  }\n  function _emscripten_memcpy_big(dest, src, num) {\n    binding.HEAPU8.copyWithin(dest, src, src + num);\n  }\n  function emscripten_realloc_buffer(size) {\n    try {\n      wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n      updateGlobalBufferAndViews(wasmMemory.buffer);\n      return 1;\n    } catch {\n    }\n  }\n  function _emscripten_resize_heap(requestedSize) {\n    const oldSize = binding.HEAPU8.length;\n    requestedSize = requestedSize >>> 0;\n    const maxHeapSize = getHeapMax();\n    if (requestedSize > maxHeapSize)\n      return false;\n    for (let cutDown = 1; cutDown <= 4; cutDown *= 2) {\n      let overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n      overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n      const newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n      const replacement = emscripten_realloc_buffer(newSize);\n      if (replacement)\n        return true;\n    }\n    return false;\n  }\n  const UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : void 0;\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead = 1024) {\n    const endIdx = idx + maxBytesToRead;\n    let endPtr = idx;\n    while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n    if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n      return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n    }\n    let str = \"\";\n    while (idx < endPtr) {\n      let u0 = heapOrArray[idx++];\n      if (!(u0 & 128)) {\n        str += String.fromCharCode(u0);\n        continue;\n      }\n      const u1 = heapOrArray[idx++] & 63;\n      if ((u0 & 224) === 192) {\n        str += String.fromCharCode((u0 & 31) << 6 | u1);\n        continue;\n      }\n      const u2 = heapOrArray[idx++] & 63;\n      if ((u0 & 240) === 224) {\n        u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n      } else {\n        u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n      }\n      if (u0 < 65536) {\n        str += String.fromCharCode(u0);\n      } else {\n        const ch = u0 - 65536;\n        str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n      }\n    }\n    return str;\n  }\n  function UTF8ToString(ptr, maxBytesToRead) {\n    return ptr ? UTF8ArrayToString(binding.HEAPU8, ptr, maxBytesToRead) : \"\";\n  }\n  const asmLibraryArg = {\n    emscripten_get_now: _emscripten_get_now,\n    emscripten_memcpy_big: _emscripten_memcpy_big,\n    emscripten_resize_heap: _emscripten_resize_heap,\n    fd_write: () => 0\n  };\n  async function createWasm() {\n    const info = {\n      env: asmLibraryArg,\n      wasi_snapshot_preview1: asmLibraryArg\n    };\n    const exports = await init(info);\n    wasmMemory = exports.memory;\n    updateGlobalBufferAndViews(wasmMemory.buffer);\n    Object.assign(binding, exports);\n    binding.UTF8ToString = UTF8ToString;\n  }\n  await createWasm();\n  return binding;\n}\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nlet onigBinding = null;\nfunction throwLastOnigError(onigBinding2) {\n  throw new ShikiError(onigBinding2.UTF8ToString(onigBinding2.getLastOnigError()));\n}\nclass UtfString {\n  constructor(str) {\n    __publicField(this, \"utf16Length\");\n    __publicField(this, \"utf8Length\");\n    __publicField(this, \"utf16Value\");\n    __publicField(this, \"utf8Value\");\n    __publicField(this, \"utf16OffsetToUtf8\");\n    __publicField(this, \"utf8OffsetToUtf16\");\n    const utf16Length = str.length;\n    const utf8Length = UtfString._utf8ByteLength(str);\n    const computeIndicesMapping = utf8Length !== utf16Length;\n    const utf16OffsetToUtf8 = computeIndicesMapping ? new Uint32Array(utf16Length + 1) : null;\n    if (computeIndicesMapping)\n      utf16OffsetToUtf8[utf16Length] = utf8Length;\n    const utf8OffsetToUtf16 = computeIndicesMapping ? new Uint32Array(utf8Length + 1) : null;\n    if (computeIndicesMapping)\n      utf8OffsetToUtf16[utf8Length] = utf16Length;\n    const utf8Value = new Uint8Array(utf8Length);\n    let i8 = 0;\n    for (let i16 = 0; i16 < utf16Length; i16++) {\n      const charCode = str.charCodeAt(i16);\n      let codePoint = charCode;\n      let wasSurrogatePair = false;\n      if (charCode >= 55296 && charCode <= 56319) {\n        if (i16 + 1 < utf16Length) {\n          const nextCharCode = str.charCodeAt(i16 + 1);\n          if (nextCharCode >= 56320 && nextCharCode <= 57343) {\n            codePoint = (charCode - 55296 << 10) + 65536 | nextCharCode - 56320;\n            wasSurrogatePair = true;\n          }\n        }\n      }\n      if (computeIndicesMapping) {\n        utf16OffsetToUtf8[i16] = i8;\n        if (wasSurrogatePair)\n          utf16OffsetToUtf8[i16 + 1] = i8;\n        if (codePoint <= 127) {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n        } else if (codePoint <= 2047) {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n          utf8OffsetToUtf16[i8 + 1] = i16;\n        } else if (codePoint <= 65535) {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n          utf8OffsetToUtf16[i8 + 1] = i16;\n          utf8OffsetToUtf16[i8 + 2] = i16;\n        } else {\n          utf8OffsetToUtf16[i8 + 0] = i16;\n          utf8OffsetToUtf16[i8 + 1] = i16;\n          utf8OffsetToUtf16[i8 + 2] = i16;\n          utf8OffsetToUtf16[i8 + 3] = i16;\n        }\n      }\n      if (codePoint <= 127) {\n        utf8Value[i8++] = codePoint;\n      } else if (codePoint <= 2047) {\n        utf8Value[i8++] = 192 | (codePoint & 1984) >>> 6;\n        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;\n      } else if (codePoint <= 65535) {\n        utf8Value[i8++] = 224 | (codePoint & 61440) >>> 12;\n        utf8Value[i8++] = 128 | (codePoint & 4032) >>> 6;\n        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;\n      } else {\n        utf8Value[i8++] = 240 | (codePoint & 1835008) >>> 18;\n        utf8Value[i8++] = 128 | (codePoint & 258048) >>> 12;\n        utf8Value[i8++] = 128 | (codePoint & 4032) >>> 6;\n        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;\n      }\n      if (wasSurrogatePair)\n        i16++;\n    }\n    this.utf16Length = utf16Length;\n    this.utf8Length = utf8Length;\n    this.utf16Value = str;\n    this.utf8Value = utf8Value;\n    this.utf16OffsetToUtf8 = utf16OffsetToUtf8;\n    this.utf8OffsetToUtf16 = utf8OffsetToUtf16;\n  }\n  static _utf8ByteLength(str) {\n    let result = 0;\n    for (let i = 0, len = str.length; i < len; i++) {\n      const charCode = str.charCodeAt(i);\n      let codepoint = charCode;\n      let wasSurrogatePair = false;\n      if (charCode >= 55296 && charCode <= 56319) {\n        if (i + 1 < len) {\n          const nextCharCode = str.charCodeAt(i + 1);\n          if (nextCharCode >= 56320 && nextCharCode <= 57343) {\n            codepoint = (charCode - 55296 << 10) + 65536 | nextCharCode - 56320;\n            wasSurrogatePair = true;\n          }\n        }\n      }\n      if (codepoint <= 127)\n        result += 1;\n      else if (codepoint <= 2047)\n        result += 2;\n      else if (codepoint <= 65535)\n        result += 3;\n      else\n        result += 4;\n      if (wasSurrogatePair)\n        i++;\n    }\n    return result;\n  }\n  createString(onigBinding2) {\n    const result = onigBinding2.omalloc(this.utf8Length);\n    onigBinding2.HEAPU8.set(this.utf8Value, result);\n    return result;\n  }\n}\nconst _OnigString = class _OnigString {\n  constructor(str) {\n    __publicField(this, \"id\", ++_OnigString.LAST_ID);\n    __publicField(this, \"_onigBinding\");\n    __publicField(this, \"content\");\n    __publicField(this, \"utf16Length\");\n    __publicField(this, \"utf8Length\");\n    __publicField(this, \"utf16OffsetToUtf8\");\n    __publicField(this, \"utf8OffsetToUtf16\");\n    __publicField(this, \"ptr\");\n    if (!onigBinding)\n      throw new ShikiError(\"Must invoke loadWasm first.\");\n    this._onigBinding = onigBinding;\n    this.content = str;\n    const utfString = new UtfString(str);\n    this.utf16Length = utfString.utf16Length;\n    this.utf8Length = utfString.utf8Length;\n    this.utf16OffsetToUtf8 = utfString.utf16OffsetToUtf8;\n    this.utf8OffsetToUtf16 = utfString.utf8OffsetToUtf16;\n    if (this.utf8Length < 1e4 && !_OnigString._sharedPtrInUse) {\n      if (!_OnigString._sharedPtr)\n        _OnigString._sharedPtr = onigBinding.omalloc(1e4);\n      _OnigString._sharedPtrInUse = true;\n      onigBinding.HEAPU8.set(utfString.utf8Value, _OnigString._sharedPtr);\n      this.ptr = _OnigString._sharedPtr;\n    } else {\n      this.ptr = utfString.createString(onigBinding);\n    }\n  }\n  convertUtf8OffsetToUtf16(utf8Offset) {\n    if (this.utf8OffsetToUtf16) {\n      if (utf8Offset < 0)\n        return 0;\n      if (utf8Offset > this.utf8Length)\n        return this.utf16Length;\n      return this.utf8OffsetToUtf16[utf8Offset];\n    }\n    return utf8Offset;\n  }\n  convertUtf16OffsetToUtf8(utf16Offset) {\n    if (this.utf16OffsetToUtf8) {\n      if (utf16Offset < 0)\n        return 0;\n      if (utf16Offset > this.utf16Length)\n        return this.utf8Length;\n      return this.utf16OffsetToUtf8[utf16Offset];\n    }\n    return utf16Offset;\n  }\n  dispose() {\n    if (this.ptr === _OnigString._sharedPtr)\n      _OnigString._sharedPtrInUse = false;\n    else\n      this._onigBinding.ofree(this.ptr);\n  }\n};\n__publicField(_OnigString, \"LAST_ID\", 0);\n__publicField(_OnigString, \"_sharedPtr\", 0);\n// a pointer to a string of 10000 bytes\n__publicField(_OnigString, \"_sharedPtrInUse\", false);\nlet OnigString = _OnigString;\nclass OnigScanner {\n  constructor(patterns) {\n    __publicField(this, \"_onigBinding\");\n    __publicField(this, \"_ptr\");\n    if (!onigBinding)\n      throw new ShikiError(\"Must invoke loadWasm first.\");\n    const strPtrsArr = [];\n    const strLenArr = [];\n    for (let i = 0, len = patterns.length; i < len; i++) {\n      const utfString = new UtfString(patterns[i]);\n      strPtrsArr[i] = utfString.createString(onigBinding);\n      strLenArr[i] = utfString.utf8Length;\n    }\n    const strPtrsPtr = onigBinding.omalloc(4 * patterns.length);\n    onigBinding.HEAPU32.set(strPtrsArr, strPtrsPtr / 4);\n    const strLenPtr = onigBinding.omalloc(4 * patterns.length);\n    onigBinding.HEAPU32.set(strLenArr, strLenPtr / 4);\n    const scannerPtr = onigBinding.createOnigScanner(strPtrsPtr, strLenPtr, patterns.length);\n    for (let i = 0, len = patterns.length; i < len; i++)\n      onigBinding.ofree(strPtrsArr[i]);\n    onigBinding.ofree(strLenPtr);\n    onigBinding.ofree(strPtrsPtr);\n    if (scannerPtr === 0)\n      throwLastOnigError(onigBinding);\n    this._onigBinding = onigBinding;\n    this._ptr = scannerPtr;\n  }\n  dispose() {\n    this._onigBinding.freeOnigScanner(this._ptr);\n  }\n  findNextMatchSync(string, startPosition, arg) {\n    let options = 0 /* None */;\n    if (typeof arg === \"number\") {\n      options = arg;\n    }\n    if (typeof string === \"string\") {\n      string = new OnigString(string);\n      const result = this._findNextMatchSync(string, startPosition, false, options);\n      string.dispose();\n      return result;\n    }\n    return this._findNextMatchSync(string, startPosition, false, options);\n  }\n  _findNextMatchSync(string, startPosition, debugCall, options) {\n    const onigBinding2 = this._onigBinding;\n    const resultPtr = onigBinding2.findNextOnigScannerMatch(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);\n    if (resultPtr === 0) {\n      return null;\n    }\n    const HEAPU32 = onigBinding2.HEAPU32;\n    let offset = resultPtr / 4;\n    const index = HEAPU32[offset++];\n    const count = HEAPU32[offset++];\n    const captureIndices = [];\n    for (let i = 0; i < count; i++) {\n      const beg = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n      const end = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n      captureIndices[i] = {\n        start: beg,\n        end,\n        length: end - beg\n      };\n    }\n    return {\n      index,\n      captureIndices\n    };\n  }\n}\nfunction isInstantiatorOptionsObject(dataOrOptions) {\n  return typeof dataOrOptions.instantiator === \"function\";\n}\nfunction isInstantiatorModule(dataOrOptions) {\n  return typeof dataOrOptions.default === \"function\";\n}\nfunction isDataOptionsObject(dataOrOptions) {\n  return typeof dataOrOptions.data !== \"undefined\";\n}\nfunction isResponse(dataOrOptions) {\n  return typeof Response !== \"undefined\" && dataOrOptions instanceof Response;\n}\nfunction isArrayBuffer(data) {\n  return typeof ArrayBuffer !== \"undefined\" && (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) || typeof Buffer !== \"undefined\" && Buffer.isBuffer?.(data) || typeof SharedArrayBuffer !== \"undefined\" && data instanceof SharedArrayBuffer || typeof Uint32Array !== \"undefined\" && data instanceof Uint32Array;\n}\nlet initPromise;\nfunction loadWasm(options) {\n  if (initPromise)\n    return initPromise;\n  async function _load() {\n    onigBinding = await main(async (info) => {\n      let instance = options;\n      instance = await instance;\n      if (typeof instance === \"function\")\n        instance = await instance(info);\n      if (typeof instance === \"function\")\n        instance = await instance(info);\n      if (isInstantiatorOptionsObject(instance)) {\n        instance = await instance.instantiator(info);\n      } else if (isInstantiatorModule(instance)) {\n        instance = await instance.default(info);\n      } else {\n        if (isDataOptionsObject(instance))\n          instance = instance.data;\n        if (isResponse(instance)) {\n          if (typeof WebAssembly.instantiateStreaming === \"function\")\n            instance = await _makeResponseStreamingLoader(instance)(info);\n          else\n            instance = await _makeResponseNonStreamingLoader(instance)(info);\n        } else if (isArrayBuffer(instance)) {\n          instance = await _makeArrayBufferLoader(instance)(info);\n        } else if (instance instanceof WebAssembly.Module) {\n          instance = await _makeArrayBufferLoader(instance)(info);\n        } else if (\"default\" in instance && instance.default instanceof WebAssembly.Module) {\n          instance = await _makeArrayBufferLoader(instance.default)(info);\n        }\n      }\n      if (\"instance\" in instance)\n        instance = instance.instance;\n      if (\"exports\" in instance)\n        instance = instance.exports;\n      return instance;\n    });\n  }\n  initPromise = _load();\n  return initPromise;\n}\nfunction _makeArrayBufferLoader(data) {\n  return (importObject) => WebAssembly.instantiate(data, importObject);\n}\nfunction _makeResponseStreamingLoader(data) {\n  return (importObject) => WebAssembly.instantiateStreaming(data, importObject);\n}\nfunction _makeResponseNonStreamingLoader(data) {\n  return async (importObject) => {\n    const arrayBuffer = await data.arrayBuffer();\n    return WebAssembly.instantiate(arrayBuffer, importObject);\n  };\n}\n\nlet _defaultWasmLoader;\nfunction setDefaultWasmLoader(_loader) {\n  _defaultWasmLoader = _loader;\n}\nfunction getDefaultWasmLoader() {\n  return _defaultWasmLoader;\n}\nasync function createOnigurumaEngine(options) {\n  if (options)\n    await loadWasm(options);\n  return {\n    createScanner(patterns) {\n      return new OnigScanner(patterns.map((p) => typeof p === \"string\" ? p : p.source));\n    },\n    createString(s) {\n      return new OnigString(s);\n    }\n  };\n}\n\nexport { createOnigurumaEngine, getDefaultWasmLoader, loadWasm, setDefaultWasmLoader };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2865, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/%40shikijs/engine-javascript/dist/shared/engine-javascript.hzpS1_41.mjs"],"sourcesContent":["const MAX = 4294967295;\nclass JavaScriptScanner {\n  constructor(patterns, options = {}) {\n    this.patterns = patterns;\n    this.options = options;\n    const {\n      forgiving = false,\n      cache,\n      regexConstructor\n    } = options;\n    if (!regexConstructor) {\n      throw new Error(\"Option `regexConstructor` is not provided\");\n    }\n    this.regexps = patterns.map((p) => {\n      if (typeof p !== \"string\") {\n        return p;\n      }\n      const cached = cache?.get(p);\n      if (cached) {\n        if (cached instanceof RegExp) {\n          return cached;\n        }\n        if (forgiving)\n          return null;\n        throw cached;\n      }\n      try {\n        const regex = regexConstructor(p);\n        cache?.set(p, regex);\n        return regex;\n      } catch (e) {\n        cache?.set(p, e);\n        if (forgiving)\n          return null;\n        throw e;\n      }\n    });\n  }\n  regexps;\n  findNextMatchSync(string, startPosition, _options) {\n    const str = typeof string === \"string\" ? string : string.content;\n    const pending = [];\n    function toResult(index, match, offset = 0) {\n      return {\n        index,\n        captureIndices: match.indices.map((indice) => {\n          if (indice == null) {\n            return {\n              start: MAX,\n              end: MAX,\n              length: 0\n            };\n          }\n          return {\n            start: indice[0] + offset,\n            end: indice[1] + offset,\n            length: indice[1] - indice[0]\n          };\n        })\n      };\n    }\n    for (let i = 0; i < this.regexps.length; i++) {\n      const regexp = this.regexps[i];\n      if (!regexp)\n        continue;\n      try {\n        regexp.lastIndex = startPosition;\n        const match = regexp.exec(str);\n        if (!match)\n          continue;\n        if (match.index === startPosition) {\n          return toResult(i, match, 0);\n        }\n        pending.push([i, match, 0]);\n      } catch (e) {\n        if (this.options.forgiving)\n          continue;\n        throw e;\n      }\n    }\n    if (pending.length) {\n      const minIndex = Math.min(...pending.map((m) => m[1].index));\n      for (const [i, match, offset] of pending) {\n        if (match.index === minIndex) {\n          return toResult(i, match, offset);\n        }\n      }\n    }\n    return null;\n  }\n}\n\nexport { JavaScriptScanner as J };\n"],"names":[],"mappings":";;;;;;AAAA,MAAM,MAAM;AACZ,MAAM;IAsCJ,kBAAkB,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE;QACjD,MAAM,MAAM,OAAO,WAAW,WAAW,SAAS,OAAO,OAAO;QAChE,MAAM,UAAU,EAAE;QAClB,SAAS,SAAS,KAAK,EAAE,KAAK;gBAAE,SAAA,iEAAS;YACvC,OAAO;gBACL;gBACA,gBAAgB,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC;oBACjC,IAAI,UAAU,MAAM;wBAClB,OAAO;4BACL,OAAO;4BACP,KAAK;4BACL,QAAQ;wBACV;oBACF;oBACA,OAAO;wBACL,OAAO,MAAM,CAAC,EAAE,GAAG;wBACnB,KAAK,MAAM,CAAC,EAAE,GAAG;wBACjB,QAAQ,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;oBAC/B;gBACF;YACF;QACF;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAK;YAC5C,MAAM,SAAS,IAAI,CAAC,OAAO,CAAC,EAAE;YAC9B,IAAI,CAAC,QACH;YACF,IAAI;gBACF,OAAO,SAAS,GAAG;gBACnB,MAAM,QAAQ,OAAO,IAAI,CAAC;gBAC1B,IAAI,CAAC,OACH;gBACF,IAAI,MAAM,KAAK,KAAK,eAAe;oBACjC,OAAO,SAAS,GAAG,OAAO;gBAC5B;gBACA,QAAQ,IAAI,CAAC;oBAAC;oBAAG;oBAAO;iBAAE;YAC5B,EAAE,OAAO,GAAG;gBACV,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EACxB;gBACF,MAAM;YACR;QACF;QACA,IAAI,QAAQ,MAAM,EAAE;YAClB,MAAM,WAAW,KAAK,GAAG,IAAI,QAAQ,GAAG,CAAC,CAAC,IAAM,CAAC,CAAC,EAAE,CAAC,KAAK;YAC1D,KAAK,MAAM,CAAC,GAAG,OAAO,OAAO,IAAI,QAAS;gBACxC,IAAI,MAAM,KAAK,KAAK,UAAU;oBAC5B,OAAO,SAAS,GAAG,OAAO;gBAC5B;YACF;QACF;QACA,OAAO;IACT;IAvFA,YAAY,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAE;QAoCpC,+KAAA,WAAA,KAAA;QAnCE,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,OAAO,GAAG;QACf,MAAM,EACJ,YAAY,KAAK,EACjB,KAAK,EACL,gBAAgB,EACjB,GAAG;QACJ,IAAI,CAAC,kBAAkB;YACrB,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,CAAC,CAAC;YAC3B,IAAI,OAAO,MAAM,UAAU;gBACzB,OAAO;YACT;YACA,MAAM,SAAS,kBAAA,4BAAA,MAAO,GAAG,CAAC;YAC1B,IAAI,QAAQ;gBACV,IAAI,kBAAkB,QAAQ;oBAC5B,OAAO;gBACT;gBACA,IAAI,WACF,OAAO;gBACT,MAAM;YACR;YACA,IAAI;gBACF,MAAM,QAAQ,iBAAiB;gBAC/B,kBAAA,4BAAA,MAAO,GAAG,CAAC,GAAG;gBACd,OAAO;YACT,EAAE,OAAO,GAAG;gBACV,kBAAA,4BAAA,MAAO,GAAG,CAAC,GAAG;gBACd,IAAI,WACF,OAAO;gBACT,MAAM;YACR;QACF;IACF;AAqDF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2963, "column": 0}, "map": {"version":3,"sources":["file:///D:/github/nakafa.com-main/node_modules/%40shikijs/engine-javascript/dist/engine-compile.mjs"],"sourcesContent":["import { toRegExp } from 'oniguruma-to-es';\nimport { J as JavaScriptScanner } from './shared/engine-javascript.hzpS1_41.mjs';\n\nfunction defaultJavaScriptRegexConstructor(pattern, options) {\n  return toRegExp(\n    pattern,\n    {\n      global: true,\n      hasIndices: true,\n      // This has no benefit for the standard JS engine, but it avoids a perf penalty for\n      // precompiled grammars when constructing extremely long patterns that aren't always used\n      lazyCompileLength: 3e3,\n      rules: {\n        // Needed since TextMate grammars merge backrefs across patterns\n        allowOrphanBackrefs: true,\n        // Improves search performance for generated regexes\n        asciiWordBoundaries: true,\n        // Follow `vscode-oniguruma` which enables this Oniguruma option by default\n        captureGroup: true,\n        // Oniguruma uses depth limit `20`; lowered here to keep regexes shorter and maybe\n        // sometimes faster, but can be increased if issues reported due to low limit\n        recursionLimit: 5,\n        // Oniguruma option for `^`->`\\A`, `$`->`\\Z`; improves search performance without any\n        // change in meaning since TM grammars search line by line\n        singleline: true\n      },\n      ...options\n    }\n  );\n}\nfunction createJavaScriptRegexEngine(options = {}) {\n  const _options = Object.assign(\n    {\n      target: \"auto\",\n      cache: /* @__PURE__ */ new Map()\n    },\n    options\n  );\n  _options.regexConstructor ||= (pattern) => defaultJavaScriptRegexConstructor(pattern, { target: _options.target });\n  return {\n    createScanner(patterns) {\n      return new JavaScriptScanner(patterns, _options);\n    },\n    createString(s) {\n      return {\n        content: s\n      };\n    }\n  };\n}\n\nexport { createJavaScriptRegexEngine, defaultJavaScriptRegexConstructor };\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEA,SAAS,kCAAkC,OAAO,EAAE,OAAO;IACzD,OAAO,IAAA,4KAAQ,EACb,SACA;QACE,QAAQ;QACR,YAAY;QACZ,mFAAmF;QACnF,yFAAyF;QACzF,mBAAmB;QACnB,OAAO;YACL,gEAAgE;YAChE,qBAAqB;YACrB,oDAAoD;YACpD,qBAAqB;YACrB,2EAA2E;YAC3E,cAAc;YACd,kFAAkF;YAClF,6EAA6E;YAC7E,gBAAgB;YAChB,qFAAqF;YACrF,0DAA0D;YAC1D,YAAY;QACd;QACA,GAAG,OAAO;IACZ;AAEJ;AACA,SAAS;QAA4B,UAAA,iEAAU,CAAC;QAQ9C;IAPA,MAAM,YAAW,OAAO,MAAM,CAC5B;QACE,QAAQ;QACR,OAAO,aAAa,GAAG,IAAI;IAC7B,GACA;IAEF,CAAA,WAAA,WAAS,qBAAT,SAAS,mBAAqB,CAAC,UAAY,kCAAkC,SAAS;YAAE,QAAQ,UAAS,MAAM;QAAC;IAChH,OAAO;QACL,eAAc,QAAQ;YACpB,OAAO,IAAI,gNAAiB,CAAC,UAAU;QACzC;QACA,cAAa,CAAC;YACZ,OAAO;gBACL,SAAS;YACX;QACF;IACF;AACF","ignoreList":[0],"debugId":null}}]
}